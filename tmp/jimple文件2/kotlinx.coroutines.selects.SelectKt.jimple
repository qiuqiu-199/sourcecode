public final class kotlinx.coroutines.selects.SelectKt extends java.lang.Object
{
    private static final java.lang.Object ALREADY_SELECTED;
    private static final java.lang.Object NOT_SELECTED;
    private static final java.lang.Object RESUMED;
    private static final java.lang.Object UNDECIDED;
    private static final kotlinx.coroutines.selects.SeqNumber selectOpSequenceNumber;

    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;
        kotlinx.coroutines.selects.SeqNumber $r1;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("NOT_SELECTED");

        <kotlinx.coroutines.selects.SelectKt: java.lang.Object NOT_SELECTED> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("ALREADY_SELECTED");

        <kotlinx.coroutines.selects.SelectKt: java.lang.Object ALREADY_SELECTED> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("UNDECIDED");

        <kotlinx.coroutines.selects.SelectKt: java.lang.Object UNDECIDED> = $r0;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("RESUMED");

        <kotlinx.coroutines.selects.SelectKt: java.lang.Object RESUMED> = $r0;

        $r1 = new kotlinx.coroutines.selects.SeqNumber;

        specialinvoke $r1.<kotlinx.coroutines.selects.SeqNumber: void <init>()>();

        <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.SeqNumber selectOpSequenceNumber> = $r1;

        return;
    }

    public static final java.lang.Object access$getRESUMED$p()
    {
        java.lang.Object r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: java.lang.Object RESUMED>;

        return r0;
    }

    public static final kotlinx.coroutines.selects.SeqNumber access$getSelectOpSequenceNumber$p()
    {
        kotlinx.coroutines.selects.SeqNumber r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.SeqNumber selectOpSequenceNumber>;

        return r0;
    }

    public static final java.lang.Object access$getUNDECIDED$p()
    {
        java.lang.Object r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: java.lang.Object UNDECIDED>;

        return r0;
    }

    public static final java.lang.Object getALREADY_SELECTED()
    {
        java.lang.Object r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: java.lang.Object ALREADY_SELECTED>;

        return r0;
    }

    public static void getALREADY_SELECTED$annotations()
    {
        return;
    }

    public static final java.lang.Object getNOT_SELECTED()
    {
        java.lang.Object r0;

        r0 = <kotlinx.coroutines.selects.SelectKt: java.lang.Object NOT_SELECTED>;

        return r0;
    }

    public static void getNOT_SELECTED$annotations()
    {
        return;
    }

    private static void getRESUMED$annotations()
    {
        return;
    }

    private static void getSelectOpSequenceNumber$annotations()
    {
        return;
    }

    private static void getUNDECIDED$annotations()
    {
        return;
    }

    public static final void onTimeout-8Mi8wO0(kotlinx.coroutines.selects.SelectBuilder, long, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.selects.SelectBuilder $r0;
        kotlin.jvm.functions.Function1 $r1;
        long $l0;

        $r0 := @parameter0: kotlinx.coroutines.selects.SelectBuilder;

        $l0 := @parameter1: long;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $l0 = staticinvoke <kotlinx.coroutines.DelayKt: long toDelayMillis-LRDsOJo(long)>($l0);

        interfaceinvoke $r0.<kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,kotlin.jvm.functions.Function1)>($l0, $r1);

        return;
    }

    public static final java.lang.Object select(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.selects.SelectBuilderImpl $r2;
        java.lang.Throwable $r3;
        java.lang.Object $r4, $r5;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.selects.SelectBuilderImpl;

        specialinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r0);

     label1:
        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>($r3);

     label4:
        $r4 = virtualinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r0);

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static final java.lang.Object select$$forInline(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.selects.SelectBuilderImpl $r2;
        java.lang.Throwable $r3;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r2 = new kotlinx.coroutines.selects.SelectBuilderImpl;

        specialinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r1);

     label1:
        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>($r3);

     label4:
        $r4 = virtualinvoke $r2.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()>();

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label5:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
