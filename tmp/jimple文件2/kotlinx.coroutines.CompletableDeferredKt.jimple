public final class kotlinx.coroutines.CompletableDeferredKt extends java.lang.Object
{

    public static final kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.CompletableDeferredImpl $r1;
        kotlinx.coroutines.CompletableDeferred $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new kotlinx.coroutines.CompletableDeferredImpl;

        specialinvoke $r1.<kotlinx.coroutines.CompletableDeferredImpl: void <init>(kotlinx.coroutines.Job)>(null);

        virtualinvoke $r1.<kotlinx.coroutines.CompletableDeferredImpl: boolean complete(java.lang.Object)>($r0);

        $r2 = (kotlinx.coroutines.CompletableDeferred) $r1;

        return $r2;
    }

    public static final kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.Job $r0;
        kotlinx.coroutines.CompletableDeferredImpl $r1;
        kotlinx.coroutines.CompletableDeferred $r2;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        $r1 = new kotlinx.coroutines.CompletableDeferredImpl;

        specialinvoke $r1.<kotlinx.coroutines.CompletableDeferredImpl: void <init>(kotlinx.coroutines.Job)>($r0);

        $r2 = (kotlinx.coroutines.CompletableDeferred) $r1;

        return $r2;
    }

    public static kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.CompletableDeferred $r1;
        kotlinx.coroutines.Job $r2;
        int $i0;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)>($r2);

        return $r1;
    }

    public static final boolean completeWith(kotlinx.coroutines.CompletableDeferred, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.CompletableDeferred $r1;
        java.lang.Throwable $r2;
        boolean $z0;

        $r1 := @parameter0: kotlinx.coroutines.CompletableDeferred;

        $r0 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r0);

        if $r2 != null goto label1;

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r0);

        return $z0;

     label1:
        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)>($r2);

        return $z0;
    }
}
