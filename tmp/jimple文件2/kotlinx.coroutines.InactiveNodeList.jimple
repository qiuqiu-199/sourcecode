public final class kotlinx.coroutines.InactiveNodeList extends java.lang.Object implements kotlinx.coroutines.Incomplete
{
    private final kotlinx.coroutines.NodeList list;

    public void <init>(kotlinx.coroutines.NodeList)
    {
        kotlinx.coroutines.InactiveNodeList r0;
        kotlinx.coroutines.NodeList $r1;

        r0 := @this: kotlinx.coroutines.InactiveNodeList;

        $r1 := @parameter0: kotlinx.coroutines.NodeList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list> = $r1;

        return;
    }

    public kotlinx.coroutines.NodeList getList()
    {
        kotlinx.coroutines.InactiveNodeList r0;
        kotlinx.coroutines.NodeList r1;

        r0 := @this: kotlinx.coroutines.InactiveNodeList;

        r1 = r0.<kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list>;

        return r1;
    }

    public boolean isActive()
    {
        kotlinx.coroutines.InactiveNodeList r0;

        r0 := @this: kotlinx.coroutines.InactiveNodeList;

        return 0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.InactiveNodeList r0;
        boolean $z0;
        kotlinx.coroutines.NodeList $r1;
        java.lang.String $r2;

        r0 := @this: kotlinx.coroutines.InactiveNodeList;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getDEBUG()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()>();

        $r2 = virtualinvoke $r1.<kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)>("New");

        return $r2;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
