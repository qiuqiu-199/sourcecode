public final class kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlin.jvm.internal.Ref$IntRef $index$inlined;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined;

    public void <init>(kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.internal.Ref$IntRef)
    {
        kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.jvm.internal.Ref$IntRef $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$IntRef;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $index$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.collections.IndexedValue $r2;
        kotlin.jvm.internal.Ref$IntRef $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        kotlin.coroutines.Continuation $r5;
        java.lang.ArithmeticException $r7;
        kotlin.Unit r8;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1;

        $r4 := @parameter0: java.lang.Object;

        $r5 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined>;

        $r2 = new kotlin.collections.IndexedValue;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $index$inlined>;

        $i1 = $r3.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $index$inlined>;

        $i0 = $i1 + 1;

        $r3.<kotlin.jvm.internal.Ref$IntRef: int element> = $i0;

        if $i1 < 0 goto label2;

        specialinvoke $r2.<kotlin.collections.IndexedValue: void <init>(int,java.lang.Object)>($i1, $r4);

        $r4 = interfaceinvoke $r1.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r5);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r6 goto label1;

        return $r4;

     label1:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;

     label2:
        $r7 = new java.lang.ArithmeticException;

        specialinvoke $r7.<java.lang.ArithmeticException: void <init>(java.lang.String)>("Index overflow has happened");

        throw $r7;
    }
}
