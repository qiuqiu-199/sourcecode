final class kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1
{
    final kotlinx.coroutines.CompletableJob $collectJob;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;

    void <init>(kotlinx.coroutines.CompletableJob, kotlinx.coroutines.flow.FlowCollector)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlinx.coroutines.CompletableJob $r2;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1;

        $r2 := @parameter0: kotlinx.coroutines.CompletableJob;

        $r1 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1 r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        kotlin.Unit r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: void invoke(java.lang.Throwable)>($r2);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public final void invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        kotlinx.coroutines.CompletableJob $r3;
        kotlinx.coroutines.flow.internal.AbortFlowException $r4;
        java.util.concurrent.CancellationException $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1;

        $r2 := @parameter0: java.lang.Throwable;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob>;

        $z0 = interfaceinvoke $r3.<kotlinx.coroutines.CompletableJob: boolean isActive()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob>;

        $r4 = new kotlinx.coroutines.flow.internal.AbortFlowException;

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        specialinvoke $r4.<kotlinx.coroutines.flow.internal.AbortFlowException: void <init>(kotlinx.coroutines.flow.FlowCollector)>($r1);

        $r5 = (java.util.concurrent.CancellationException) $r4;

        interfaceinvoke $r3.<kotlinx.coroutines.CompletableJob: void cancel(java.util.concurrent.CancellationException)>($r5);

     label1:
        return;
    }
}
