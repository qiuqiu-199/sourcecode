final class kotlinx.coroutines.InvokeOnCancelling extends kotlinx.coroutines.JobCancellingNode
{
    private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU;
    private volatile int _invoked;
    private final kotlin.jvm.functions.Function1 handler;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/InvokeOnCancelling;", "_invoked");

        <kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU> = $r0;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.InvokeOnCancelling r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: kotlinx.coroutines.InvokeOnCancelling;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        specialinvoke r0.<kotlinx.coroutines.JobCancellingNode: void <init>()>();

        r0.<kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler> = $r1;

        r0.<kotlinx.coroutines.InvokeOnCancelling: int _invoked> = 0;

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.InvokeOnCancelling r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        kotlin.Unit r3;

        r0 := @this: kotlinx.coroutines.InvokeOnCancelling;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)>($r2);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public void invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.InvokeOnCancelling r0;
        java.lang.Throwable $r1;
        boolean $z0;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: kotlinx.coroutines.InvokeOnCancelling;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = <kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(r0, 0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler>;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

     label1:
        return;
    }
}
