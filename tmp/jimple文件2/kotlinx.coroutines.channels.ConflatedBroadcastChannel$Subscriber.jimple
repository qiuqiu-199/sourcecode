final class kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber extends kotlinx.coroutines.channels.ConflatedChannel implements kotlinx.coroutines.channels.ReceiveChannel
{
    private final kotlinx.coroutines.channels.ConflatedBroadcastChannel broadcastChannel;

    public void <init>(kotlinx.coroutines.channels.ConflatedBroadcastChannel)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        $r1 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        specialinvoke r0.<kotlinx.coroutines.channels.ConflatedChannel: void <init>(kotlin.jvm.functions.Function1)>(null);

        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: kotlinx.coroutines.channels.ConflatedBroadcastChannel broadcastChannel> = $r1;

        return;
    }

    public java.lang.Object offerInternal(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        $r1 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)>($r1);

        return $r1;
    }

    protected void onCancelIdempotent(boolean)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber r0;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r1 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: kotlinx.coroutines.channels.ConflatedBroadcastChannel broadcastChannel>;

        staticinvoke <kotlinx.coroutines.channels.ConflatedBroadcastChannel: void access$closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)>($r1, r0);

     label1:
        return;
    }
}
