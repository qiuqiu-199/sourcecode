final class kotlinx.coroutines.flow.SubscribedSharedFlow extends java.lang.Object implements kotlinx.coroutines.flow.SharedFlow
{
    private final kotlin.jvm.functions.Function2 action;
    private final kotlinx.coroutines.flow.SharedFlow sharedFlow;

    public void <init>(kotlinx.coroutines.flow.SharedFlow, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.SubscribedSharedFlow r0;
        kotlinx.coroutines.flow.SharedFlow $r1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: kotlinx.coroutines.flow.SubscribedSharedFlow;

        $r1 := @parameter0: kotlinx.coroutines.flow.SharedFlow;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow> = $r1;

        r0.<kotlinx.coroutines.flow.SubscribedSharedFlow: kotlin.jvm.functions.Function2 action> = $r2;

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.SubscribedSharedFlow r0;
        kotlinx.coroutines.flow.SharedFlow $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.SubscribedFlowCollector $r5;
        java.lang.Object $r6, $r7;
        kotlin.Unit r8;

        r0 := @this: kotlinx.coroutines.flow.SubscribedSharedFlow;

        $r3 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r4 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = r0.<kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow>;

        $r5 = new kotlinx.coroutines.flow.SubscribedFlowCollector;

        $r2 = r0.<kotlinx.coroutines.flow.SubscribedSharedFlow: kotlin.jvm.functions.Function2 action>;

        specialinvoke $r5.<kotlinx.coroutines.flow.SubscribedFlowCollector: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)>($r3, $r2);

        $r3 = (kotlinx.coroutines.flow.FlowCollector) $r5;

        $r6 = interfaceinvoke $r1.<kotlinx.coroutines.flow.SharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }

    public java.util.List getReplayCache()
    {
        kotlinx.coroutines.flow.SubscribedSharedFlow r0;
        java.util.List $r1;
        kotlinx.coroutines.flow.SharedFlow $r2;

        r0 := @this: kotlinx.coroutines.flow.SubscribedSharedFlow;

        $r2 = r0.<kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow>;

        $r1 = interfaceinvoke $r2.<kotlinx.coroutines.flow.SharedFlow: java.util.List getReplayCache()>();

        return $r1;
    }
}
