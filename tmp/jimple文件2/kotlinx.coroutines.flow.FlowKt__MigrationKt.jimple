final class kotlinx.coroutines.flow.FlowKt__MigrationKt extends java.lang.Object
{

    public static final kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0, $r2;
        kotlin.jvm.functions.Function3 $r1;

        $r2 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r2, $r0, $r1);

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r3;
        kotlin.jvm.functions.Function4 $r2;

        $r3 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter3: kotlin.jvm.functions.Function4;

        $r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)>($r3, $r0, $r1, $r2);

        return $r3;
    }

    public static final kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function5)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r4;
        kotlin.jvm.functions.Function5 $r3;

        $r4 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter4: kotlin.jvm.functions.Function5;

        $r4 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)>($r4, $r0, $r1, $r2, $r3);

        return $r4;
    }

    public static final kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function6)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1, $r2, $r3, $r5;
        kotlin.jvm.functions.Function6 $r4;

        $r5 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter3: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter4: kotlinx.coroutines.flow.Flow;

        $r4 := @parameter5: kotlin.jvm.functions.Function6;

        $r5 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)>($r5, $r0, $r1, $r2, $r3, $r4);

        return $r5;
    }

    public static final kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow, long)
    {
        long $l0;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1 $r1;
        kotlin.jvm.functions.Function2 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $l0 := @parameter1: long;

        $r1 = new kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: void <init>(long,kotlin.coroutines.Continuation)>($l0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r0, $r2);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow, long)
    {
        long $l0;
        kotlinx.coroutines.flow.Flow $r0;
        kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1 $r1;
        kotlin.jvm.functions.Function2 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $l0 := @parameter1: long;

        $r1 = new kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1;

        specialinvoke $r1.<kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: void <init>(long,kotlin.coroutines.Continuation)>($l0, null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r0 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r0, $r2);

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final void forEach(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final java.lang.Void noImpl()
    {
        java.lang.UnsupportedOperationException $r0;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented, should not be called");

        throw $r0;
    }

    public static final kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2 $r3;
        kotlin.jvm.functions.Function3 $r4;

        $r2 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 = new kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: void <init>(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r0, null);

        $r4 = (kotlin.jvm.functions.Function3) $r3;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow 'catch'(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r2, $r4);

        return $r2;
    }

    public static kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.jvm.functions.Function1 $r3;
        int $i0;
        kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1 $r4;

        $r2 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.jvm.functions.Function1;

        $i0 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r4 = <kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r4;

     label1:
        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)>($r2, $r0, $r3);

        return $r2;
    }

    public static final kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow, int)
    {
        int $i0;
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $i0 := @parameter1: int;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow, int)
    {
        int $i0;
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $i0 := @parameter1: int;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow, java.lang.Object, kotlin.jvm.functions.Function3)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.KotlinNothingValueException $r3;

        $r2 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public static final kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        kotlinx.coroutines.flow.Flow $r1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r1, $r0);

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow, int)
    {
        int $i0;
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $i0 := @parameter1: int;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0, $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final void subscribe(kotlinx.coroutines.flow.Flow)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.KotlinNothingValueException $r1;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r1 = new kotlin.KotlinNothingValueException;

        specialinvoke $r1.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r1;
    }

    public static final void subscribe(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final void subscribe(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0, $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.KotlinNothingValueException $r3;

        $r2 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public static final kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.KotlinNothingValueException $r2;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }

    public static final kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1 $r2;
        kotlin.jvm.functions.Function3 $r3;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 = new kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r0, null);

        $r3 = (kotlin.jvm.functions.Function3) $r2;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r1, $r3);

        return $r1;
    }
}
