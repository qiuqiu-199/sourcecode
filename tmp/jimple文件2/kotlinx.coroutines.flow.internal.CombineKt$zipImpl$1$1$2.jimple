final class kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final java.lang.Object $cnt;
    final kotlinx.coroutines.flow.Flow $flow;
    final kotlin.coroutines.CoroutineContext $scopeContext;
    final kotlinx.coroutines.channels.ReceiveChannel $second;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;
    final kotlin.jvm.functions.Function3 $transform;
    int label;

    void <init>(kotlinx.coroutines.flow.Flow, kotlin.coroutines.CoroutineContext, java.lang.Object, kotlinx.coroutines.channels.ReceiveChannel, kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.channels.ReceiveChannel $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.jvm.functions.Function3 $r5;
        kotlin.coroutines.Continuation $r6;
        kotlinx.coroutines.flow.Flow $r7;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r7 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: kotlinx.coroutines.channels.ReceiveChannel;

        $r4 := @parameter4: kotlinx.coroutines.flow.FlowCollector;

        $r5 := @parameter5: kotlin.jvm.functions.Function3;

        $r6 := @parameter6: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow> = $r7;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second> = $r3;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r4;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform> = $r5;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r6);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 r0, $r8;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.flow.Flow $r2;
        kotlin.coroutines.CoroutineContext $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.channels.ReceiveChannel $r5;
        kotlinx.coroutines.flow.FlowCollector $r6;
        kotlin.jvm.functions.Function3 $r7;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r8 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r2 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second>;

        $r6 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r7 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r8.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r2, $r3, $r4, $r5, $r6, $r7, $r1);

        $r1 = (kotlin.coroutines.Continuation) $r8;

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 r0;
        java.lang.Object $r1, $r2;
        kotlin.Unit $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.Unit) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.Unit, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 r0;
        kotlin.Unit $r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r1 := @parameter0: kotlin.Unit;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2) $r2;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)>($r1);

        return $r3;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Object $r2, $r6;
        kotlinx.coroutines.channels.ReceiveChannel $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.jvm.functions.Function3 $r5;
        int $i0;
        java.lang.IllegalStateException $r7;
        kotlinx.coroutines.flow.Flow $r8;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$invokeSuspend$$inlined$collect$1 $r9;
        kotlin.coroutines.Continuation $r10;
        kotlin.Unit r11;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r2 := @parameter0: java.lang.Object;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: int label>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label3;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r8 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow>;

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext>;

        $r2 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform>;

        $r9 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$invokeSuspend$$inlined$collect$1;

        specialinvoke $r9.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$invokeSuspend$$inlined$collect$1: void <init>(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3)>($r1, $r2, $r3, $r4, $r5);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r9;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: int label> = 1;

        $r2 = interfaceinvoke $r8.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r10);

        if $r2 != $r6 goto label3;

        return $r6;

     label3:
        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r11;
    }
}
