public final class kotlinx.coroutines.Delay$DefaultImpls extends java.lang.Object
{

    public static java.lang.Object delay(kotlinx.coroutines.Delay, long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r3;
        kotlinx.coroutines.Delay $r1;
        long $l0;
        byte $b1;
        kotlinx.coroutines.CancellableContinuationImpl $r2;
        kotlinx.coroutines.CancellableContinuation $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit r7;

        $r1 := @parameter0: kotlinx.coroutines.Delay;

        $l0 := @parameter1: long;

        $r0 := @parameter2: kotlin.coroutines.Continuation;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;

     label1:
        $r2 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r0);

        specialinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r3, 1);

        virtualinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        $r4 = (kotlinx.coroutines.CancellableContinuation) $r2;

        interfaceinvoke $r1.<kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)>($l0, $r4);

        $r5 = virtualinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label2;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r0);

     label2:
        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label3;

        return $r5;

     label3:
        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;
    }

    public static kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay, long, java.lang.Runnable, kotlin.coroutines.CoroutineContext)
    {
        long $l0;
        java.lang.Runnable $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.Delay $r2;
        kotlinx.coroutines.DisposableHandle $r3;

        $r2 := @parameter0: kotlinx.coroutines.Delay;

        $l0 := @parameter1: long;

        $r0 := @parameter2: java.lang.Runnable;

        $r1 := @parameter3: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()>();

        $r3 = interfaceinvoke $r2.<kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)>($l0, $r0, $r1);

        return $r3;
    }
}
