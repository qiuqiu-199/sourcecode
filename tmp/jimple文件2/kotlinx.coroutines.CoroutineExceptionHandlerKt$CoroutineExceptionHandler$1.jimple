public final class kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1 extends kotlin.coroutines.AbstractCoroutineContextElement implements kotlinx.coroutines.CoroutineExceptionHandler
{
    final kotlin.jvm.functions.Function2 $handler;

    public void <init>(kotlin.jvm.functions.Function2, kotlinx.coroutines.CoroutineExceptionHandler$Key)
    {
        kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1 r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.CoroutineExceptionHandler$Key $r2;
        kotlin.coroutines.CoroutineContext$Key $r3;

        r0 := @this: kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function2;

        $r2 := @parameter1: kotlinx.coroutines.CoroutineExceptionHandler$Key;

        r0.<kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: kotlin.jvm.functions.Function2 $handler> = $r1;

        $r3 = (kotlin.coroutines.CoroutineContext$Key) $r2;

        specialinvoke r0.<kotlin.coroutines.AbstractCoroutineContextElement: void <init>(kotlin.coroutines.CoroutineContext$Key)>($r3);

        return;
    }

    public void handleException(kotlin.coroutines.CoroutineContext, java.lang.Throwable)
    {
        kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1 r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Throwable $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: kotlin.jvm.functions.Function2 $handler>;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }
}
