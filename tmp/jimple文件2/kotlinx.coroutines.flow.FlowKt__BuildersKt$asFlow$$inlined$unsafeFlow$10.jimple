public final class kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.ranges.LongRange $this_asFlow$inlined;

    public void <init>(kotlin.ranges.LongRange)
    {
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 r0;
        kotlin.ranges.LongRange $r1;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10;

        $r1 := @parameter0: kotlin.ranges.LongRange;

        r0.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: kotlin.ranges.LongRange $this_asFlow$inlined> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1 $r3;
        int $i0;
        java.lang.Object $r4, $r5, $r6;
        java.util.Iterator $r7;
        java.lang.IllegalStateException $r8;
        kotlin.ranges.LongRange $r9;
        java.lang.Iterable $r10;
        java.lang.Number $r11;
        long $l1;
        java.lang.Long $r12;
        kotlin.Unit r13;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label> = $i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: void <init>(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10,kotlin.coroutines.Continuation)>(r0, $r2);

     label2:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$1>;

        $r7 = (java.util.Iterator) $r6;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        goto label5;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r9 = r0.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: kotlin.ranges.LongRange $this_asFlow$inlined>;

        $r10 = (java.lang.Iterable) $r9;

        $r7 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.Number) $r4;

        $l1 = virtualinvoke $r11.<java.lang.Number: long longValue()>();

        $r12 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)>($l1);

        $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$0> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$1> = $r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label> = 1;

        $r4 = interfaceinvoke $r1.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r12, $r3);

        if $r4 != $r5 goto label5;

        return $r5;

     label6:
        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r13;
    }
}
