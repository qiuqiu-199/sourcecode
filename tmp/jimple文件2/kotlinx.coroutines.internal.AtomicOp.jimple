public abstract class kotlinx.coroutines.internal.AtomicOp extends kotlinx.coroutines.internal.OpDescriptor
{
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU;
    private volatile java.lang.Object _consensus;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/internal/AtomicOp;", class "Ljava/lang/Object;", "_consensus");

        <kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU> = $r0;

        return;
    }

    public void <init>()
    {
        kotlinx.coroutines.internal.AtomicOp r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        specialinvoke r0.<kotlinx.coroutines.internal.OpDescriptor: void <init>()>();

        $r1 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus> = $r1;

        return;
    }

    public abstract void complete(java.lang.Object, java.lang.Object);

    public final java.lang.Object decide(java.lang.Object)
    {
        kotlinx.coroutines.internal.AtomicOp r0;
        java.lang.Object $r1, $r2, $r4;
        boolean $z0;
        java.lang.AssertionError $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r5;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        $r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r1 == $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $r2 = r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus>;

        $r4 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r2 == $r4 goto label5;

        return $r2;

     label5:
        $r5 = <kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU>;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, r0, $r2, $r1);

        if $z0 == 0 goto label6;

        return $r1;

     label6:
        $r1 = r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus>;

        return $r1;
    }

    public kotlinx.coroutines.internal.AtomicOp getAtomicOp()
    {
        kotlinx.coroutines.internal.AtomicOp r0;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        return r0;
    }

    public final java.lang.Object getConsensus()
    {
        kotlinx.coroutines.internal.AtomicOp r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        r1 = r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus>;

        return r1;
    }

    public long getOpSequence()
    {
        kotlinx.coroutines.internal.AtomicOp r0;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        return 0L;
    }

    public final boolean isDecided()
    {
        kotlinx.coroutines.internal.AtomicOp r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        $r2 = r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus>;

        $r1 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r2 == $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.Object perform(java.lang.Object)
    {
        kotlinx.coroutines.internal.AtomicOp r0;
        java.lang.Object $r1, $r2, $r3;

        r0 := @this: kotlinx.coroutines.internal.AtomicOp;

        $r1 := @parameter0: java.lang.Object;

        $r3 = r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus>;

        $r2 = <kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION>;

        if $r3 != $r2 goto label1;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)>($r1);

        $r3 = virtualinvoke r0.<kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)>($r2);

     label1:
        virtualinvoke r0.<kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)>($r1, $r3);

        return $r3;
    }

    public abstract java.lang.Object prepare(java.lang.Object);
}
