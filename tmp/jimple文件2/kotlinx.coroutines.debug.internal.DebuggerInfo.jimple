public final class kotlinx.coroutines.debug.internal.DebuggerInfo extends java.lang.Object implements java.io.Serializable
{
    private final java.lang.Long coroutineId;
    private final java.lang.String dispatcher;
    private final java.util.List lastObservedStackTrace;
    private final java.lang.String lastObservedThreadName;
    private final java.lang.String lastObservedThreadState;
    private final java.lang.String name;
    private final long sequenceNumber;
    private final java.lang.String state;

    public void <init>(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.CoroutineId$Key $r3;
        kotlin.coroutines.CoroutineContext$Key $r4;
        kotlin.coroutines.CoroutineContext$Element $r5;
        kotlinx.coroutines.CoroutineId $r6;
        java.lang.String $r7, $r11;
        java.lang.Long $r8;
        long $l0;
        kotlin.coroutines.ContinuationInterceptor$Key $r9;
        kotlin.coroutines.ContinuationInterceptor $r10;
        kotlinx.coroutines.CoroutineName$Key $r12;
        kotlinx.coroutines.CoroutineName $r13;
        java.lang.Thread $r14;
        java.lang.Thread$State $r15;
        java.util.List $r16;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        $r1 := @parameter0: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl;

        $r2 := @parameter1: kotlin.coroutines.CoroutineContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r6 = (kotlinx.coroutines.CoroutineId) $r5;

        $r7 = null;

        if $r6 != null goto label01;

        $r8 = null;

        goto label02;

     label01:
        $l0 = virtualinvoke $r6.<kotlinx.coroutines.CoroutineId: long getId()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label02:
        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long coroutineId> = $r8;

        $r9 = <kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r9;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r10 = (kotlin.coroutines.ContinuationInterceptor) $r5;

        if $r10 != null goto label03;

        $r11 = null;

        goto label04;

     label03:
        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

     label04:
        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String dispatcher> = $r11;

        $r12 = <kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key>;

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r12;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r13 = (kotlinx.coroutines.CoroutineName) $r5;

        if $r13 != null goto label05;

        $r11 = null;

        goto label06;

     label05:
        $r11 = virtualinvoke $r13.<kotlinx.coroutines.CoroutineName: java.lang.String getName()>();

     label06:
        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String name> = $r11;

        $r11 = virtualinvoke $r1.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String getState()>();

        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String state> = $r11;

        $r14 = $r1.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Thread lastObservedThread>;

        if $r14 != null goto label08;

     label07:
        $r11 = null;

        goto label10;

     label08:
        $r15 = virtualinvoke $r14.<java.lang.Thread: java.lang.Thread$State getState()>();

        if $r15 != null goto label09;

        goto label07;

     label09:
        $r11 = virtualinvoke $r15.<java.lang.Thread$State: java.lang.String toString()>();

     label10:
        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadState> = $r11;

        $r14 = $r1.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Thread lastObservedThread>;

        if $r14 != null goto label11;

        goto label12;

     label11:
        $r7 = virtualinvoke $r14.<java.lang.Thread: java.lang.String getName()>();

     label12:
        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadName> = $r7;

        $r16 = virtualinvoke $r1.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List lastObservedStackTrace()>();

        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List lastObservedStackTrace> = $r16;

        $l0 = $r1.<kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: long sequenceNumber>;

        r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: long sequenceNumber> = $l0;

        return;
    }

    public final java.lang.Long getCoroutineId()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.Long r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long coroutineId>;

        return r1;
    }

    public final java.lang.String getDispatcher()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.String r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String dispatcher>;

        return r1;
    }

    public final java.util.List getLastObservedStackTrace()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.util.List r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List lastObservedStackTrace>;

        return r1;
    }

    public final java.lang.String getLastObservedThreadName()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.String r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadName>;

        return r1;
    }

    public final java.lang.String getLastObservedThreadState()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.String r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadState>;

        return r1;
    }

    public final java.lang.String getName()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.String r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String name>;

        return r1;
    }

    public final long getSequenceNumber()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        long l0;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        l0 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: long sequenceNumber>;

        return l0;
    }

    public final java.lang.String getState()
    {
        kotlinx.coroutines.debug.internal.DebuggerInfo r0;
        java.lang.String r1;

        r0 := @this: kotlinx.coroutines.debug.internal.DebuggerInfo;

        r1 = r0.<kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String state>;

        return r1;
    }
}
