public final class kotlinx.coroutines.Job$DefaultImpls extends java.lang.Object
{

    public static void cancel(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.Job $r0;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        interfaceinvoke $r0.<kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)>(null);

        return;
    }

    public static void cancel$default(kotlinx.coroutines.Job, java.util.concurrent.CancellationException, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.Job $r1;
        java.util.concurrent.CancellationException $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r2 := @parameter1: java.util.concurrent.CancellationException;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        interfaceinvoke $r1.<kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)>($r2);

        return;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: cancel");

        throw $r3;
    }

    public static boolean cancel$default(kotlinx.coroutines.Job, java.lang.Throwable, int, java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.Job $r1;
        java.lang.Throwable $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r2 := @parameter1: java.lang.Throwable;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)>($r2);

        return $z0;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: cancel");

        throw $r3;
    }

    public static java.lang.Object fold(kotlinx.coroutines.Job, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.Job $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r0 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)>($r3, $r0, $r1);

        return $r0;
    }

    public static kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job, kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.CoroutineContext$Key $r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlinx.coroutines.Job $r2;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext$Key;

        $r1 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r1 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)>($r1, $r0);

        return $r1;
    }

    public static kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job, boolean, boolean, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlinx.coroutines.Job $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.UnsupportedOperationException $r4;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r0 := @parameter3: kotlin.jvm.functions.Function1;

        $i0 := @parameter4: int;

        $r3 := @parameter5: java.lang.Object;

        if $r3 != null goto label3;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 0;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $z1 = 1;

     label2:
        $r1 = interfaceinvoke $r2.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)>($z0, $z1, $r0);

        return $r1;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: invokeOnCompletion");

        throw $r4;
    }

    public static kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job, kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.CoroutineContext$Key $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.Job $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext$Key;

        $r3 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r1 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)>($r3, $r0);

        return $r1;
    }

    public static kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job, kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.Job $r1;
        kotlin.coroutines.CoroutineContext$Element $r2;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 = (kotlin.coroutines.CoroutineContext$Element) $r1;

        $r0 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)>($r2, $r0);

        return $r0;
    }

    public static kotlinx.coroutines.Job plus(kotlinx.coroutines.Job, kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.Job $r0, $r1;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        $r1 := @parameter1: kotlinx.coroutines.Job;

        return $r1;
    }
}
