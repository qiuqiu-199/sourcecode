public final class kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.jvm.functions.Function4 $predicate$inlined;
    final kotlinx.coroutines.flow.Flow $this_retryWhen$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function4)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function4 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function4;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1 $r3;
        int $i0;
        java.lang.Object $r4, $r5, $r6;
        long $l1;
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r8;
        kotlinx.coroutines.flow.Flow $r9;
        kotlin.jvm.functions.Function4 $r10;
        java.lang.Long $r11;
        java.lang.Boolean $r12;
        kotlin.Unit r13;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label>;

        if $i0 == 0 goto label05;

        if $i0 == 1 goto label04;

        if $i0 != 2 goto label03;

        $l1 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0>;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2>;

        $r7 = (java.lang.Throwable) $r6;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label09;

     label03:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label04:
        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0>;

        $l1 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0>;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        $r6 = $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r0 = (kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label08;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $l1 = 0L;

     label06:
        $r9 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined>;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = null;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0> = $l1;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0> = 0;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = 1;

        $r4 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r1, $r3);

        if $r4 != $r5 goto label07;

        return $r5;

     label07:
        $i0 = 0;

     label08:
        $r7 = (java.lang.Throwable) $r4;

        if $r7 == null goto label11;

        $r10 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined>;

        $r11 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)>($l1);

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = $r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0> = $l1;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label> = 2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(6);

        $r4 = interfaceinvoke $r10.<kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r7, $r11, $r3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(7);

        if $r4 != $r5 goto label09;

        return $r5;

     label09:
        $r12 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label10;

        $l1 = $l1 + 1L;

        $i0 = 1;

        goto label11;

     label10:
        throw $r7;

     label11:
        if $i0 != 0 goto label12;

        r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r13;

     label12:
        goto label06;
    }
}
