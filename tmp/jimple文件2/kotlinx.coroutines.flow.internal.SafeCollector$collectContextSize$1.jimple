final class kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2
{
    public static final kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE;

    static void <clinit>()
    {
        kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 $r0;

        $r0 = new kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1;

        specialinvoke $r0.<kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: void <init>()>();

        <kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 r0;

        r0 := @this: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Integer invoke(int, kotlin.coroutines.CoroutineContext$Element)
    {
        kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        java.lang.Integer $r2;
        int $i0;

        r0 := @this: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext$Element;

        $i0 = $i0 + 1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 r0;
        java.lang.Object $r1, $r2;
        java.lang.Number $r3;
        int $i0;
        kotlin.coroutines.CoroutineContext$Element $r4;
        java.lang.Integer $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r4 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r5 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)>($i0, $r4);

        return $r5;
    }
}
