public final class kotlinx.coroutines.internal.ThreadContextKt extends java.lang.Object
{
    public static final kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS;
    private static final kotlin.jvm.functions.Function2 countAll;
    private static final kotlin.jvm.functions.Function2 findOne;
    private static final kotlin.jvm.functions.Function2 updateState;

    static void <clinit>()
    {
        kotlinx.coroutines.internal.Symbol $r0;
        kotlinx.coroutines.internal.ThreadContextKt$countAll$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.internal.ThreadContextKt$findOne$1 $r3;
        kotlinx.coroutines.internal.ThreadContextKt$updateState$1 $r4;

        $r0 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r0.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("NO_THREAD_ELEMENTS");

        <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS> = $r0;

        $r1 = <kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll> = $r2;

        $r3 = <kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function2) $r3;

        <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne> = $r2;

        $r4 = <kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function2) $r4;

        <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState> = $r2;

        return;
    }

    public static final void restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object $r1, $r3;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.internal.Symbol $r4;
        boolean $z0;
        kotlinx.coroutines.internal.ThreadState $r5;
        kotlinx.coroutines.ThreadContextElement $r6;
        java.lang.NullPointerException $r7;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r3 := @parameter1: java.lang.Object;

        $r4 = <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS>;

        if $r3 != $r4 goto label1;

        return;

     label1:
        $z0 = $r3 instanceof kotlinx.coroutines.internal.ThreadState;

        if $z0 == 0 goto label2;

        $r5 = (kotlinx.coroutines.internal.ThreadState) $r3;

        virtualinvoke $r5.<kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)>($r2);

        return;

     label2:
        $r0 = <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne>;

        $r1 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>(null, $r0);

        if $r1 == null goto label3;

        $r6 = (kotlinx.coroutines.ThreadContextElement) $r1;

        interfaceinvoke $r6.<kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r2, $r3);

        return;

     label3:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.ThreadContextElement<kotlin.Any?>");

        throw $r7;
    }

    public static final java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
    {
        kotlin.jvm.functions.Function2 $r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r0 = <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll>;

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        return $r3;
    }

    public static final java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object)
    {
        kotlin.coroutines.CoroutineContext $r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        boolean $z0;
        kotlinx.coroutines.internal.ThreadState $r3;
        java.lang.Number $r4;
        int $i0;
        kotlin.jvm.functions.Function2 $r5;
        kotlinx.coroutines.ThreadContextElement $r6;
        kotlinx.coroutines.internal.Symbol r7;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter1: java.lang.Object;

        if $r1 != null goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)>($r0);

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        if $r1 != $r2 goto label2;

        r7 = <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS>;

        return r7;

     label2:
        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label3;

        $r3 = new kotlinx.coroutines.internal.ThreadState;

        $r4 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        specialinvoke $r3.<kotlinx.coroutines.internal.ThreadState: void <init>(kotlin.coroutines.CoroutineContext,int)>($r0, $i0);

        $r5 = <kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState>;

        $r1 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r3, $r5);

        return $r1;

     label3:
        $r6 = (kotlinx.coroutines.ThreadContextElement) $r1;

        $r1 = interfaceinvoke $r6.<kotlinx.coroutines.ThreadContextElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)>($r0);

        return $r1;
    }
}
