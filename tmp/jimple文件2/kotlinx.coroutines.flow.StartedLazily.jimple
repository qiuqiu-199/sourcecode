final class kotlinx.coroutines.flow.StartedLazily extends java.lang.Object implements kotlinx.coroutines.flow.SharingStarted
{

    public void <init>()
    {
        kotlinx.coroutines.flow.StartedLazily r0;

        r0 := @this: kotlinx.coroutines.flow.StartedLazily;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
    {
        kotlinx.coroutines.flow.StartedLazily r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.StateFlow $r2;
        kotlinx.coroutines.flow.StartedLazily$command$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: kotlinx.coroutines.flow.StartedLazily;

        $r2 := @parameter0: kotlinx.coroutines.flow.StateFlow;

        $r3 = new kotlinx.coroutines.flow.StartedLazily$command$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.StartedLazily$command$1: void <init>(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.Continuation)>($r2, null);

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r4);

        return $r1;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.flow.StartedLazily r0;

        r0 := @this: kotlinx.coroutines.flow.StartedLazily;

        return "SharingStarted.Lazily";
    }
}
