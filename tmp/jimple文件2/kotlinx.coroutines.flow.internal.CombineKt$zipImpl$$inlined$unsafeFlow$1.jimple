public final class kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlinx.coroutines.flow.Flow $flow$inlined;
    final kotlinx.coroutines.flow.Flow $flow2$inlined;
    final kotlin.jvm.functions.Function3 $transform$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        kotlin.jvm.functions.Function3 $r3;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter2: kotlin.jvm.functions.Function3;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow2$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        kotlin.jvm.functions.Function3 $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.coroutines.Continuation $r5;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 $r6;
        kotlin.jvm.functions.Function2 $r7;
        java.lang.Object $r8, $r9;
        kotlin.Unit r10;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1;

        $r4 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r5 := @parameter1: kotlin.coroutines.Continuation;

        $r6 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow2$inlined>;

        $r2 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined>;

        specialinvoke $r6.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r4, $r1, $r2, $r3, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r7, $r5);

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r8 != $r9 goto label1;

        return $r8;

     label1:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;
    }
}
