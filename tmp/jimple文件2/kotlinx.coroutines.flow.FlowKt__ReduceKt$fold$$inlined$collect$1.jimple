public final class kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlin.jvm.internal.Ref$ObjectRef $accumulator$inlined;
    final kotlin.jvm.functions.Function3 $operation$inlined;

    public void <init>(kotlin.jvm.internal.Ref$ObjectRef, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        kotlin.jvm.functions.Function3 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.functions.Function3 $operation$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1 r0;
        java.lang.Object $r1, $r2, $r5;
        kotlin.coroutines.Continuation $r3;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1 $r4;
        int $i0;
        kotlin.jvm.internal.Ref$ObjectRef $r6;
        java.lang.IllegalStateException $r7;
        kotlin.jvm.functions.Function3 $r8;
        kotlin.Unit r9;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r3 instanceof kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1;

        if $z0 == 0 goto label1;

        $r4 = (kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1) $r3;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: int label> = $i0;

        goto label2;

     label1:
        $r4 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1,kotlin.coroutines.Continuation)>(r0, $r3);

     label2:
        $r1 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        $r2 = $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: java.lang.Object L$0>;

        $r6 = (kotlin.jvm.internal.Ref$ObjectRef) $r2;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label6;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = (kotlin.coroutines.Continuation) $r4;

        $r6 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator$inlined>;

        $r8 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.functions.Function3 $operation$inlined>;

        $r1 = $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: java.lang.Object L$0> = $r6;

        $r4.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: int label> = 1;

        $r2 = interfaceinvoke $r8.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r4);

        if $r2 != $r5 goto label5;

        return $r5;

     label5:
        $r1 = $r2;

     label6:
        $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r1;

        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }

    public java.lang.Object emit$$forInline(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1 r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.functions.Function3 $r2;
        java.lang.Object $r3, $r4;
        kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1 $r5;
        kotlin.jvm.internal.Ref$ObjectRef $r6;
        kotlin.Unit r7;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(4);

        $r5 = new kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1,kotlin.coroutines.Continuation)>(r0, $r1);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(5);

        $r6 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator$inlined>;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1: kotlin.jvm.functions.Function3 $operation$inlined>;

        $r3 = $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r1);

        $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r7;
    }
}
