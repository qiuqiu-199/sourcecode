public abstract class kotlinx.coroutines.android.HandlerDispatcher extends kotlinx.coroutines.MainCoroutineDispatcher implements kotlinx.coroutines.Delay
{

    private void <init>()
    {
        kotlinx.coroutines.android.HandlerDispatcher r0;

        r0 := @this: kotlinx.coroutines.android.HandlerDispatcher;

        specialinvoke r0.<kotlinx.coroutines.MainCoroutineDispatcher: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlinx.coroutines.android.HandlerDispatcher r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: kotlinx.coroutines.android.HandlerDispatcher;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<kotlinx.coroutines.android.HandlerDispatcher: void <init>()>();

        return;
    }

    public java.lang.Object delay(long, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.android.HandlerDispatcher r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        long $l0;

        r0 := @this: kotlinx.coroutines.android.HandlerDispatcher;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = staticinvoke <kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.Delay,long,kotlin.coroutines.Continuation)>(r0, $l0, $r1);

        return $r2;
    }

    public abstract kotlinx.coroutines.android.HandlerDispatcher getImmediate();

    public kotlinx.coroutines.DisposableHandle invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.android.HandlerDispatcher r0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.DisposableHandle $r3;
        long $l0;

        r0 := @this: kotlinx.coroutines.android.HandlerDispatcher;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Runnable;

        $r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        $r3 = staticinvoke <kotlinx.coroutines.Delay$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)>(r0, $l0, $r1, $r2);

        return $r3;
    }
}
