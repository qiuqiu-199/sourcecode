public abstract class kotlinx.coroutines.MainCoroutineDispatcher extends kotlinx.coroutines.CoroutineDispatcher
{

    public void <init>()
    {
        kotlinx.coroutines.MainCoroutineDispatcher r0;

        r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        specialinvoke r0.<kotlinx.coroutines.CoroutineDispatcher: void <init>()>();

        return;
    }

    public abstract kotlinx.coroutines.MainCoroutineDispatcher getImmediate();

    public java.lang.String toString()
    {
        kotlinx.coroutines.MainCoroutineDispatcher r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;

        r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r1 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r1;
    }

    protected final java.lang.String toStringInternalImpl()
    {
        kotlinx.coroutines.MainCoroutineDispatcher r0, $r2;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: kotlinx.coroutines.MainCoroutineDispatcher;

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        if r0 != $r2 goto label1;

        return "Dispatchers.Main";

     label1:
        $r2 = virtualinvoke $r2.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

     label2:
        goto label4;

     label3:
        $r2 = null;

     label4:
        if r0 != $r2 goto label5;

        return "Dispatchers.Main.immediate";

     label5:
        return null;

     label6:
        $r1 := @caughtexception;

        goto label3;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label6;
    }
}
