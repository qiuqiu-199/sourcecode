public final class kotlinx.coroutines.android.HandlerContext extends kotlinx.coroutines.android.HandlerDispatcher implements kotlinx.coroutines.Delay
{
    private volatile kotlinx.coroutines.android.HandlerContext _immediate;
    private final android.os.Handler handler;
    private final kotlinx.coroutines.android.HandlerContext immediate;
    private final boolean invokeImmediately;
    private final java.lang.String name;

    public void <init>(android.os.Handler, java.lang.String)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        android.os.Handler $r1;
        java.lang.String $r2;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: android.os.Handler;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<kotlinx.coroutines.android.HandlerContext: void <init>(android.os.Handler,java.lang.String,boolean)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.os.Handler, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        android.os.Handler $r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: android.os.Handler;

        $r3 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r3 = null;

     label1:
        specialinvoke r0.<kotlinx.coroutines.android.HandlerContext: void <init>(android.os.Handler,java.lang.String)>($r1, $r3);

        return;
    }

    private void <init>(android.os.Handler, java.lang.String, boolean)
    {
        kotlinx.coroutines.android.HandlerContext r0, $r3;
        java.lang.String $r1;
        android.os.Handler $r2;
        boolean $z0;
        kotlin.Unit $r4;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r2 := @parameter0: android.os.Handler;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = null;

        specialinvoke r0.<kotlinx.coroutines.android.HandlerDispatcher: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler> = $r2;

        r0.<kotlinx.coroutines.android.HandlerContext: java.lang.String name> = $r1;

        r0.<kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately> = $z0;

        if $z0 == 0 goto label1;

        $r3 = r0;

     label1:
        r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate> = $r3;

        $r3 = r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate>;

        if $r3 != null goto label2;

        $r3 = new kotlinx.coroutines.android.HandlerContext;

        specialinvoke $r3.<kotlinx.coroutines.android.HandlerContext: void <init>(android.os.Handler,java.lang.String,boolean)>($r2, $r1, 1);

        r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate> = $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate> = $r3;

        return;
    }

    public static final android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
    {
        kotlinx.coroutines.android.HandlerContext $r0;
        android.os.Handler r1;

        $r0 := @parameter0: kotlinx.coroutines.android.HandlerContext;

        r1 = $r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        return r1;
    }

    private final void cancelOnRejection(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Runnable $r2;
        java.util.concurrent.CancellationException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        kotlinx.coroutines.CoroutineDispatcher $r6;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = new java.util.concurrent.CancellationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The task was rejected, the handler underlying the dispatcher \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was closed");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>($r5);

        staticinvoke <kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)>($r1, $r3);

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        virtualinvoke $r6.<kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r1, $r2);

        return;
    }

    public void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Runnable $r2;
        boolean $z0;
        android.os.Handler $r3;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $z0 = virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        if $z0 != 0 goto label1;

        specialinvoke r0.<kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r1, $r2);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        kotlinx.coroutines.android.HandlerContext r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        android.os.Handler $r3, $r4;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.android.HandlerContext;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.android.HandlerContext) $r1;

        $r3 = $r2.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $r4 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        if $r3 != $r4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public volatile kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlinx.coroutines.MainCoroutineDispatcher $r1;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        r0 = virtualinvoke r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()>();

        $r1 = (kotlinx.coroutines.MainCoroutineDispatcher) r0;

        return $r1;
    }

    public kotlinx.coroutines.android.HandlerContext getImmediate()
    {
        kotlinx.coroutines.android.HandlerContext r0;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        r0 = r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate>;

        return r0;
    }

    public volatile kotlinx.coroutines.android.HandlerDispatcher getImmediate()
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlinx.coroutines.android.HandlerDispatcher $r1;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        r0 = virtualinvoke r0.<kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()>();

        $r1 = (kotlinx.coroutines.android.HandlerDispatcher) r0;

        return $r1;
    }

    public int hashCode()
    {
        kotlinx.coroutines.android.HandlerContext r0;
        int $i0;
        android.os.Handler $r1;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        return $i0;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnTimeout(long, java.lang.Runnable, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;
        android.os.Handler $r3;
        long $l0;
        boolean $z0;
        kotlinx.coroutines.android.HandlerContext$invokeOnTimeout$$inlined$DisposableHandle$1 $r4;
        kotlinx.coroutines.DisposableHandle $r5;
        kotlinx.coroutines.NonDisposableHandle $r6;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Runnable;

        $r2 := @parameter2: kotlin.coroutines.CoroutineContext;

        $r3 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $l0 = staticinvoke <kotlin.ranges.RangesKt: long coerceAtMost(long,long)>($l0, 4611686018427387903L);

        $z0 = virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0);

        if $z0 == 0 goto label1;

        $r4 = new kotlinx.coroutines.android.HandlerContext$invokeOnTimeout$$inlined$DisposableHandle$1;

        specialinvoke $r4.<kotlinx.coroutines.android.HandlerContext$invokeOnTimeout$$inlined$DisposableHandle$1: void <init>(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)>(r0, $r1);

        $r5 = (kotlinx.coroutines.DisposableHandle) $r4;

        return $r5;

     label1:
        specialinvoke r0.<kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r2, $r1);

        $r6 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        $r5 = (kotlinx.coroutines.DisposableHandle) $r6;

        return $r5;
    }

    public boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlin.coroutines.CoroutineContext $r1;
        boolean $z0;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $z0 = r0.<kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately>;

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void scheduleResumeAfterDelay(long, kotlinx.coroutines.CancellableContinuation)
    {
        kotlinx.coroutines.android.HandlerContext r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        android.os.Handler $r2;
        long $l0;
        kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1 $r3;
        java.lang.Runnable $r4;
        boolean $z0;
        kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        kotlin.coroutines.CoroutineContext $r7;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        $r3 = new kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1;

        specialinvoke $r3.<kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void <init>(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)>($r1, r0);

        $r4 = (java.lang.Runnable) $r3;

        $r2 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $l0 = staticinvoke <kotlin.ranges.RangesKt: long coerceAtMost(long,long)>($l0, 4611686018427387903L);

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, $l0);

        if $z0 == 0 goto label1;

        $r5 = new kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1;

        specialinvoke $r5.<kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void <init>(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)>(r0, $r4);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        interfaceinvoke $r1.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r6);

        return;

     label1:
        $r7 = interfaceinvoke $r1.<kotlinx.coroutines.CancellableContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke r0.<kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>($r7, $r4);

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.android.HandlerContext r0;
        java.lang.String $r1;
        android.os.Handler $r2;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.android.HandlerContext;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.android.HandlerContext: java.lang.String toStringInternalImpl()>();

        if $r1 != null goto label2;

        $r1 = r0.<kotlinx.coroutines.android.HandlerContext: java.lang.String name>;

        if $r1 != null goto label1;

        $r2 = r0.<kotlinx.coroutines.android.HandlerContext: android.os.Handler handler>;

        $r1 = virtualinvoke $r2.<android.os.Handler: java.lang.String toString()>();

     label1:
        $z0 = r0.<kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately>;

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r1, ".immediate");

     label2:
        return $r1;
    }
}
