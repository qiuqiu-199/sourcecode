final class kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function3
{
    final kotlinx.coroutines.flow.Flow $this_debounceInternal;
    final kotlin.jvm.functions.Function1 $timeoutMillisSelector;
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    java.lang.Object L$3;
    int label;

    void <init>(kotlin.jvm.functions.Function1, kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1;

        $r3 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector> = $r3;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(3, $r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1 r0;
        java.lang.Object $r1, $r2, $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        kotlinx.coroutines.flow.FlowCollector $r5;
        kotlin.coroutines.Continuation $r6;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r5 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        $r6 = (kotlin.coroutines.Continuation) $r3;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r5, $r6);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1 r0, $r3;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r4;
        kotlinx.coroutines.flow.Flow $r5;
        java.lang.Object $r6;
        kotlinx.coroutines.CoroutineScope $r7;
        kotlin.Unit $r8;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1;

        $r7 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector>;

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal>;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: void <init>(kotlin.jvm.functions.Function1,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r4, $r5, $r2);

        $r3.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0> = $r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1> = $r1;

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r3.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invokeSuspend(java.lang.Object)>($r8);

        return $r6;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1 r0;
        java.lang.Object $r1, $r2, $r3, $r27;
        int $i0;
        kotlin.jvm.internal.Ref$LongRef $r4, $r17;
        kotlin.jvm.internal.Ref$ObjectRef $r5;
        kotlinx.coroutines.channels.ReceiveChannel $r6;
        kotlinx.coroutines.flow.FlowCollector $r7;
        java.lang.IllegalStateException $r8;
        kotlinx.coroutines.CoroutineScope $r9;
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1 $r10;
        kotlinx.coroutines.flow.Flow $r11;
        kotlin.jvm.functions.Function2 $r12;
        kotlinx.coroutines.internal.Symbol $r13;
        kotlin.jvm.functions.Function1 $r14;
        java.lang.Number $r15;
        long $l1;
        byte $b2;
        boolean $z0;
        kotlin.coroutines.Continuation $r16;
        java.lang.IllegalArgumentException $r18;
        java.lang.String $r19;
        java.lang.Throwable $r20;
        java.lang.AssertionError $r21;
        kotlinx.coroutines.selects.SelectBuilderImpl $r22;
        kotlinx.coroutines.selects.SelectBuilder $r23;
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1 $r24;
        kotlinx.coroutines.selects.SelectClause1 $r25;
        kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2 $r26;
        kotlin.Unit r28;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1;

        $r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label>;

        if $i0 == 0 goto label03;

        if $i0 == 1 goto label02;

        if $i0 != 2 goto label01;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3>;

        $r4 = (kotlin.jvm.internal.Ref$LongRef) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2>;

        $r5 = (kotlin.jvm.internal.Ref$ObjectRef) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1>;

        $r6 = (kotlinx.coroutines.channels.ReceiveChannel) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        goto label27;

     label01:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label02:
        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3>;

        $r4 = (kotlin.jvm.internal.Ref$LongRef) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2>;

        $r5 = (kotlin.jvm.internal.Ref$ObjectRef) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1>;

        $r6 = (kotlinx.coroutines.channels.ReceiveChannel) $r2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0>;

        $r7 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label09;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0>;

        $r9 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1>;

        $r10 = new kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1;

        $r11 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal>;

        specialinvoke $r10.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r11, null);

        $r12 = (kotlin.jvm.functions.Function2) $r10;

        $r6 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r9, null, 0, $r12, 3, null);

        $r5 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r5.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r7 = (kotlinx.coroutines.flow.FlowCollector) $r1;

     label04:
        $r1 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r13 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol DONE>;

        if $r1 == $r13 goto label28;

        $r4 = new kotlin.jvm.internal.Ref$LongRef;

        specialinvoke $r4.<kotlin.jvm.internal.Ref$LongRef: void <init>()>();

        $r1 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r1 == null goto label10;

        $r14 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector>;

        $r13 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        $r1 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r1 != $r13 goto label05;

        $r1 = null;

     label05:
        $r1 = interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r15 = (java.lang.Number) $r1;

        $l1 = virtualinvoke $r15.<java.lang.Number: long longValue()>();

        $r4.<kotlin.jvm.internal.Ref$LongRef: long element> = $l1;

        $l1 = $r4.<kotlin.jvm.internal.Ref$LongRef: long element>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        if $z0 == 0 goto label11;

        $l1 = $r4.<kotlin.jvm.internal.Ref$LongRef: long element>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label10;

        $r13 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        $r1 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r1 != $r13 goto label08;

        $r1 = null;

     label08:
        $r16 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0> = $r7;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1> = $r6;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2> = $r5;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3> = $r4;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label> = 1;

        $r1 = interfaceinvoke $r7.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r16);

        if $r1 != $r3 goto label09;

        return $r3;

     label09:
        $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = null;

     label10:
        $r1 = $r3;

        $r17 = $r4;

        goto label12;

     label11:
        $r18 = new java.lang.IllegalArgumentException;

        $r19 = "Debounce timeout should not be negative";

        $r19 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        $r20 = (java.lang.Throwable) $r18;

        throw $r20;

     label12:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label17;

        $r2 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r2 == null goto label14;

        $l1 = $r4.<kotlin.jvm.internal.Ref$LongRef: long element>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label13;

        goto label14;

     label13:
        $z0 = 0;

        goto label15;

     label14:
        $z0 = 1;

     label15:
        if $z0 == 0 goto label16;

        goto label17;

     label16:
        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label17:
        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0> = $r7;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1> = $r6;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2> = $r5;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3> = $r17;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label> = 2;

        $r16 = (kotlin.coroutines.Continuation) r0;

        $r22 = new kotlinx.coroutines.selects.SelectBuilderImpl;

        specialinvoke $r22.<kotlinx.coroutines.selects.SelectBuilderImpl: void <init>(kotlin.coroutines.Continuation)>($r16);

     label18:
        $r23 = (kotlinx.coroutines.selects.SelectBuilder) $r22;

        $r2 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

     label19:
        if $r2 == null goto label21;

     label20:
        $l1 = $r17.<kotlin.jvm.internal.Ref$LongRef: long element>;

        $r24 = new kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1;

        specialinvoke $r24.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)>($r7, $r5, null);

        $r14 = (kotlin.jvm.functions.Function1) $r24;

        interfaceinvoke $r23.<kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,kotlin.jvm.functions.Function1)>($l1, $r14);

     label21:
        $r25 = interfaceinvoke $r6.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()>();

        $r26 = new kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2;

        specialinvoke $r26.<kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r5, $r7, null);

        $r12 = (kotlin.jvm.functions.Function2) $r26;

        interfaceinvoke $r23.<kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)>($r25, $r12);

     label22:
        goto label24;

     label23:
        $r20 := @caughtexception;

        virtualinvoke $r22.<kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)>($r20);

     label24:
        $r2 = virtualinvoke $r22.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()>();

        $r27 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r2 != $r27 goto label25;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r16);

     label25:
        if $r2 != $r1 goto label26;

        return $r3;

     label26:
        $r3 = $r1;

     label27:
        goto label04;

     label28:
        r28 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r28;

        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label22 with label23;
    }
}
