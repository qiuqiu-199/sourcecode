public final class kotlinx.coroutines.test.TestCoroutineContextKt extends java.lang.Object
{

    public static final void withTestContext(kotlinx.coroutines.test.TestCoroutineContext, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.test.TestCoroutineContext $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.List $r2;
        java.lang.Iterable $r3;
        boolean $z0, $z1;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7;
        java.lang.AssertionError $r8;
        java.lang.String $r9;

        $r0 := @parameter0: kotlinx.coroutines.test.TestCoroutineContext;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r2 = virtualinvoke $r0.<kotlinx.coroutines.test.TestCoroutineContext: java.util.List getExceptions()>();

        $r3 = (java.lang.Iterable) $r2;

        $z0 = $r3 instanceof java.util.Collection;

        $z1 = 1;

        if $z0 == 0 goto label1;

        $r4 = (java.util.Collection) $r3;

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.Throwable) $r6;

        $z0 = $r7 instanceof java.util.concurrent.CancellationException;

        if $z0 != 0 goto label2;

        $z1 = 0;

     label3:
        if $z1 == 0 goto label4;

        return;

     label4:
        $r8 = new java.lang.AssertionError;

        $r2 = virtualinvoke $r0.<kotlinx.coroutines.test.TestCoroutineContext: java.util.List getExceptions()>();

        $r9 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Coroutine encountered unhandled exceptions:\n", $r2);

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r8;
    }

    public static void withTestContext$default(kotlinx.coroutines.test.TestCoroutineContext, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        kotlinx.coroutines.test.TestCoroutineContext $r1;
        int $i0;
        java.lang.Object $r2;

        $r1 := @parameter0: kotlinx.coroutines.test.TestCoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r1 = new kotlinx.coroutines.test.TestCoroutineContext;

        specialinvoke $r1.<kotlinx.coroutines.test.TestCoroutineContext: void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

     label1:
        staticinvoke <kotlinx.coroutines.test.TestCoroutineContextKt: void withTestContext(kotlinx.coroutines.test.TestCoroutineContext,kotlin.jvm.functions.Function1)>($r1, $r0);

        return;
    }
}
