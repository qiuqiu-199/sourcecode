public abstract class kotlinx.coroutines.scheduling.Task extends java.lang.Object implements java.lang.Runnable
{
    public long submissionTime;
    public kotlinx.coroutines.scheduling.TaskContext taskContext;

    public void <init>()
    {
        kotlinx.coroutines.scheduling.Task r0;
        kotlinx.coroutines.scheduling.NonBlockingContext $r1;
        kotlinx.coroutines.scheduling.TaskContext $r2;

        r0 := @this: kotlinx.coroutines.scheduling.Task;

        $r1 = <kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE>;

        $r2 = (kotlinx.coroutines.scheduling.TaskContext) $r1;

        specialinvoke r0.<kotlinx.coroutines.scheduling.Task: void <init>(long,kotlinx.coroutines.scheduling.TaskContext)>(0L, $r2);

        return;
    }

    public void <init>(long, kotlinx.coroutines.scheduling.TaskContext)
    {
        kotlinx.coroutines.scheduling.Task r0;
        long $l0;
        kotlinx.coroutines.scheduling.TaskContext $r1;

        r0 := @this: kotlinx.coroutines.scheduling.Task;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.scheduling.TaskContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.scheduling.Task: long submissionTime> = $l0;

        r0.<kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext> = $r1;

        return;
    }

    public final int getMode()
    {
        kotlinx.coroutines.scheduling.Task r0;
        int $i0;
        kotlinx.coroutines.scheduling.TaskContext $r1;

        r0 := @this: kotlinx.coroutines.scheduling.Task;

        $r1 = r0.<kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext>;

        $i0 = interfaceinvoke $r1.<kotlinx.coroutines.scheduling.TaskContext: int getTaskMode()>();

        return $i0;
    }
}
