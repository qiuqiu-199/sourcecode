final class kotlinx.coroutines.sync.MutexImpl$LockCont extends kotlinx.coroutines.sync.MutexImpl$LockWaiter
{
    private final kotlinx.coroutines.CancellableContinuation cont;
    final kotlinx.coroutines.sync.MutexImpl this$0;

    public void <init>(kotlinx.coroutines.sync.MutexImpl, java.lang.Object, kotlinx.coroutines.CancellableContinuation)
    {
        kotlinx.coroutines.sync.MutexImpl$LockCont r0;
        kotlinx.coroutines.sync.MutexImpl $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.CancellableContinuation $r3;

        r0 := @this: kotlinx.coroutines.sync.MutexImpl$LockCont;

        $r1 := @parameter0: kotlinx.coroutines.sync.MutexImpl;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlinx.coroutines.CancellableContinuation;

        r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.sync.MutexImpl this$0> = $r1;

        specialinvoke r0.<kotlinx.coroutines.sync.MutexImpl$LockWaiter: void <init>(kotlinx.coroutines.sync.MutexImpl,java.lang.Object)>($r1, $r2);

        r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.CancellableContinuation cont> = $r3;

        return;
    }

    public void completeResumeLockWaiter()
    {
        kotlinx.coroutines.sync.MutexImpl$LockCont r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        kotlinx.coroutines.internal.Symbol $r2;

        r0 := @this: kotlinx.coroutines.sync.MutexImpl$LockCont;

        $r1 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.CancellableContinuation cont>;

        $r2 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        interfaceinvoke $r1.<kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)>($r2);

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.sync.MutexImpl$LockCont r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.CancellableContinuation $r4;
        kotlinx.coroutines.sync.MutexImpl $r5;

        r0 := @this: kotlinx.coroutines.sync.MutexImpl$LockCont;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LockCont[");

        $r3 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: java.lang.Object owner>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.CancellableContinuation cont>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for ");

        $r5 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.sync.MutexImpl this$0>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public boolean tryResumeLockWaiter()
    {
        kotlinx.coroutines.sync.MutexImpl$LockCont r0;
        kotlin.Unit $r1;
        kotlinx.coroutines.sync.MutexImpl $r2;
        boolean $z0;
        kotlinx.coroutines.CancellableContinuation $r3;
        kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r6;

        r0 := @this: kotlinx.coroutines.sync.MutexImpl$LockCont;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: boolean take()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.CancellableContinuation cont>;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = new kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1;

        $r2 = r0.<kotlinx.coroutines.sync.MutexImpl$LockCont: kotlinx.coroutines.sync.MutexImpl this$0>;

        specialinvoke $r4.<kotlinx.coroutines.sync.MutexImpl$LockCont$tryResumeLockWaiter$1: void <init>(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.sync.MutexImpl$LockCont)>($r2, r0);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = interfaceinvoke $r3.<kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)>($r1, null, $r5);

        if $r6 == null goto label2;

        return 1;

     label2:
        return 0;
    }
}
