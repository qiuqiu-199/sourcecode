final class kotlinx.coroutines.flow.FlowKt__EmittersKt extends java.lang.Object
{

    public static final java.lang.Object access$invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function3, java.lang.Throwable, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Throwable $r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        $r4 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        $r1 := @parameter2: java.lang.Throwable;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)>($r4, $r0, $r1, $r2);

        return $r3;
    }

    public static final void ensureActive(kotlinx.coroutines.flow.FlowCollector)
    {
        boolean $z0;
        kotlinx.coroutines.flow.FlowCollector $r0;
        kotlinx.coroutines.flow.ThrowingCollector $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $z0 = $r0 instanceof kotlinx.coroutines.flow.ThrowingCollector;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = (kotlinx.coroutines.flow.ThrowingCollector) $r0;

        $r2 = $r1.<kotlinx.coroutines.flow.ThrowingCollector: java.lang.Throwable e>;

        throw $r2;
    }

    private static final java.lang.Object invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector, kotlin.jvm.functions.Function3, java.lang.Throwable, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowCollector $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Throwable $r2, $r8;
        kotlin.coroutines.Continuation $r3;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1 $r4;
        int $i0;
        java.lang.Object $r5, $r6;
        java.lang.IllegalStateException $r7;
        kotlin.Unit r9;

        $r0 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $z0 = $r3 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1;

        if $z0 == 0 goto label01;

        $r4 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1) $r3;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label>;

        $i0 = $i0 - -2147483648;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label> = $i0;

        goto label02;

     label01:
        $r4 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: void <init>(kotlin.coroutines.Continuation)>($r3);

     label02:
        $r5 = $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object result>;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label>;

        if $i0 == 0 goto label06;

        if $i0 != 1 goto label05;

        $r6 = $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object L$0>;

        $r2 = (java.lang.Throwable) $r6;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label04:
        goto label09;

     label05:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

     label07:
        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object L$0> = $r2;

        $r4.<kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label> = 1;

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r0, $r2, $r4);

     label08:
        if $r5 != $r6 goto label09;

        return $r6;

     label09:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;

     label10:
        $r8 := @caughtexception;

        if $r2 == null goto label11;

        if $r2 == $r8 goto label11;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r8, $r2);

     label11:
        throw $r8;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public static final kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r1);

        $r0 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r0, $r1);

        $r0 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: void <init>(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.Flow)>($r1, $r0);

        $r0 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r0;
    }

    public static final kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1 $r2;
        kotlin.jvm.functions.Function2 $r3;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r1, $r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r3);

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.jvm.functions.Function3 $r1;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r0, $r1);

        $r0 = (kotlinx.coroutines.flow.Flow) $r2;

        return $r0;
    }
}
