final class kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlin.jvm.functions.Function0 $arrayFactory;
    final kotlinx.coroutines.flow.Flow[] $flows;
    final kotlinx.coroutines.flow.FlowCollector $this_combineInternal;
    final kotlin.jvm.functions.Function3 $transform;
    int I$0;
    int I$1;
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    int label;

    void <init>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function3, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.jvm.functions.Function3 $r2;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.Flow[] $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r5 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 := @parameter2: kotlin.jvm.functions.Function3;

        $r3 := @parameter3: kotlinx.coroutines.flow.FlowCollector;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows> = $r5;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0, $r7;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.Flow[] $r3;
        kotlin.jvm.functions.Function0 $r4;
        kotlin.jvm.functions.Function3 $r5;
        kotlinx.coroutines.flow.FlowCollector $r6;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r7 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        $r6 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        specialinvoke $r7.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4, $r5, $r6, $r2);

        $r7.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r7;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 r0;
        java.lang.Object $r1, $r2, $r3;
        int $i0, $i1, $i2;
        byte[] $r4;
        kotlinx.coroutines.channels.Channel $r5;
        java.lang.Object[] $r6, $r18, $r21;
        java.lang.IllegalStateException $r7;
        kotlinx.coroutines.channels.ChannelResult $r8;
        kotlinx.coroutines.CoroutineScope $r9;
        kotlinx.coroutines.flow.Flow[] $r10;
        kotlinx.coroutines.internal.Symbol $r11;
        java.util.concurrent.atomic.AtomicInteger $r12;
        kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 $r13;
        kotlin.jvm.functions.Function2 $r14;
        byte $b3;
        kotlin.coroutines.Continuation $r15;
        kotlin.collections.IndexedValue $r16;
        kotlin.jvm.functions.Function0 $r17;
        kotlin.jvm.functions.Function3 $r19;
        kotlinx.coroutines.flow.FlowCollector $r20;
        kotlin.Unit r22;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label>;

        if $i0 == 0 goto label04;

        if $i0 == 1 goto label03;

        if $i0 == 2 goto label02;

        if $i0 != 3 goto label01;

        $i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        $r4 = (byte[]) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.channels.Channel) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = (java.lang.Object[]) $r3;

        goto label18;

     label01:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label02:
        $i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        $r4 = (byte[]) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.channels.Channel) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = (java.lang.Object[]) $r3;

        goto label09;

     label03:
        $i1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1>;

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2>;

        $r4 = (byte[]) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.channels.Channel) $r3;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r8 = (kotlinx.coroutines.channels.ChannelResult) $r1;

        $r1 = virtualinvoke $r8.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        $r6 = (java.lang.Object[]) $r3;

        goto label11;

     label04:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0>;

        $r9 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r10 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        $i0 = lengthof $r10;

        if $i0 != 0 goto label05;

        r22 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r22;

     label05:
        $r6 = newarray (java.lang.Object)[$i0];

        $r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED>;

        staticinvoke <kotlin.collections.ArraysKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)>($r6, $r11, 0, 0, 6, null);

        $r5 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>($i0, null, null, 6, null);

        $r12 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($i0);

        if $i0 <= 0 goto label08;

        $i1 = 0;

     label06:
        $i2 = $i1 + 1;

        $r13 = new kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1;

        $r10 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows>;

        specialinvoke $r13.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: void <init>(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>($r10, $i1, $r12, $r5, null);

        $r14 = (kotlin.jvm.functions.Function2) $r13;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r9, null, null, $r14, 3, null);

        if $i2 < $i0 goto label07;

        goto label08;

     label07:
        $i1 = $i2;

        goto label06;

     label08:
        $r4 = newarray (byte)[$i0];

        $i1 = 0;

     label09:
        $i1 = $i1 + 1;

        $b3 = (byte) $i1;

        $r15 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = $r6;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = $r5;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = $r4;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = $i0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = $b3;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 1;

        $r3 = interfaceinvoke $r5.<kotlinx.coroutines.channels.Channel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)>($r15);

        $r1 = $r3;

        if $r3 != $r2 goto label10;

        return $r2;

     label10:
        $i1 = $b3;

     label11:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r1);

        $r16 = (kotlin.collections.IndexedValue) $r1;

        if $r16 != null goto label12;

        r22 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r22;

     label12:
        $i2 = virtualinvoke $r16.<kotlin.collections.IndexedValue: int getIndex()>();

        $r1 = $r6[$i2];

        $r3 = virtualinvoke $r16.<kotlin.collections.IndexedValue: java.lang.Object getValue()>();

        $r6[$i2] = $r3;

        $r11 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED>;

        if $r1 != $r11 goto label13;

        $i0 = $i0 + -1;

     label13:
        $b3 = $r4[$i2];

        if $b3 != $i1 goto label14;

        goto label15;

     label14:
        $b3 = (byte) $i1;

        $r4[$i2] = $b3;

        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.channels.Channel: java.lang.Object tryReceive-PtdJZtk()>();

        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r1);

        $r16 = (kotlin.collections.IndexedValue) $r1;

        if $r16 != null goto label12;

     label15:
        if $i0 != 0 goto label19;

        $r17 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory>;

        $r1 = interfaceinvoke $r17.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r18 = (java.lang.Object[]) $r1;

        if $r18 != null goto label17;

        $r19 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        $r20 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = $r6;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = $r5;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = $r4;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = $i0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = $i1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 2;

        $r1 = interfaceinvoke $r19.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r20, $r6, r0);

        if $r1 != $r2 goto label16;

        return $r2;

     label16:
        goto label09;

     label17:
        $r21 = $r6;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>($r6, $r18, 0, 0, 0, 14, null);

        $r19 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform>;

        $r20 = r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal>;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0> = $r6;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1> = $r5;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2> = $r4;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0> = $i0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1> = $i1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label> = 3;

        $r1 = interfaceinvoke $r19.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r20, $r18, r0);

        if $r1 != $r2 goto label20;

        return $r2;

     label18:
        goto label09;

     label19:
        $r21 = $r6;

     label20:
        $r6 = $r21;

        goto label18;
    }
}
