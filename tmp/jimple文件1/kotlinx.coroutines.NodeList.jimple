public final class kotlinx.coroutines.NodeList extends kotlinx.coroutines.internal.LockFreeLinkedListHead implements kotlinx.coroutines.Incomplete
{

    public void <init>()
    {
        kotlinx.coroutines.NodeList r0;

        r0 := @this: kotlinx.coroutines.NodeList;

        specialinvoke r0.<kotlinx.coroutines.internal.LockFreeLinkedListHead: void <init>()>();

        return;
    }

    public kotlinx.coroutines.NodeList getList()
    {
        kotlinx.coroutines.NodeList r0;

        r0 := @this: kotlinx.coroutines.NodeList;

        return r0;
    }

    public final java.lang.String getString(java.lang.String)
    {
        kotlinx.coroutines.NodeList r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        kotlinx.coroutines.internal.LockFreeLinkedListHead $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r5;
        boolean $z0, $z1;
        kotlinx.coroutines.JobNode $r6;

        r0 := @this: kotlinx.coroutines.NodeList;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List{");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}[");

        $r3 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) r0;

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        $r5 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r4;

        $z0 = 1;

     label1:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r3);

        if $z1 != 0 goto label5;

        $z1 = $r5 instanceof kotlinx.coroutines.JobNode;

        if $z1 == 0 goto label4;

        $r6 = (kotlinx.coroutines.JobNode) $r5;

        if $z0 == 0 goto label2;

        $z0 = 0;

        goto label3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label4:
        $r5 = virtualinvoke $r5.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label1;

     label5:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "StringBuilder().apply(builderAction).toString()");

        return $r1;
    }

    public boolean isActive()
    {
        kotlinx.coroutines.NodeList r0;

        r0 := @this: kotlinx.coroutines.NodeList;

        return 1;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.NodeList r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: kotlinx.coroutines.NodeList;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getDEBUG()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)>("Active");

        return $r1;

     label1:
        $r1 = specialinvoke r0.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.String toString()>();

        return $r1;
    }
}
