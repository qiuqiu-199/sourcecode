final class kotlinx.coroutines.channels.AbstractSendChannel$SendSelect extends kotlinx.coroutines.channels.Send implements kotlinx.coroutines.DisposableHandle
{
    public final kotlin.jvm.functions.Function2 block;
    public final kotlinx.coroutines.channels.AbstractSendChannel channel;
    private final java.lang.Object pollResult;
    public final kotlinx.coroutines.selects.SelectInstance select;

    public void <init>(java.lang.Object, kotlinx.coroutines.channels.AbstractSendChannel, kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.AbstractSendChannel $r2;
        kotlinx.coroutines.selects.SelectInstance $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlinx.coroutines.channels.AbstractSendChannel;

        $r3 := @parameter2: kotlinx.coroutines.selects.SelectInstance;

        $r4 := @parameter3: kotlin.jvm.functions.Function2;

        specialinvoke r0.<kotlinx.coroutines.channels.Send: void <init>()>();

        r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object pollResult> = $r1;

        r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.channels.AbstractSendChannel channel> = $r2;

        r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select> = $r3;

        r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlin.jvm.functions.Function2 block> = $r4;

        return;
    }

    public void completeResumeSend()
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.channels.AbstractSendChannel $r2;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.selects.SelectInstance $r4;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r1 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlin.jvm.functions.Function2 block>;

        $r2 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.channels.AbstractSendChannel channel>;

        $r4 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r3 = interfaceinvoke $r4.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $r2, $r3, null, 4, null);

        return;
    }

    public void dispose()
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: boolean remove()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: void undeliveredElement()>();

        return;
    }

    public java.lang.Object getPollResult()
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        r1 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object pollResult>;

        return r1;
    }

    public void resumeSendClosed(kotlinx.coroutines.channels.Closed)
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        kotlinx.coroutines.channels.Closed $r1;
        kotlinx.coroutines.selects.SelectInstance $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r1 := @parameter0: kotlinx.coroutines.channels.Closed;

        $r2 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $z0 = interfaceinvoke $r2.<kotlinx.coroutines.selects.SelectInstance: boolean trySelect()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r3 = virtualinvoke $r1.<kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()>();

        interfaceinvoke $r2.<kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)>($r3);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.channels.AbstractSendChannel $r4;
        kotlinx.coroutines.selects.SelectInstance $r5;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SendSelect@");

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r3 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object getPollResult()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")[");

        $r4 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.channels.AbstractSendChannel channel>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        kotlinx.coroutines.selects.SelectInstance $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp $r3;
        kotlinx.coroutines.internal.Symbol $r4;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r3 := @parameter0: kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp;

        $r1 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: java.lang.Object trySelectOther(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)>($r3);

        $r4 = (kotlinx.coroutines.internal.Symbol) $r2;

        return $r4;
    }

    public void undeliveredElement()
    {
        kotlinx.coroutines.channels.AbstractSendChannel$SendSelect r0;
        kotlinx.coroutines.channels.AbstractSendChannel $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.selects.SelectInstance $r4;
        kotlin.coroutines.Continuation $r5;
        kotlin.coroutines.CoroutineContext $r6;

        r0 := @this: kotlinx.coroutines.channels.AbstractSendChannel$SendSelect;

        $r1 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.channels.AbstractSendChannel channel>;

        $r2 = $r1.<kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: java.lang.Object getPollResult()>();

        $r4 = r0.<kotlinx.coroutines.channels.AbstractSendChannel$SendSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r5 = interfaceinvoke $r4.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        $r6 = interfaceinvoke $r5.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        staticinvoke <kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)>($r2, $r3, $r6);

        return;
    }
}
