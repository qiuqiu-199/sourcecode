final class kotlinx.coroutines.flow.internal.NoOpContinuation extends java.lang.Object implements kotlin.coroutines.Continuation
{
    public static final kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE;
    private static final kotlin.coroutines.CoroutineContext context;

    static void <clinit>()
    {
        kotlinx.coroutines.flow.internal.NoOpContinuation $r0;
        kotlin.coroutines.EmptyCoroutineContext $r1;
        kotlin.coroutines.CoroutineContext $r2;

        $r0 = new kotlinx.coroutines.flow.internal.NoOpContinuation;

        specialinvoke $r0.<kotlinx.coroutines.flow.internal.NoOpContinuation: void <init>()>();

        <kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE> = $r0;

        $r1 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r2 = (kotlin.coroutines.CoroutineContext) $r1;

        <kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context> = $r2;

        return;
    }

    private void <init>()
    {
        kotlinx.coroutines.flow.internal.NoOpContinuation r0;

        r0 := @this: kotlinx.coroutines.flow.internal.NoOpContinuation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public kotlin.coroutines.CoroutineContext getContext()
    {
        kotlinx.coroutines.flow.internal.NoOpContinuation r0;
        kotlin.coroutines.CoroutineContext r1;

        r0 := @this: kotlinx.coroutines.flow.internal.NoOpContinuation;

        r1 = <kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context>;

        return r1;
    }

    public void resumeWith(java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.NoOpContinuation r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.flow.internal.NoOpContinuation;

        $r1 := @parameter0: java.lang.Object;

        return;
    }
}
