final class kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect extends kotlinx.coroutines.channels.Receive implements kotlinx.coroutines.DisposableHandle
{
    public final kotlin.jvm.functions.Function2 block;
    public final kotlinx.coroutines.channels.AbstractChannel channel;
    public final int receiveMode;
    public final kotlinx.coroutines.selects.SelectInstance select;

    public void <init>(kotlinx.coroutines.channels.AbstractChannel, kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function2, int)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        kotlinx.coroutines.channels.AbstractChannel $r1;
        kotlinx.coroutines.selects.SelectInstance $r2;
        kotlin.jvm.functions.Function2 $r3;
        int $i0;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r1 := @parameter0: kotlinx.coroutines.channels.AbstractChannel;

        $r2 := @parameter1: kotlinx.coroutines.selects.SelectInstance;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        $i0 := @parameter3: int;

        specialinvoke r0.<kotlinx.coroutines.channels.Receive: void <init>()>();

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.channels.AbstractChannel channel> = $r1;

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select> = $r2;

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function2 block> = $r3;

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: int receiveMode> = $i0;

        return;
    }

    public void completeResumeReceive(java.lang.Object)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2, $r4;
        int $i0;
        kotlinx.coroutines.channels.ChannelResult$Companion $r3;
        kotlinx.coroutines.selects.SelectInstance $r5;
        kotlin.coroutines.Continuation $r6;
        kotlin.jvm.functions.Function1 $r7;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function2 block>;

        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: int receiveMode>;

        if $i0 != 1 goto label1;

        $r3 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>($r2);

        $r4 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)>($r4);

        goto label2;

     label1:
        $r4 = $r2;

     label2:
        $r5 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r6 = interfaceinvoke $r5.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        $r7 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)>($r2);

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)>($r1, $r4, $r6, $r7);

        return;
    }

    public void dispose()
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        boolean $z0;
        kotlinx.coroutines.channels.AbstractChannel $r1;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: boolean remove()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.channels.AbstractChannel channel>;

        virtualinvoke $r1.<kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()>();

     label1:
        return;
    }

    public kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.AbstractChannel $r2;
        kotlin.jvm.functions.Function1 $r3;
        kotlinx.coroutines.selects.SelectInstance $r4;
        kotlin.coroutines.Continuation $r5;
        kotlin.coroutines.CoroutineContext $r6;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.channels.AbstractChannel channel>;

        $r3 = $r2.<kotlinx.coroutines.channels.AbstractChannel: kotlin.jvm.functions.Function1 onUndeliveredElement>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r5 = interfaceinvoke $r4.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        $r6 = interfaceinvoke $r5.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = staticinvoke <kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)>($r3, $r1, $r6);

        return $r3;
    }

    public void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.channels.Closed $r2;
        kotlinx.coroutines.selects.SelectInstance $r3;
        boolean $z0;
        int $i0;
        kotlinx.coroutines.channels.ChannelResult$Companion $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r6;
        kotlinx.coroutines.channels.ChannelResult $r7;
        kotlin.coroutines.Continuation $r8;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r2 := @parameter0: kotlinx.coroutines.channels.Closed;

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $z0 = interfaceinvoke $r3.<kotlinx.coroutines.selects.SelectInstance: boolean trySelect()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: int receiveMode>;

        if $i0 == 0 goto label3;

        if $i0 == 1 goto label2;

        return;

     label2:
        $r1 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlin.jvm.functions.Function2 block>;

        $r4 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r5 = $r2.<kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause>;

        $r6 = virtualinvoke $r4.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)>($r5);

        $r7 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)>($r6);

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r8 = interfaceinvoke $r3.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $r7, $r8, null, 4, null);

        return;

     label3:
        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r5 = virtualinvoke $r2.<kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()>();

        interfaceinvoke $r3.<kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)>($r5);

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        kotlinx.coroutines.selects.SelectInstance $r3;
        int $i0;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReceiveSelect@");

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",receiveMode=");

        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: int receiveMode>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.selects.SelectInstance $r3;
        kotlinx.coroutines.internal.Symbol $r4;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp;

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect: kotlinx.coroutines.selects.SelectInstance select>;

        $r2 = interfaceinvoke $r3.<kotlinx.coroutines.selects.SelectInstance: java.lang.Object trySelectOther(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)>($r1);

        $r4 = (kotlinx.coroutines.internal.Symbol) $r2;

        return $r4;
    }
}
