public final class kotlinx.coroutines.internal.SegmentOrClosed extends java.lang.Object
{
    private final java.lang.Object value;

    private void <init>(java.lang.Object)
    {
        kotlinx.coroutines.internal.SegmentOrClosed r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.internal.SegmentOrClosed;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value> = $r1;

        return;
    }

    public static final kotlinx.coroutines.internal.SegmentOrClosed box-impl(java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.internal.SegmentOrClosed $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new kotlinx.coroutines.internal.SegmentOrClosed;

        specialinvoke $r1.<kotlinx.coroutines.internal.SegmentOrClosed: void <init>(java.lang.Object)>($r0);

        return $r1;
    }

    public static java.lang.Object constructor-impl(java.lang.Object)
    {
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        return $r0;
    }

    public static boolean equals-impl(java.lang.Object, java.lang.Object)
    {
        boolean $z0;
        java.lang.Object $r0, $r1;
        kotlinx.coroutines.internal.SegmentOrClosed $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.internal.SegmentOrClosed;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (kotlinx.coroutines.internal.SegmentOrClosed) $r1;

        $r1 = virtualinvoke $r2.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object unbox-impl()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, $r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static final boolean equals-impl0(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r0);

        return $z0;
    }

    public static void getSegment$annotations()
    {
        return;
    }

    public static final kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.internal.Symbol $r1;
        kotlinx.coroutines.internal.Segment $r2;
        java.lang.NullPointerException $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol access$getCLOSED$p()>();

        if $r0 == $r1 goto label2;

        if $r0 == null goto label1;

        $r2 = (kotlinx.coroutines.internal.Segment) $r0;

        return $r2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type S of kotlinx.coroutines.internal.SegmentOrClosed");

        throw $r3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = "Does not contain segment";

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;
    }

    public static int hashCode-impl(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public static final boolean isClosed-impl(java.lang.Object)
    {
        kotlinx.coroutines.internal.Symbol $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol access$getCLOSED$p()>();

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String toString-impl(java.lang.Object)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        $r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SegmentOrClosed(value=");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        kotlinx.coroutines.internal.SegmentOrClosed r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.internal.SegmentOrClosed;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value>;

        $z0 = staticinvoke <kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $z0;
    }

    public int hashCode()
    {
        kotlinx.coroutines.internal.SegmentOrClosed r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.internal.SegmentOrClosed;

        $r1 = r0.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value>;

        $i0 = staticinvoke <kotlinx.coroutines.internal.SegmentOrClosed: int hashCode-impl(java.lang.Object)>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.internal.SegmentOrClosed r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        r0 := @this: kotlinx.coroutines.internal.SegmentOrClosed;

        $r2 = r0.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value>;

        $r1 = staticinvoke <kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString-impl(java.lang.Object)>($r2);

        return $r1;
    }

    public final java.lang.Object unbox-impl()
    {
        kotlinx.coroutines.internal.SegmentOrClosed r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.internal.SegmentOrClosed;

        r1 = r0.<kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value>;

        return r1;
    }
}
