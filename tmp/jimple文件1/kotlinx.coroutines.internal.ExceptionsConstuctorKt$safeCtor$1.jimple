public final class kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1
{
    final kotlin.jvm.functions.Function1 $block;

    public void <init>(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1 r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1 r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.Throwable) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)>($r1);

        return $r1;
    }

    public final java.lang.Throwable invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1 r0;
        kotlin.Result$Companion $r1;
        java.lang.Throwable $r2, $r5;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1;

        $r2 := @parameter0: java.lang.Throwable;

        $r3 = r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block>;

     label1:
        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Throwable) $r4;

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r5);

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

     label4:
        $z0 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>($r4);

        if $z0 == 0 goto label5;

        $r4 = null;

     label5:
        $r2 = (java.lang.Throwable) $r4;

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
