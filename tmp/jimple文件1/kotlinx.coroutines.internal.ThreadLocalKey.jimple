public final class kotlinx.coroutines.internal.ThreadLocalKey extends java.lang.Object implements kotlin.coroutines.CoroutineContext$Key
{
    private final java.lang.ThreadLocal threadLocal;

    public void <init>(java.lang.ThreadLocal)
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        $r1 := @parameter0: java.lang.ThreadLocal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal> = $r1;

        return;
    }

    private final java.lang.ThreadLocal component1()
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0;
        java.lang.ThreadLocal r1;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        r1 = r0.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

        return r1;
    }

    public static kotlinx.coroutines.internal.ThreadLocalKey copy$default(kotlinx.coroutines.internal.ThreadLocalKey, java.lang.ThreadLocal, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.internal.ThreadLocalKey $r1;
        java.lang.ThreadLocal $r2;
        int $i0;

        $r1 := @parameter0: kotlinx.coroutines.internal.ThreadLocalKey;

        $r2 := @parameter1: java.lang.ThreadLocal;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = $r1.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

     label1:
        $r1 = virtualinvoke $r1.<kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy(java.lang.ThreadLocal)>($r2);

        return $r1;
    }

    public final kotlinx.coroutines.internal.ThreadLocalKey copy(java.lang.ThreadLocal)
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        $r1 := @parameter0: java.lang.ThreadLocal;

        r0 = new kotlinx.coroutines.internal.ThreadLocalKey;

        specialinvoke r0.<kotlinx.coroutines.internal.ThreadLocalKey: void <init>(java.lang.ThreadLocal)>($r1);

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0, $r2;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.ThreadLocal $r3, $r4;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof kotlinx.coroutines.internal.ThreadLocalKey;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (kotlinx.coroutines.internal.ThreadLocalKey) $r1;

        $r3 = r0.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

        $r4 = $r2.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0;
        int $i0;
        java.lang.ThreadLocal $r1;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        $r1 = r0.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

        $i0 = virtualinvoke $r1.<java.lang.ThreadLocal: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.internal.ThreadLocalKey r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        java.lang.ThreadLocal $r3;

        r0 := @this: kotlinx.coroutines.internal.ThreadLocalKey;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadLocalKey(threadLocal=");

        $r3 = r0.<kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
