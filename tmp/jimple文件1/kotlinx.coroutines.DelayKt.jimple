public final class kotlinx.coroutines.DelayKt extends java.lang.Object
{

    public static final java.lang.Object awaitCancellation(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r6;
        boolean $z0;
        kotlinx.coroutines.DelayKt$awaitCancellation$1 $r1;
        int $i0;
        java.lang.Object $r2, $r3, $r8;
        java.lang.IllegalStateException $r4;
        kotlinx.coroutines.CancellableContinuationImpl $r5;
        kotlinx.coroutines.CancellableContinuation $r7;
        kotlin.KotlinNothingValueException $r9;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = $r0 instanceof kotlinx.coroutines.DelayKt$awaitCancellation$1;

        if $z0 == 0 goto label1;

        $r1 = (kotlinx.coroutines.DelayKt$awaitCancellation$1) $r0;

        $i0 = $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: int label>;

        $i0 = $i0 - -2147483648;

        $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: int label> = $i0;

        goto label2;

     label1:
        $r1 = new kotlinx.coroutines.DelayKt$awaitCancellation$1;

        specialinvoke $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: void <init>(kotlin.coroutines.Continuation)>($r0);

     label2:
        $r2 = $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object result>;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r4;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r1.<kotlinx.coroutines.DelayKt$awaitCancellation$1: int label> = 1;

        $r0 = (kotlin.coroutines.Continuation) $r1;

        $r5 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r0);

        specialinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r6, 1);

        virtualinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        $r7 = (kotlinx.coroutines.CancellableContinuation) $r5;

        $r2 = virtualinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r2 != $r8 goto label5;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r0);

     label5:
        if $r2 != $r3 goto label6;

        return $r3;

     label6:
        $r9 = new kotlin.KotlinNothingValueException;

        specialinvoke $r9.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r9;
    }

    public static final java.lang.Object delay(long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r2;
        long $l0;
        byte $b1;
        kotlinx.coroutines.CancellableContinuationImpl $r1;
        kotlinx.coroutines.CancellableContinuation $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlinx.coroutines.Delay $r5;
        java.lang.Object $r6, $r7;
        kotlin.Unit r8;

        $l0 := @parameter0: long;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;

     label1:
        $r1 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r0);

        specialinvoke $r1.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r2, 1);

        virtualinvoke $r1.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        $r3 = (kotlinx.coroutines.CancellableContinuation) $r1;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 >= 0 goto label2;

        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.CancellableContinuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r5 = staticinvoke <kotlinx.coroutines.DelayKt: kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)>($r4);

        interfaceinvoke $r5.<kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)>($l0, $r3);

     label2:
        $r6 = virtualinvoke $r1.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label3;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r0);

     label3:
        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label4;

        return $r6;

     label4:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }

    public static final java.lang.Object delay-VtjQ1oo(long, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        long $l0;
        java.lang.Object $r1, $r2;
        kotlin.Unit r3;

        $l0 := @parameter0: long;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $l0 = staticinvoke <kotlinx.coroutines.DelayKt: long toDelayMillis-LRDsOJo(long)>($l0);

        $r1 = staticinvoke <kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)>($l0, $r0);

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != $r2 goto label1;

        return $r1;

     label1:
        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public static final kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlin.coroutines.ContinuationInterceptor$Key $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;
        boolean $z0;
        kotlinx.coroutines.Delay $r4;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 = <kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key>;

        $r2 = (kotlin.coroutines.CoroutineContext$Key) $r1;

        $r3 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r2);

        $z0 = $r3 instanceof kotlinx.coroutines.Delay;

        if $z0 == 0 goto label1;

        $r4 = (kotlinx.coroutines.Delay) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 != null goto label3;

        $r4 = staticinvoke <kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()>();

     label3:
        return $r4;
    }

    public static final long toDelayMillis-LRDsOJo(long)
    {
        long $l0, $l1;
        kotlin.time.Duration$Companion $r0;
        int $i2;

        $l0 := @parameter0: long;

        $r0 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $l1 = virtualinvoke $r0.<kotlin.time.Duration$Companion: long getZERO-UwyO8pc()>();

        $i2 = staticinvoke <kotlin.time.Duration: int compareTo-LRDsOJo(long,long)>($l0, $l1);

        if $i2 <= 0 goto label1;

        $l0 = staticinvoke <kotlin.time.Duration: long getInWholeMilliseconds-impl(long)>($l0);

        $l0 = staticinvoke <kotlin.ranges.RangesKt: long coerceAtLeast(long,long)>($l0, 1L);

        return $l0;

     label1:
        return 0L;
    }
}
