public class kotlinx.coroutines.channels.SendElement extends kotlinx.coroutines.channels.Send
{
    public final kotlinx.coroutines.CancellableContinuation cont;
    private final java.lang.Object pollResult;

    public void <init>(java.lang.Object, kotlinx.coroutines.CancellableContinuation)
    {
        kotlinx.coroutines.channels.SendElement r0;
        java.lang.Object $r1;
        kotlinx.coroutines.CancellableContinuation $r2;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        specialinvoke r0.<kotlinx.coroutines.channels.Send: void <init>()>();

        r0.<kotlinx.coroutines.channels.SendElement: java.lang.Object pollResult> = $r1;

        r0.<kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont> = $r2;

        return;
    }

    public void completeResumeSend()
    {
        kotlinx.coroutines.channels.SendElement r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        kotlinx.coroutines.internal.Symbol $r2;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        $r1 = r0.<kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r2 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        interfaceinvoke $r1.<kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)>($r2);

        return;
    }

    public java.lang.Object getPollResult()
    {
        kotlinx.coroutines.channels.SendElement r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        r1 = r0.<kotlinx.coroutines.channels.SendElement: java.lang.Object pollResult>;

        return r1;
    }

    public void resumeSendClosed(kotlinx.coroutines.channels.Closed)
    {
        kotlinx.coroutines.channels.SendElement r0;
        kotlin.Result$Companion $r1;
        kotlinx.coroutines.channels.Closed $r2;
        kotlinx.coroutines.CancellableContinuation $r3;
        kotlin.coroutines.Continuation $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r6;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        $r2 := @parameter0: kotlinx.coroutines.channels.Closed;

        $r3 = r0.<kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r4 = (kotlin.coroutines.Continuation) $r3;

        $r5 = virtualinvoke $r2.<kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()>();

        $r1 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r6 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r5);

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        interfaceinvoke $r4.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.channels.SendElement r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r3 = virtualinvoke r0.<kotlinx.coroutines.channels.SendElement: java.lang.Object getPollResult()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
    {
        kotlinx.coroutines.channels.SendElement r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp $r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.Unit $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc $r4;
        java.lang.Object $r5;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r6;
        java.lang.AssertionError $r7;

        r0 := @this: kotlinx.coroutines.channels.SendElement;

        $r1 := @parameter0: kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp;

        $r2 = r0.<kotlinx.coroutines.channels.SendElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc desc>;

     label2:
        $r5 = interfaceinvoke $r2.<kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $r5 != null goto label3;

        return null;

     label3:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label7;

        $r6 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        if $r5 != $r6 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z0 == 0 goto label6;

        goto label7;

     label6:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label7:
        if $r1 != null goto label8;

        goto label9;

     label8:
        virtualinvoke $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: void finishPrepare()>();

     label9:
        $r6 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        return $r6;
    }
}
