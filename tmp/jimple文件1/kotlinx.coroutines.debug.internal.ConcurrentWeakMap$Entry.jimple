final class kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry extends java.lang.Object implements java.util.Map$Entry, kotlin.jvm.internal.markers.KMutableMap$Entry
{
    private final java.lang.Object key;
    private final java.lang.Object value;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry r0;
        java.lang.Object $r1, $r2;

        r0 := @this: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object key> = $r1;

        r0.<kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object value> = $r2;

        return;
    }

    public java.lang.Object getKey()
    {
        kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry;

        r1 = r0.<kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object key>;

        return r1;
    }

    public java.lang.Object getValue()
    {
        kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry;

        r1 = r0.<kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object value>;

        return r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry r0;
        java.lang.Object $r1;
        kotlin.KotlinNothingValueException $r2;

        r0 := @this: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: java.lang.Void access$noImpl()>();

        $r2 = new kotlin.KotlinNothingValueException;

        specialinvoke $r2.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r2;
    }
}
