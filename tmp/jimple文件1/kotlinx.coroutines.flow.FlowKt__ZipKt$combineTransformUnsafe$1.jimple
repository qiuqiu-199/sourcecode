public final class kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.Flow[] $flows;
    final kotlin.jvm.functions.Function3 $transform;
    private java.lang.Object L$0;
    int label;

    public void <init>(kotlinx.coroutines.flow.Flow[], kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0;
        kotlin.jvm.functions.Function3 $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.Flow[] $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r3 := @parameter0: kotlinx.coroutines.flow.Flow[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows> = $r3;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0, $r5;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.Flow[] $r3;
        kotlin.jvm.functions.Function3 $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows>;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0;
        java.lang.Object $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlinx.coroutines.flow.Flow[] $r5;
        kotlin.jvm.functions.Function0 $r6;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1 $r7;
        kotlin.jvm.functions.Function3 $r8;
        kotlin.coroutines.Continuation $r9;
        kotlin.Unit r10;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: int label>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label3;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0>;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows>;

        $r6 = staticinvoke <kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 access$nullArrayFactory()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r7 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1;

        $r8 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r8, null);

        $r8 = (kotlin.jvm.functions.Function3) $r7;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: int label> = 1;

        $r1 = staticinvoke <kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r4, $r5, $r6, $r8, $r9);

        if $r1 != $r2 goto label3;

        return $r2;

     label3:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;
    }

    public final java.lang.Object invokeSuspend$$forInline(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1 r0;
        kotlinx.coroutines.flow.Flow[] $r1;
        kotlin.jvm.functions.Function0 $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1 $r5;
        kotlin.jvm.functions.Function3 $r6;
        kotlin.coroutines.Continuation $r7;
        kotlin.Unit r8;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1;

        $r3 := @parameter0: java.lang.Object;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0>;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows>;

        $r2 = staticinvoke <kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 access$nullArrayFactory()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void needClassReification()>();

        $r5 = new kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1;

        $r6 = r0.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: void <init>(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r6, null);

        $r6 = (kotlin.jvm.functions.Function3) $r5;

        $r7 = (kotlin.coroutines.Continuation) r0;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        staticinvoke <kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r4, $r1, $r2, $r6, $r7);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }
}
