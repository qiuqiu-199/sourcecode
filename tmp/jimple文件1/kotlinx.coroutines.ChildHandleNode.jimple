public final class kotlinx.coroutines.ChildHandleNode extends kotlinx.coroutines.JobCancellingNode implements kotlinx.coroutines.ChildHandle
{
    public final kotlinx.coroutines.ChildJob childJob;

    public void <init>(kotlinx.coroutines.ChildJob)
    {
        kotlinx.coroutines.ChildHandleNode r0;
        kotlinx.coroutines.ChildJob $r1;

        r0 := @this: kotlinx.coroutines.ChildHandleNode;

        $r1 := @parameter0: kotlinx.coroutines.ChildJob;

        specialinvoke r0.<kotlinx.coroutines.JobCancellingNode: void <init>()>();

        r0.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob> = $r1;

        return;
    }

    public boolean childCancelled(java.lang.Throwable)
    {
        kotlinx.coroutines.ChildHandleNode r0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.JobSupport $r2;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.ChildHandleNode;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.JobSupport getJob()>();

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)>($r1);

        return $z0;
    }

    public kotlinx.coroutines.Job getParent()
    {
        kotlinx.coroutines.ChildHandleNode r0;
        kotlinx.coroutines.JobSupport $r1;
        kotlinx.coroutines.Job $r2;

        r0 := @this: kotlinx.coroutines.ChildHandleNode;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.JobSupport getJob()>();

        $r2 = (kotlinx.coroutines.Job) $r1;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.ChildHandleNode r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        kotlin.Unit r3;

        r0 := @this: kotlinx.coroutines.ChildHandleNode;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)>($r2);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public void invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.ChildHandleNode r0;
        kotlinx.coroutines.JobSupport $r1;
        java.lang.Throwable $r2;
        kotlinx.coroutines.ChildJob $r3;
        kotlinx.coroutines.ParentJob $r4;

        r0 := @this: kotlinx.coroutines.ChildHandleNode;

        $r2 := @parameter0: java.lang.Throwable;

        $r3 = r0.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.JobSupport getJob()>();

        $r4 = (kotlinx.coroutines.ParentJob) $r1;

        interfaceinvoke $r3.<kotlinx.coroutines.ChildJob: void parentCancelled(kotlinx.coroutines.ParentJob)>($r4);

        return;
    }
}
