public final class kotlinx.coroutines.channels.ChannelKt extends java.lang.Object
{

    public static final kotlinx.coroutines.channels.Channel Channel(int)
    {
        kotlinx.coroutines.channels.Channel $r0;
        int $i0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>($i0, null, null, 6, null);

        return $r0;
    }

    public static final kotlinx.coroutines.channels.Channel Channel(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        kotlinx.coroutines.channels.BufferOverflow $r1, $r2;
        kotlinx.coroutines.channels.ConflatedChannel $r3;
        kotlinx.coroutines.channels.AbstractChannel $r4;
        kotlinx.coroutines.channels.ArrayChannel $r5;
        kotlinx.coroutines.channels.Channel $r6;
        kotlinx.coroutines.channels.LinkedListChannel $r7;
        kotlinx.coroutines.channels.RendezvousChannel $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        kotlinx.coroutines.channels.Channel$Factory $r12;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        $i1 = 1;

        if $i0 == -2 goto label11;

        if $i0 == -1 goto label07;

        if $i0 == 0 goto label04;

        if $i0 == 2147483647 goto label03;

        if $i0 != 1 goto label01;

        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST>;

        if $r1 != $r2 goto label01;

        $r3 = new kotlinx.coroutines.channels.ConflatedChannel;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r4 = (kotlinx.coroutines.channels.AbstractChannel) $r3;

        goto label02;

     label01:
        $r5 = new kotlinx.coroutines.channels.ArrayChannel;

        specialinvoke $r5.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i0, $r1, $r0);

        $r4 = (kotlinx.coroutines.channels.AbstractChannel) $r5;

     label02:
        $r6 = (kotlinx.coroutines.channels.Channel) $r4;

        return $r6;

     label03:
        $r7 = new kotlinx.coroutines.channels.LinkedListChannel;

        specialinvoke $r7.<kotlinx.coroutines.channels.LinkedListChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r6 = (kotlinx.coroutines.channels.Channel) $r7;

        return $r6;

     label04:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label05;

        $r8 = new kotlinx.coroutines.channels.RendezvousChannel;

        specialinvoke $r8.<kotlinx.coroutines.channels.RendezvousChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r4 = (kotlinx.coroutines.channels.AbstractChannel) $r8;

        goto label06;

     label05:
        $r5 = new kotlinx.coroutines.channels.ArrayChannel;

        specialinvoke $r5.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>(1, $r1, $r0);

        $r4 = (kotlinx.coroutines.channels.AbstractChannel) $r5;

     label06:
        $r6 = (kotlinx.coroutines.channels.Channel) $r4;

        return $r6;

     label07:
        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label08;

        goto label09;

     label08:
        $i1 = 0;

     label09:
        if $i1 == 0 goto label10;

        $r3 = new kotlinx.coroutines.channels.ConflatedChannel;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedChannel: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r6 = (kotlinx.coroutines.channels.Channel) $r3;

        return $r6;

     label10:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = "CONFLATED capacity cannot be used with non-default onBufferOverflow";

        $r10 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label11:
        $r5 = new kotlinx.coroutines.channels.ArrayChannel;

        $r2 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

        if $r1 != $r2 goto label12;

        $r12 = <kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory>;

        $i1 = virtualinvoke $r12.<kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()>();

     label12:
        specialinvoke $r5.<kotlinx.coroutines.channels.ArrayChannel: void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i1, $r1, $r0);

        $r6 = (kotlinx.coroutines.channels.Channel) $r5;

        return $r6;
    }

    public static kotlinx.coroutines.channels.Channel Channel$default(int, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.channels.Channel $r1;
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: java.lang.Object;

        $i1 = $i1 & 1;

        if $i1 == 0 goto label1;

        $i0 = 0;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)>($i0);

        return $r1;
    }

    public static kotlinx.coroutines.channels.Channel Channel$default(int, kotlinx.coroutines.channels.BufferOverflow, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.Channel $r0;
        int $i0, $i1, $i2;
        kotlinx.coroutines.channels.BufferOverflow $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlinx.coroutines.channels.BufferOverflow;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $i0 = 0;

     label1:
        $i2 = $i1 & 2;

        if $i2 == 0 goto label2;

        $r1 = <kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND>;

     label2:
        $i1 = $i1 & 4;

        if $i1 == 0 goto label3;

        $r2 = null;

     label3:
        $r0 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)>($i0, $r1, $r2);

        return $r0;
    }

    public static final java.lang.Object getOrElse-WpGqRn0(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r1);

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label1:
        return $r1;
    }

    public static final java.lang.Object onClosed-WpGqRn0(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Throwable $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = $r0 instanceof kotlinx.coroutines.channels.ChannelResult$Closed;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label1:
        return $r0;
    }

    public static final java.lang.Object onFailure-WpGqRn0(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Throwable $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = $r0 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label1:
        return $r0;
    }

    public static final java.lang.Object onSuccess-WpGqRn0(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 = $r0 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if $z0 != 0 goto label1;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

     label1:
        return $r0;
    }
}
