public interface  kotlinx.coroutines.channels.ReceiveChannel extends java.lang.Object
{

    public abstract void cancel();

    public abstract void cancel(java.util.concurrent.CancellationException);

    public abstract boolean cancel(java.lang.Throwable);

    public abstract kotlinx.coroutines.selects.SelectClause1 getOnReceive();

    public abstract kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching();

    public abstract kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull();

    public abstract boolean isClosedForReceive();

    public abstract boolean isEmpty();

    public abstract kotlinx.coroutines.channels.ChannelIterator iterator();

    public abstract java.lang.Object poll();

    public abstract java.lang.Object receive(kotlin.coroutines.Continuation);

    public abstract java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation);

    public abstract java.lang.Object receiveOrNull(kotlin.coroutines.Continuation);

    public abstract java.lang.Object tryReceive-PtdJZtk();
}
