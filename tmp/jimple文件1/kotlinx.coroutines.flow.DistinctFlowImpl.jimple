final class kotlinx.coroutines.flow.DistinctFlowImpl extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    public final kotlin.jvm.functions.Function2 areEquivalent;
    public final kotlin.jvm.functions.Function1 keySelector;
    private final kotlinx.coroutines.flow.Flow upstream;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.DistinctFlowImpl r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function1 $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: kotlinx.coroutines.flow.DistinctFlowImpl;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.flow.DistinctFlowImpl: kotlinx.coroutines.flow.Flow upstream> = $r1;

        r0.<kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function1 keySelector> = $r2;

        r0.<kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function2 areEquivalent> = $r3;

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.DistinctFlowImpl r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        kotlinx.coroutines.flow.FlowCollector $r2;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.internal.Symbol $r4;
        kotlinx.coroutines.flow.Flow $r5;
        kotlinx.coroutines.flow.DistinctFlowImpl$collect$$inlined$collect$1 $r6;
        java.lang.Object $r7, $r8;
        kotlin.Unit r9;

        r0 := @this: kotlinx.coroutines.flow.DistinctFlowImpl;

        $r2 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r3 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r1.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r4 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        $r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r4;

        $r5 = r0.<kotlinx.coroutines.flow.DistinctFlowImpl: kotlinx.coroutines.flow.Flow upstream>;

        $r6 = new kotlinx.coroutines.flow.DistinctFlowImpl$collect$$inlined$collect$1;

        specialinvoke $r6.<kotlinx.coroutines.flow.DistinctFlowImpl$collect$$inlined$collect$1: void <init>(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector)>(r0, $r1, $r2);

        $r2 = (kotlinx.coroutines.flow.FlowCollector) $r6;

        $r7 = interfaceinvoke $r5.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r2, $r3);

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r7 != $r8 goto label1;

        return $r7;

     label1:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r9;
    }
}
