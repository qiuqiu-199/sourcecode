public final class kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlin.jvm.internal.Ref$IntRef $consumed$inlined;
    final int $count$inlined;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined;

    public void <init>(kotlin.jvm.internal.Ref$IntRef, int, kotlinx.coroutines.flow.FlowCollector)
    {
        kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$IntRef $r1;
        int $i0;
        kotlinx.coroutines.flow.FlowCollector $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$IntRef;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlinx.coroutines.flow.FlowCollector;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $consumed$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: int $count$inlined> = $i0;

        r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1 r0;
        java.lang.Object $r1, $r5;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.internal.Ref$IntRef $r3;
        int $i0, $i1;
        kotlinx.coroutines.flow.FlowCollector $r4;
        kotlin.Unit r6;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $consumed$inlined>;

        $i0 = $r3.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i0 = $i0 + 1;

        $r3.<kotlin.jvm.internal.Ref$IntRef: int element> = $i0;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlin.jvm.internal.Ref$IntRef $consumed$inlined>;

        $i0 = $r3.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i1 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: int $count$inlined>;

        if $i0 >= $i1 goto label1;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined>;

        $r1 = interfaceinvoke $r4.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != $r5 goto label2;

        return $r1;

     label1:
        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__LimitKt$take$lambda-7$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined>;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object access$emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)>($r4, $r1, $r2);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != $r5 goto label2;

        return $r1;

     label2:
        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }
}
