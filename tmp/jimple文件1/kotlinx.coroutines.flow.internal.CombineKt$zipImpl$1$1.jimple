final class kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.Flow $flow;
    final kotlinx.coroutines.flow.Flow $flow2;
    final kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow;
    final kotlin.jvm.functions.Function3 $transform;
    private java.lang.Object L$0;
    int label;

    void <init>(kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function3, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 r0;
        kotlinx.coroutines.flow.Flow $r1, $r2;
        kotlin.jvm.functions.Function3 $r3;
        kotlin.coroutines.Continuation $r4;
        kotlinx.coroutines.flow.FlowCollector $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r5 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlinx.coroutines.flow.Flow;

        $r3 := @parameter3: kotlin.jvm.functions.Function3;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r5;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2> = $r1;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow> = $r2;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 r0, $r7;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.flow.FlowCollector $r3;
        kotlinx.coroutines.flow.Flow $r4, $r5;
        kotlin.jvm.functions.Function3 $r6;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r7 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r4 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2>;

        $r5 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow>;

        $r6 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform>;

        specialinvoke $r7.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r3, $r4, $r5, $r6, $r2);

        $r7.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r7;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1 r0;
        java.lang.Object $r1, $r3;
        kotlinx.coroutines.flow.Flow $r2;
        int $i0;
        kotlinx.coroutines.channels.ReceiveChannel $r4;
        java.lang.Throwable $r5;
        kotlinx.coroutines.flow.internal.AbortFlowException $r6;
        java.lang.IllegalStateException $r7;
        kotlinx.coroutines.CoroutineScope $r8;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1 $r9;
        kotlin.jvm.functions.Function2 $r10;
        kotlinx.coroutines.CompletableJob $r11;
        kotlinx.coroutines.channels.SendChannel $r12;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1 $r13;
        kotlinx.coroutines.flow.FlowCollector $r14;
        kotlin.jvm.functions.Function1 $r15;
        kotlin.coroutines.CoroutineContext $r16, $r17, $r18;
        kotlin.Unit $r19;
        kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2 $r20;
        kotlin.jvm.functions.Function3 $r21;
        kotlin.coroutines.Continuation $r22;

        r0 := @this: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: int label>;

        if $i0 == 0 goto label06;

        if $i0 != 1 goto label05;

        $r3 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0>;

        $r4 = (kotlinx.coroutines.channels.ReceiveChannel) $r3;

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label02:
        goto label15;

     label03:
        $r5 := @caughtexception;

        goto label21;

     label04:
        $r6 := @caughtexception;

        goto label18;

     label05:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0>;

        $r8 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r9 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1;

        $r2 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2>;

        specialinvoke $r9.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r2, null);

        $r10 = (kotlin.jvm.functions.Function2) $r9;

        $r4 = staticinvoke <kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r8, null, 0, $r10, 3, null);

        $r11 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r12 = (kotlinx.coroutines.channels.SendChannel) $r4;

        $r13 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1;

        $r14 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        specialinvoke $r13.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: void <init>(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.flow.FlowCollector)>($r11, $r14);

        $r15 = (kotlin.jvm.functions.Function1) $r13;

        interfaceinvoke $r12.<kotlinx.coroutines.channels.SendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)>($r15);

     label07:
        $r16 = interfaceinvoke $r8.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r1 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)>($r16);

        $r17 = interfaceinvoke $r8.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

     label08:
        $r18 = (kotlin.coroutines.CoroutineContext) $r11;

     label09:
        $r17 = interfaceinvoke $r17.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r18);

     label10:
        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r20 = new kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2;

        $r2 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow>;

        $r14 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r21 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform>;

     label11:
        specialinvoke $r20.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)>($r2, $r16, $r1, $r4, $r14, $r21, null);

     label12:
        $r10 = (kotlin.jvm.functions.Function2) $r20;

        $r22 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0> = $r4;

        r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: int label> = 1;

     label13:
        $r1 = staticinvoke <kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)>($r17, $r19, null, $r10, $r22, 4, null);

     label14:
        if $r1 != $r3 goto label15;

        return $r3;

     label15:
        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r4, null, 1, null);

        goto label20;

     label16:
        $r5 := @caughtexception;

        goto label21;

     label17:
        $r6 := @caughtexception;

     label18:
        $r14 = r0.<kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        staticinvoke <kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)>($r6, $r14);

     label19:
        goto label15;

     label20:
        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r19;

     label21:
        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r4, null, 1, null);

        throw $r5;

        catch kotlinx.coroutines.flow.internal.AbortFlowException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label07 to label08 with label17;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label09 to label10 with label17;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label11 to label12 with label17;
        catch kotlinx.coroutines.flow.internal.AbortFlowException from label13 to label14 with label17;
        catch java.lang.Throwable from label07 to label14 with label16;
        catch java.lang.Throwable from label18 to label19 with label03;
    }
}
