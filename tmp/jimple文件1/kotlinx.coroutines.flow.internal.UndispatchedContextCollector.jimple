final class kotlinx.coroutines.flow.internal.UndispatchedContextCollector extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    private final java.lang.Object countOrElement;
    private final kotlin.coroutines.CoroutineContext emitContext;
    private final kotlin.jvm.functions.Function2 emitRef;

    public void <init>(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.flow.internal.UndispatchedContextCollector r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        java.lang.Object $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1 $r4;
        kotlin.jvm.functions.Function2 $r5;

        r0 := @this: kotlinx.coroutines.flow.internal.UndispatchedContextCollector;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r3 := @parameter1: kotlin.coroutines.CoroutineContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.coroutines.CoroutineContext emitContext> = $r3;

        $r2 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)>($r3);

        r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object countOrElement> = $r2;

        $r4 = new kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1;

        specialinvoke $r4.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.jvm.functions.Function2 emitRef> = $r5;

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.internal.UndispatchedContextCollector r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Object $r2, $r4;
        kotlin.jvm.functions.Function2 $r3;
        kotlin.coroutines.Continuation $r5;
        kotlin.Unit r6;

        r0 := @this: kotlinx.coroutines.flow.internal.UndispatchedContextCollector;

        $r4 := @parameter0: java.lang.Object;

        $r5 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.coroutines.CoroutineContext emitContext>;

        $r2 = r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object countOrElement>;

        $r3 = r0.<kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.jvm.functions.Function2 emitRef>;

        $r4 = staticinvoke <kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r1, $r4, $r2, $r3, $r5);

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r2 goto label1;

        return $r4;

     label1:
        r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r6;
    }
}
