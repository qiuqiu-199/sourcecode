public interface  kotlinx.coroutines.Job extends java.lang.Object implements kotlin.coroutines.CoroutineContext$Element
{
    public static final kotlinx.coroutines.Job$Key Key;

    static void <clinit>()
    {
        kotlinx.coroutines.Job$Key $r0;

        $r0 = <kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE>;

        <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key> = $r0;

        return;
    }

    public abstract kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob);

    public abstract void cancel();

    public abstract void cancel(java.util.concurrent.CancellationException);

    public abstract boolean cancel(java.lang.Throwable);

    public abstract java.util.concurrent.CancellationException getCancellationException();

    public abstract kotlin.sequences.Sequence getChildren();

    public abstract kotlinx.coroutines.selects.SelectClause0 getOnJoin();

    public abstract kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1);

    public abstract kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean, boolean, kotlin.jvm.functions.Function1);

    public abstract boolean isActive();

    public abstract boolean isCancelled();

    public abstract boolean isCompleted();

    public abstract java.lang.Object join(kotlin.coroutines.Continuation);

    public abstract kotlinx.coroutines.Job plus(kotlinx.coroutines.Job);

    public abstract boolean start();
}
