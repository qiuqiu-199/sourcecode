final class kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function3
{
    final kotlinx.coroutines.flow.Flow $fallback;
    final kotlin.jvm.functions.Function1 $predicate;
    private java.lang.Object L$0;
    java.lang.Object L$1;
    int label;

    void <init>(kotlin.jvm.functions.Function1, kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2;

        $r3 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlin.jvm.functions.Function1 $predicate> = $r3;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlinx.coroutines.flow.Flow $fallback> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(3, $r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2 r0;
        java.lang.Object $r1, $r2, $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        java.lang.Throwable $r5;
        kotlin.coroutines.Continuation $r6;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r5 = (java.lang.Throwable) $r2;

        $r6 = (kotlin.coroutines.Continuation) $r3;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)>($r4, $r5, $r6);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, java.lang.Throwable, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2 r0, $r3;
        java.lang.Throwable $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r4;
        kotlinx.coroutines.flow.Flow $r5;
        java.lang.Object $r6;
        kotlinx.coroutines.flow.FlowCollector $r7;
        kotlin.Unit $r8;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2;

        $r7 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = new kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlin.jvm.functions.Function1 $predicate>;

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlinx.coroutines.flow.Flow $fallback>;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: void <init>(kotlin.jvm.functions.Function1,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r4, $r5, $r2);

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object L$0> = $r7;

        $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object L$1> = $r1;

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r3.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object invokeSuspend(java.lang.Object)>($r8);

        return $r6;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2 r0;
        java.lang.Object $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        java.lang.Throwable $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Boolean $r7;
        boolean $z0;
        kotlinx.coroutines.flow.Flow $r8;
        kotlin.coroutines.Continuation $r9;
        kotlin.Unit r10;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: int label>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label3;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object L$0>;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r1;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object L$1>;

        $r5 = (java.lang.Throwable) $r1;

        $r6 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlin.jvm.functions.Function1 $predicate>;

        $r1 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        $r8 = r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: kotlinx.coroutines.flow.Flow $fallback>;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: java.lang.Object L$0> = null;

        r0.<kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2: int label> = 1;

        $r1 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)>($r4, $r8, $r9);

        if $r1 != $r2 goto label3;

        return $r2;

     label3:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;

     label4:
        throw $r5;
    }
}
