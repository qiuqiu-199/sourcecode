final class kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp extends kotlinx.coroutines.internal.AtomicOp
{
    public final kotlinx.coroutines.internal.AtomicDesc desc;
    public final kotlinx.coroutines.selects.SelectBuilderImpl impl;
    private final long opSequence;

    public void <init>(kotlinx.coroutines.selects.SelectBuilderImpl, kotlinx.coroutines.internal.AtomicDesc)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        kotlinx.coroutines.internal.AtomicDesc $r1;
        kotlinx.coroutines.selects.SelectBuilderImpl $r2;
        kotlinx.coroutines.selects.SeqNumber $r3;
        long $l0;
        kotlinx.coroutines.internal.AtomicOp $r4;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r2 := @parameter0: kotlinx.coroutines.selects.SelectBuilderImpl;

        $r1 := @parameter1: kotlinx.coroutines.internal.AtomicDesc;

        specialinvoke r0.<kotlinx.coroutines.internal.AtomicOp: void <init>()>();

        r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl> = $r2;

        r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.internal.AtomicDesc desc> = $r1;

        $r3 = staticinvoke <kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.SeqNumber access$getSelectOpSequenceNumber$p()>();

        $l0 = virtualinvoke $r3.<kotlinx.coroutines.selects.SeqNumber: long next()>();

        r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: long opSequence> = $l0;

        $r4 = (kotlinx.coroutines.internal.AtomicOp) r0;

        virtualinvoke $r1.<kotlinx.coroutines.internal.AtomicDesc: void setAtomicOp(kotlinx.coroutines.internal.AtomicOp)>($r4);

        return;
    }

    private final void completeSelect(java.lang.Object)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        kotlinx.coroutines.selects.SelectBuilderImpl $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r3 := @parameter0: java.lang.Object;

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = null;

        goto label4;

     label3:
        $r3 = staticinvoke <kotlinx.coroutines.selects.SelectKt: java.lang.Object getNOT_SELECTED()>();

     label4:
        $r1 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

        $r2 = <kotlinx.coroutines.selects.SelectBuilderImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z1 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r1, r0, $r3);

        if $z1 == 0 goto label5;

        if $z0 == 0 goto label5;

        $r1 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

        staticinvoke <kotlinx.coroutines.selects.SelectBuilderImpl: void access$doAfterSelect(kotlinx.coroutines.selects.SelectBuilderImpl)>($r1);

     label5:
        return;
    }

    private final java.lang.Object prepareSelectOp()
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        kotlinx.coroutines.selects.SelectBuilderImpl $r1, $r4;
        java.lang.Object $r2, $r5;
        boolean $z0;
        kotlinx.coroutines.internal.OpDescriptor $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r6;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r1 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

     label1:
        $r2 = $r1.<kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object _state>;

        if $r2 != r0 goto label2;

        return null;

     label2:
        $z0 = $r2 instanceof kotlinx.coroutines.internal.OpDescriptor;

        if $z0 == 0 goto label3;

        $r3 = (kotlinx.coroutines.internal.OpDescriptor) $r2;

        $r4 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

        virtualinvoke $r3.<kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)>($r4);

        goto label1;

     label3:
        $r5 = staticinvoke <kotlinx.coroutines.selects.SelectKt: java.lang.Object getNOT_SELECTED()>();

        if $r2 != $r5 goto label4;

        $r4 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

        $r6 = <kotlinx.coroutines.selects.SelectBuilderImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r2 = staticinvoke <kotlinx.coroutines.selects.SelectKt: java.lang.Object getNOT_SELECTED()>();

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r4, $r2, r0);

        if $z0 == 0 goto label1;

        return null;

     label4:
        $r2 = staticinvoke <kotlinx.coroutines.selects.SelectKt: java.lang.Object getALREADY_SELECTED()>();

        return $r2;
    }

    private final void undoPrepare()
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        kotlinx.coroutines.selects.SelectBuilderImpl $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r1 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.selects.SelectBuilderImpl impl>;

        $r2 = <kotlinx.coroutines.selects.SelectBuilderImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r3 = staticinvoke <kotlinx.coroutines.selects.SelectKt: java.lang.Object getNOT_SELECTED()>();

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r1, r0, $r3);

        return;
    }

    public void complete(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.internal.AtomicDesc $r3;
        kotlinx.coroutines.internal.AtomicOp $r4;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: void completeSelect(java.lang.Object)>($r1);

        $r3 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.internal.AtomicDesc desc>;

        $r4 = (kotlinx.coroutines.internal.AtomicOp) r0;

        virtualinvoke $r3.<kotlinx.coroutines.internal.AtomicDesc: void complete(kotlinx.coroutines.internal.AtomicOp,java.lang.Object)>($r4, $r1);

        return;
    }

    public long getOpSequence()
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        long l0;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        l0 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: long opSequence>;

        return l0;
    }

    public java.lang.Object prepare(java.lang.Object)
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.internal.AtomicDesc $r3;
        kotlinx.coroutines.internal.AtomicOp $r4;
        java.lang.Throwable $r5;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label2;

        $r2 = specialinvoke r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: java.lang.Object prepareSelectOp()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        return $r2;

     label2:
        $r3 = r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: kotlinx.coroutines.internal.AtomicDesc desc>;

        $r4 = (kotlinx.coroutines.internal.AtomicOp) r0;

        $r2 = virtualinvoke $r3.<kotlinx.coroutines.internal.AtomicDesc: java.lang.Object prepare(kotlinx.coroutines.internal.AtomicOp)>($r4);

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        if $r1 != null goto label5;

        specialinvoke r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: void undoPrepare()>();

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp r0;
        java.lang.StringBuilder $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AtomicSelectOp(sequence=");

        $l0 = virtualinvoke r0.<kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp: long getOpSequence()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
