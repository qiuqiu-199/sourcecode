public abstract class kotlinx.coroutines.DispatchedTask extends kotlinx.coroutines.scheduling.Task
{
    public int resumeMode;

    public void <init>(int)
    {
        kotlinx.coroutines.DispatchedTask r0;
        int $i0;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $i0 := @parameter0: int;

        specialinvoke r0.<kotlinx.coroutines.scheduling.Task: void <init>()>();

        r0.<kotlinx.coroutines.DispatchedTask: int resumeMode> = $i0;

        return;
    }

    public void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object, java.lang.Throwable)
    {
        kotlinx.coroutines.DispatchedTask r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Throwable;

        return;
    }

    public abstract kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core();

    public java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
    {
        kotlinx.coroutines.DispatchedTask r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.CompletedExceptionally $r2;
        java.lang.Throwable r3;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 != null goto label3;

        return null;

     label3:
        r3 = $r2.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        return r3;
    }

    public java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
    {
        kotlinx.coroutines.DispatchedTask r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Object;

        return $r1;
    }

    public final void handleFatalException(java.lang.Throwable, java.lang.Throwable)
    {
        kotlinx.coroutines.DispatchedTask r0;
        java.lang.Throwable $r1, $r2;
        kotlinx.coroutines.CoroutinesInternalError $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        kotlin.coroutines.Continuation $r6;
        kotlin.coroutines.CoroutineContext $r7;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.Throwable;

        if $r1 != null goto label1;

        if $r2 != null goto label1;

        return;

     label1:
        if $r1 == null goto label2;

        if $r2 == null goto label2;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r1, $r2);

     label2:
        if $r1 != null goto label3;

        $r1 = $r2;

     label3:
        $r3 = new kotlinx.coroutines.CoroutinesInternalError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fatal exception in coroutines machinery for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please read KDoc to \'handleFatalException\' method and report this incident to maintainers");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        specialinvoke $r3.<kotlinx.coroutines.CoroutinesInternalError: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r1);

        $r6 = virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()>();

        $r7 = interfaceinvoke $r6.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r1 = (java.lang.Throwable) $r3;

        staticinvoke <kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>($r7, $r1);

        return;
    }

    public final void run()
    {
        kotlinx.coroutines.DispatchedTask r0;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r1;
        kotlinx.coroutines.scheduling.TaskContext $r2;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.internal.DispatchedContinuation $r4;
        java.lang.Object $r5, $r10;
        kotlin.coroutines.CoroutineContext $r6, $r9;
        kotlinx.coroutines.internal.Symbol $r7;
        kotlinx.coroutines.UndispatchedCoroutine $r8;
        java.lang.Throwable $r11, $r20, $r21, $r22;
        kotlinx.coroutines.Job$Key $r12;
        kotlin.coroutines.CoroutineContext$Key $r13;
        kotlin.coroutines.CoroutineContext$Element $r14;
        kotlinx.coroutines.Job $r15;
        java.util.concurrent.CancellationException $r16;
        kotlin.Result$Companion $r17;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r18;
        kotlin.Unit $r19;

        r0 := @this: kotlinx.coroutines.DispatchedTask;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label04;

        $i0 = r0.<kotlinx.coroutines.DispatchedTask: int resumeMode>;

        if $i0 == -1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        goto label04;

     label03:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label04:
        $r2 = r0.<kotlinx.coroutines.DispatchedTask: kotlinx.coroutines.scheduling.TaskContext taskContext>;

     label05:
        $r3 = virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()>();

        $r4 = (kotlinx.coroutines.internal.DispatchedContinuation) $r3;

        $r3 = $r4.<kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation>;

        $r5 = $r4.<kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement>;

        $r6 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r5 = staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r5);

        $r7 = <kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS>;

     label06:
        if $r5 == $r7 goto label09;

     label07:
        $r8 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)>($r3, $r6, $r5);

     label08:
        goto label10;

     label09:
        $r8 = null;

     label10:
        $r9 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r10 = virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$kotlinx_coroutines_core()>();

        $r11 = virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)>($r10);

     label11:
        if $r11 != null goto label16;

     label12:
        $i0 = r0.<kotlinx.coroutines.DispatchedTask: int resumeMode>;

        $z0 = staticinvoke <kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)>($i0);

     label13:
        if $z0 == 0 goto label16;

     label14:
        $r12 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r13 = (kotlin.coroutines.CoroutineContext$Key) $r12;

        $r14 = interfaceinvoke $r9.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r13);

        $r15 = (kotlinx.coroutines.Job) $r14;

     label15:
        goto label17;

     label16:
        $r15 = null;

     label17:
        if $r15 == null goto label29;

     label18:
        $z0 = interfaceinvoke $r15.<kotlinx.coroutines.Job: boolean isActive()>();

     label19:
        if $z0 != 0 goto label29;

     label20:
        $r16 = interfaceinvoke $r15.<kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()>();

        $r11 = (java.lang.Throwable) $r16;

        virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)>($r10, $r11);

        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

     label21:
        if $z0 == 0 goto label26;

     label22:
        $z0 = $r3 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

     label23:
        if $z0 != 0 goto label24;

        goto label26;

     label24:
        $r11 = (java.lang.Throwable) $r16;

        $r18 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r3;

        $r11 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r11, $r18);

     label25:
        goto label27;

     label26:
        $r11 = (java.lang.Throwable) $r16;

     label27:
        $r10 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r11);

        $r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r10);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r10);

     label28:
        goto label33;

     label29:
        if $r11 == null goto label32;

     label30:
        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r10 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r11);

        $r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r10);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r10);

     label31:
        goto label33;

     label32:
        $r10 = virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)>($r10);

        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r10 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r10);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r10);

     label33:
        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label34:
        if $r8 == null goto label37;

     label35:
        $z0 = virtualinvoke $r8.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label36:
        if $z0 == 0 goto label38;

     label37:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r5);

     label38:
        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        interfaceinvoke $r2.<kotlinx.coroutines.scheduling.TaskContext: void afterTask()>();

        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r19);

     label39:
        goto label41;

     label40:
        $r11 := @caughtexception;

        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r11);

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r5);

     label41:
        $r11 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r5);

        virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)>(null, $r11);

        return;

     label42:
        $r20 := @caughtexception;

        if $r8 == null goto label45;

     label43:
        $z0 = virtualinvoke $r8.<kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()>();

     label44:
        if $z0 == 0 goto label46;

     label45:
        staticinvoke <kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r6, $r5);

     label46:
        throw $r20;

     label47:
        $r21 := @caughtexception;

     label48:
        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        interfaceinvoke $r2.<kotlinx.coroutines.scheduling.TaskContext: void afterTask()>();

        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r19);

     label49:
        goto label51;

     label50:
        $r22 := @caughtexception;

        $r17 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r22);

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r5);

     label51:
        $r11 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r5);

        virtualinvoke r0.<kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)>($r21, $r11);

        return;

        catch java.lang.Throwable from label05 to label06 with label47;
        catch java.lang.Throwable from label07 to label08 with label47;
        catch java.lang.Throwable from label10 to label11 with label42;
        catch java.lang.Throwable from label12 to label13 with label42;
        catch java.lang.Throwable from label14 to label15 with label42;
        catch java.lang.Throwable from label18 to label19 with label42;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.lang.Throwable from label22 to label23 with label42;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Throwable from label26 to label28 with label42;
        catch java.lang.Throwable from label30 to label31 with label42;
        catch java.lang.Throwable from label32 to label34 with label42;
        catch java.lang.Throwable from label35 to label36 with label47;
        catch java.lang.Throwable from label37 to label38 with label47;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch java.lang.Throwable from label43 to label44 with label47;
        catch java.lang.Throwable from label45 to label47 with label47;
        catch java.lang.Throwable from label48 to label49 with label50;
    }

    public abstract java.lang.Object takeState$kotlinx_coroutines_core();
}
