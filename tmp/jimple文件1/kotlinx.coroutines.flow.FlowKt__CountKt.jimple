final class kotlinx.coroutines.flow.FlowKt__CountKt extends java.lang.Object
{

    public static final java.lang.Object count(kotlinx.coroutines.flow.Flow, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__CountKt$count$1 $r2;
        int $i0;
        java.lang.Object $r3, $r4;
        kotlin.jvm.internal.Ref$IntRef $r5;
        java.lang.IllegalStateException $r6;
        kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$1 $r7;
        kotlinx.coroutines.flow.FlowCollector $r8;
        java.lang.Integer $r9;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.flow.FlowKt__CountKt$count$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.flow.FlowKt__CountKt$count$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$1;

        specialinvoke $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        $r4 = $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object L$0>;

        $r5 = (kotlin.jvm.internal.Ref$IntRef) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        goto label5;

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r5 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r5.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        $r7 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$1;

        specialinvoke $r7.<kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$1: void <init>(kotlin.jvm.internal.Ref$IntRef)>($r5);

        $r8 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object L$0> = $r5;

        $r2.<kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label> = 1;

        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r8, $r2);

        if $r3 != $r4 goto label5;

        return $r4;

     label5:
        $i0 = $r5.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r9 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i0);

        return $r9;
    }

    public static final java.lang.Object count(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.Flow $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__CountKt$count$3 $r3;
        int $i0;
        java.lang.Object $r4, $r5;
        kotlin.jvm.internal.Ref$IntRef $r6;
        java.lang.IllegalStateException $r7;
        kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2 $r8;
        kotlinx.coroutines.flow.FlowCollector $r9;
        java.lang.Integer $r10;

        $r0 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__CountKt$count$3;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.FlowKt__CountKt$count$3) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label> = $i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$3;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: void <init>(kotlin.coroutines.Continuation)>($r2);

     label2:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object L$0>;

        $r6 = (kotlin.jvm.internal.Ref$IntRef) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label5;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r6 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        $r8 = new kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2;

        specialinvoke $r8.<kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2: void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$IntRef)>($r1, $r6);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r8;

        $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object L$0> = $r6;

        $r3.<kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label> = 1;

        $r4 = interfaceinvoke $r0.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r3);

        if $r4 != $r5 goto label5;

        return $r5;

     label5:
        $i0 = $r6.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r10 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)>($i0);

        return $r10;
    }
}
