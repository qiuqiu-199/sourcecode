public abstract class kotlinx.coroutines.EventLoopImplBase$DelayedTask extends java.lang.Object implements java.lang.Runnable, java.lang.Comparable, kotlinx.coroutines.DisposableHandle, kotlinx.coroutines.internal.ThreadSafeHeapNode
{
    private java.lang.Object _heap;
    private int index;
    public long nanoTime;

    public void <init>(long)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        long $l0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime> = $l0;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index> = -1;

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) $r1;

        $i0 = virtualinvoke r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)>($r2);

        return $i0;
    }

    public int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, $r1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l1 = $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        if $b2 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public final void dispose()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.Symbol $r2;
        boolean $z0;
        kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue $r3;
        kotlinx.coroutines.internal.ThreadSafeHeapNode $r4;
        java.lang.Throwable $r5;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        entermonitor r0;

     label1:
        $r1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r2 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

     label2:
        if $r1 != $r2 goto label3;

        exitmonitor r0;

        return;

     label3:
        $z0 = $r1 instanceof kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue;

        if $z0 == 0 goto label4;

        $r3 = (kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue) $r1;

        goto label5;

     label4:
        $r3 = null;

     label5:
        if $r3 != null goto label6;

        goto label7;

     label6:
        $r4 = (kotlinx.coroutines.internal.ThreadSafeHeapNode) r0;

        virtualinvoke $r3.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)>($r4);

     label7:
        $r2 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap> = $r2;

     label8:
        exitmonitor r0;

        return;

     label9:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label8 with label9;
    }

    public kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.ThreadSafeHeap $r2;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $z0 = $r1 instanceof kotlinx.coroutines.internal.ThreadSafeHeap;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.internal.ThreadSafeHeap) $r1;

        return $r2;

     label1:
        return null;
    }

    public int getIndex()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        int i0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        i0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index>;

        return i0;
    }

    public final int scheduleTask(long, kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue, kotlinx.coroutines.EventLoopImplBase)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0, $r7;
        kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue $r1;
        long $l0, $l1, $l2;
        kotlinx.coroutines.EventLoopImplBase $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.internal.Symbol $r4;
        kotlinx.coroutines.internal.ThreadSafeHeap $r5;
        kotlinx.coroutines.internal.ThreadSafeHeapNode $r6;
        boolean $z0;
        byte $b3;
        java.lang.Throwable $r8, $r9;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l1 := @parameter0: long;

        $r1 := @parameter1: kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue;

        $r2 := @parameter2: kotlinx.coroutines.EventLoopImplBase;

        entermonitor r0;

     label01:
        $r3 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r4 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

     label02:
        if $r3 != $r4 goto label03;

        exitmonitor r0;

        return 2;

     label03:
        $r5 = (kotlinx.coroutines.internal.ThreadSafeHeap) $r1;

        entermonitor $r5;

     label04:
        $r6 = virtualinvoke $r5.<kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()>();

        $r7 = (kotlinx.coroutines.EventLoopImplBase$DelayedTask) $r6;

        $z0 = staticinvoke <kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)>($r2);

     label05:
        if $z0 == 0 goto label08;

     label06:
        exitmonitor $r5;

     label07:
        exitmonitor r0;

        return 1;

     label08:
        if $r7 != null goto label10;

     label09:
        $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow> = $l1;

        goto label13;

     label10:
        $l2 = $r7.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l0 = $l2 - $l1;

        $b3 = $l0 cmp 0L;

        if $b3 < 0 goto label11;

        goto label12;

     label11:
        $l1 = $l2;

     label12:
        $l0 = $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

        $l0 = $l1 - $l0;

        $b3 = $l0 cmp 0L;

        if $b3 <= 0 goto label13;

        $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow> = $l1;

     label13:
        $l1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l0 = $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

        $l1 = $l1 - $l0;

        $b3 = $l1 cmp 0L;

        if $b3 >= 0 goto label14;

        $l1 = $r1.<kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow>;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime> = $l1;

     label14:
        $r6 = (kotlinx.coroutines.internal.ThreadSafeHeapNode) r0;

        virtualinvoke $r5.<kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)>($r6);

     label15:
        exitmonitor $r5;

     label16:
        exitmonitor r0;

        return 0;

     label17:
        $r8 := @caughtexception;

     label18:
        exitmonitor $r5;

        throw $r8;

     label19:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label09 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    public void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        kotlinx.coroutines.internal.ThreadSafeHeap $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.internal.Symbol $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r1 := @parameter0: kotlinx.coroutines.internal.ThreadSafeHeap;

        $r2 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap>;

        $r3 = staticinvoke <kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()>();

        if $r2 == $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap> = $r1;

        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = "Failed requirement.";

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;
    }

    public void setIndex(int)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        int $i0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $i0 := @parameter0: int;

        r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index> = $i0;

        return;
    }

    public final boolean timeToExecute(long)
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        long $l0, $l1;
        byte $b2;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $l0 := @parameter0: long;

        $l1 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.EventLoopImplBase$DelayedTask r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        long $l0;

        r0 := @this: kotlinx.coroutines.EventLoopImplBase$DelayedTask;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delayed[nanos=");

        $l0 = r0.<kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
