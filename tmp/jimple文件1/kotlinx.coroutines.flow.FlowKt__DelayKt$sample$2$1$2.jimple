final class kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlinx.coroutines.flow.FlowCollector $downstream;
    final kotlin.jvm.internal.Ref$ObjectRef $lastValue;
    int label;

    void <init>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r3 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r1 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue> = $r3;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 r0, $r5;
        kotlin.coroutines.Continuation $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2;
        kotlinx.coroutines.flow.FlowCollector $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r2, $r3, $r1);

        $r1 = (kotlin.coroutines.Continuation) $r5;

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 r0;
        java.lang.Object $r1, $r2;
        kotlin.Unit $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.Unit) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.Unit, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 r0;
        kotlin.Unit $r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r1 := @parameter0: kotlin.Unit;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2) $r2;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invokeSuspend(java.lang.Object)>($r1);

        return $r3;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2 r0;
        kotlinx.coroutines.internal.Symbol $r1;
        java.lang.Object $r2, $r3;
        int $i0;
        java.lang.IllegalStateException $r4;
        kotlin.jvm.internal.Ref$ObjectRef $r5;
        kotlinx.coroutines.flow.FlowCollector $r6;
        kotlin.coroutines.Continuation $r7;
        kotlin.Unit r8;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2;

        $r2 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: int label>;

        if $i0 == 0 goto label2;

        if $i0 != 1 goto label1;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        goto label5;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r4;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        $r2 = $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r2 != null goto label3;

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;

     label3:
        $r5 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        $r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = null;

        $r6 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream>;

        $r1 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL>;

        if $r2 != $r1 goto label4;

        $r2 = null;

     label4:
        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: int label> = 1;

        $r2 = interfaceinvoke $r6.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r7);

        if $r2 != $r3 goto label5;

        return $r3;

     label5:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }
}
