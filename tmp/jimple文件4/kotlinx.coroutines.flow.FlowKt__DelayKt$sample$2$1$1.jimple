final class kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 extends kotlin.coroutines.jvm.internal.SuspendLambda implements kotlin.jvm.functions.Function2
{
    final kotlin.jvm.internal.Ref$ObjectRef $lastValue;
    final kotlinx.coroutines.channels.ReceiveChannel $ticker;
    java.lang.Object L$0;
    int label;

    void <init>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 r0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r3 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r1 := @parameter1: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue> = $r3;

        r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 r0, $r5;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;
        kotlinx.coroutines.channels.ReceiveChannel $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r3 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker>;

        specialinvoke $r5.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>($r3, $r4, $r2);

        $r5.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r5;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.channels.ChannelResult $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.channels.ChannelResult) $r1;

        $r1 = virtualinvoke $r3.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r4);

        return $r1;
    }

    public final java.lang.Object invoke-WpGqRn0(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.ChannelResult $r3;
        kotlin.Unit $r4;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)>($r1);

        $r2 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r3, $r2);

        r0 = (kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1) $r2;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r1;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1 r0;
        boolean $z0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        java.lang.Object $r2;
        int $i0;
        kotlinx.coroutines.channels.ChannelResult $r3;
        kotlinx.coroutines.channels.ReceiveChannel $r4;
        java.lang.Throwable $r5;
        kotlinx.coroutines.flow.internal.ChildCancelledException $r6;
        java.util.concurrent.CancellationException $r7;
        kotlinx.coroutines.internal.Symbol $r8;
        java.lang.IllegalStateException $r9;
        kotlin.Unit r10;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1;

        $r2 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: int label>;

        if $i0 != 0 goto label4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object L$0>;

        $r3 = (kotlinx.coroutines.channels.ChannelResult) $r2;

        $r2 = virtualinvoke $r3.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ChannelResult$Failed;

        if $z0 != 0 goto label1;

        $r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r2;

     label1:
        $r4 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker>;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue>;

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r2);

        if $r5 != null goto label2;

        $r6 = new kotlinx.coroutines.flow.internal.ChildCancelledException;

        specialinvoke $r6.<kotlinx.coroutines.flow.internal.ChildCancelledException: void <init>()>();

        $r7 = (java.util.concurrent.CancellationException) $r6;

        interfaceinvoke $r4.<kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)>($r7);

        $r8 = <kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol DONE>;

        $r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r8;

        goto label3;

     label2:
        throw $r5;

     label3:
        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }
}
