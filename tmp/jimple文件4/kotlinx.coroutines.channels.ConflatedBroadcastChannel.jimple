public final class kotlinx.coroutines.channels.ConflatedBroadcastChannel extends java.lang.Object implements kotlinx.coroutines.channels.BroadcastChannel
{
    private static final kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed CLOSED;
    private static final kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion Companion;
    private static final kotlinx.coroutines.channels.ConflatedBroadcastChannel$State INITIAL_STATE;
    private static final kotlinx.coroutines.internal.Symbol UNDEFINED;
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU;
    private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater _updating$FU;
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU;
    private volatile java.lang.Object _state;
    private volatile int _updating;
    private volatile java.lang.Object onCloseHandler;

    static void <clinit>()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion $r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r1;
        kotlinx.coroutines.internal.Symbol $r2;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r5;

        $r0 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion;

        specialinvoke $r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion Companion> = $r0;

        $r1 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        specialinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: void <init>(java.lang.Throwable)>(null);

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed CLOSED> = $r1;

        $r2 = new kotlinx.coroutines.internal.Symbol;

        specialinvoke $r2.<kotlinx.coroutines.internal.Symbol: void <init>(java.lang.String)>("UNDEFINED");

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.internal.Symbol UNDEFINED> = $r2;

        $r3 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: void <init>(java.lang.Object,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])>($r2, null);

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$State INITIAL_STATE> = $r3;

        $r4 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;", class "Ljava/lang/Object;", "_state");

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU> = $r4;

        $r5 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;", "_updating");

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _updating$FU> = $r5;

        $r4 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;", class "Ljava/lang/Object;", "onCloseHandler");

        <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU> = $r4;

        return;
    }

    public void <init>()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$State INITIAL_STATE>;

        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state> = $r1;

        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: int _updating> = 0;

        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object onCloseHandler> = null;

        return;
    }

    public void <init>(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r3;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: void <init>()>();

        $r2 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r3 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: void <init>(java.lang.Object,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])>($r1, null);

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: void lazySet(java.lang.Object,java.lang.Object)>(r0, $r3);

        return;
    }

    public static final void access$closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel, kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel $r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r1;

        $r0 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter1: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        specialinvoke $r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: void closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)>($r1);

        return;
    }

    public static final void access$registerSelectSend(kotlinx.coroutines.channels.ConflatedBroadcastChannel, kotlinx.coroutines.selects.SelectInstance, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel $r0;
        kotlinx.coroutines.selects.SelectInstance $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function2 $r3;

        $r0 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter1: kotlinx.coroutines.selects.SelectInstance;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: kotlin.jvm.functions.Function2;

        specialinvoke $r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: void registerSelectSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,kotlin.jvm.functions.Function2)>($r1, $r2, $r3);

        return;
    }

    private final kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] addSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[], kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r1;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r2;
        java.lang.Object[] $r3;
        int $i0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r2 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[];

        $r1 := @parameter1: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        if $r2 != null goto label3;

        $i0 = 0;

        $r2 = newarray (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)[1];

     label1:
        if $i0 >= 1 goto label2;

        $r2[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;

     label3:
        $r3 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object)>($r2, $r1);

        $r2 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[]) $r3;

        return $r2;
    }

    private final void closeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1, $r3;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r2;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r4, $r5;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r6;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9;
        java.lang.Throwable $r10;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r2 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

     label1:
        $r3 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r3 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = $r3 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        if $z0 == 0 goto label3;

        $r4 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        $r5 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r3;

        $r1 = $r5.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        $r6 = $r5.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] subscribers>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r6 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] removeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[],kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)>($r6, $r2);

        specialinvoke $r4.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: void <init>(java.lang.Object,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])>($r1, $r6);

        $r7 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, r0, $r3, $r4);

        if $z0 == 0 goto label1;

        return;

     label3:
        $r8 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r3);

        $r9 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r10 = (java.lang.Throwable) $r9;

        throw $r10;
    }

    public static void getValue$annotations()
    {
        return;
    }

    private final void invokeOnCloseHandler(java.lang.Throwable)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.internal.Symbol $r2;
        java.lang.Object $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        boolean $z0;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Throwable;

        $r3 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object onCloseHandler>;

        if $r3 == null goto label1;

        $r2 = <kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED>;

        if $r3 == $r2 goto label1;

        $r4 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU>;

        $r2 = <kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r3, $r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)>($r3, 1);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

     label1:
        return;
    }

    private final kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed offerInternal(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r1;
        java.lang.Object $r2, $r4;
        java.util.concurrent.atomic.AtomicIntegerFieldUpdater $r3;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r5;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r6, $r7;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r8;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r9;
        int $i0, $i1;
        java.lang.String $r10;
        java.lang.IllegalStateException $r11;
        java.lang.Throwable $r12;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r2 := @parameter0: java.lang.Object;

        $r3 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _updating$FU>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(r0, 0, 1);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r4 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r4 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

     label02:
        if $z0 == 0 goto label05;

     label03:
        $r5 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) $r4;

     label04:
        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: int _updating> = 0;

        return $r5;

     label05:
        $z0 = $r4 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

     label06:
        if $z0 == 0 goto label17;

     label07:
        $r6 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        $r7 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r4;

        $r8 = $r7.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] subscribers>;

        specialinvoke $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: void <init>(java.lang.Object,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])>($r2, $r8);

        $r9 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, r0, $r4, $r6);

     label08:
        if $z0 == 0 goto label01;

     label09:
        $r6 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r4;

        $r8 = $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] subscribers>;

     label10:
        if $r8 != null goto label11;

        goto label16;

     label11:
        $i0 = lengthof $r8;

     label12:
        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label16;

     label14:
        $r1 = $r8[$i1];

        virtualinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: java.lang.Object offerInternal(java.lang.Object)>($r2);

     label15:
        $i1 = $i1 + 1;

        goto label13;

     label16:
        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: int _updating> = 0;

        return null;

     label17:
        $r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r4);

        $r11 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        $r12 = (java.lang.Throwable) $r11;

        throw $r12;

     label18:
        $r12 := @caughtexception;

        r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: int _updating> = 0;

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    private final void registerSelectSend(kotlinx.coroutines.selects.SelectInstance, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.selects.SelectInstance $r2;
        java.lang.Object $r3;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.Throwable $r6;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r2 := @parameter0: kotlinx.coroutines.selects.SelectInstance;

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        $z0 = interfaceinvoke $r2.<kotlinx.coroutines.selects.SelectInstance: boolean trySelect()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed offerInternal(java.lang.Object)>($r3);

        if $r4 != null goto label2;

        $r5 = interfaceinvoke $r2.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)>($r1, r0, $r5);

        return;

     label2:
        $r6 = virtualinvoke $r4.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable getSendException()>();

        interfaceinvoke $r2.<kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)>($r6);

        return;
    }

    private final kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] removeSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[], kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r1, $r4;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.AssertionError $r3;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[];

        $r2 := @parameter1: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        $i0 = lengthof $r1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r2);

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        if $i0 != 1 goto label5;

        return null;

     label5:
        $i0 = $i0 - 1;

        $r4 = newarray (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)[$i0];

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>($r1, $r4, 0, 0, $i1, 6, null);

        $i0 = $i1 + 1;

        staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)>($r1, $r4, $i1, $i0, 0, 8, null);

        return $r4;
    }

    public void cancel(java.util.concurrent.CancellationException)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.util.concurrent.CancellationException $r1;
        java.lang.Throwable $r2;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.util.concurrent.CancellationException;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean close(java.lang.Throwable)>($r2);

        return;
    }

    public boolean cancel(java.lang.Throwable)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean close(java.lang.Throwable)>($r1);

        return $z0;
    }

    public boolean close(java.lang.Throwable)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        boolean $z0;
        int $i0, $i1;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r5;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r6;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Throwable;

     label1:
        $r2 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        $i0 = 0;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        if $z0 == 0 goto label8;

        if $r1 != null goto label3;

        $r3 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed CLOSED>;

        goto label4;

     label3:
        $r3 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        specialinvoke $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: void <init>(java.lang.Throwable)>($r1);

     label4:
        $r4 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r2, $r3);

        if $z0 == 0 goto label1;

        $r5 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r2;

        $r6 = $r5.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] subscribers>;

        if $r6 != null goto label5;

        goto label7;

     label5:
        $i1 = lengthof $r6;

     label6:
        if $i0 >= $i1 goto label7;

        $r7 = $r6[$i0];

        virtualinvoke $r7.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: boolean close(java.lang.Throwable)>($r1);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: void invokeOnCloseHandler(java.lang.Throwable)>($r1);

        return 1;

     label8:
        $r8 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r2);

        $r9 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r1 = (java.lang.Throwable) $r9;

        throw $r1;
    }

    public kotlinx.coroutines.selects.SelectClause2 getOnSend()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1 $r1;
        kotlinx.coroutines.selects.SelectClause2 $r2;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1;

        specialinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1: void <init>(kotlinx.coroutines.channels.ConflatedBroadcastChannel)>(r0);

        $r2 = (kotlinx.coroutines.selects.SelectClause2) $r1;

        return $r2;
    }

    public final java.lang.Object getValue()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.internal.Symbol $r1;
        java.lang.Object $r2;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        java.lang.Throwable $r6;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r7;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r2 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        if $z0 != 0 goto label3;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        if $z0 == 0 goto label2;

        $r3 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r2;

        $r2 = $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        $r1 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.internal.Symbol UNDEFINED>;

        if $r2 == $r1 goto label1;

        $r2 = $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        return $r2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No value");

        throw $r4;

     label2:
        $r5 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r2);

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label3:
        $r7 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) $r2;

        $r6 = virtualinvoke $r7.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable getValueException()>();

        throw $r6;
    }

    public final java.lang.Object getValueOrNull()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r2;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r3;
        java.lang.String $r4;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r6;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z0 = $r1 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        if $z0 == 0 goto label3;

        $r2 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.internal.Symbol UNDEFINED>;

        $r3 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r1;

        $r1 = $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        if $r1 != $r2 goto label2;

        return null;

     label2:
        return $r1;

     label3:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r1);

        $r5 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r6 = (java.lang.Throwable) $r5;

        throw $r6;
    }

    public void invokeOnClose(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        boolean $z0;
        java.lang.Object $r3;
        kotlinx.coroutines.internal.Symbol $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r7;
        java.lang.Throwable $r8;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r0, null, $r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object onCloseHandler>;

        $r4 = <kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED>;

        if $r3 != $r4 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Another handler was already registered and successfully invoked");

        throw $r5;

     label1:
        $r5 = new java.lang.IllegalStateException;

        $r6 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Another handler was already registered: ", $r3);

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        $r3 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r3 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        if $z0 == 0 goto label3;

        $r4 = <kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r0, $r1, $r4);

        if $z0 == 0 goto label3;

        $r7 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) $r3;

        $r8 = $r7.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable closeCause>;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r8);

     label3:
        return;
    }

    public boolean isClosedForSend()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        return $z0;
    }

    public boolean offer(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.BroadcastChannel $r2;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (kotlinx.coroutines.channels.BroadcastChannel) r0;

        $z0 = staticinvoke <kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Object)>($r2, $r1);

        return $z0;
    }

    public kotlinx.coroutines.channels.ReceiveChannel openSubscription()
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber $r1;
        java.lang.Object $r2, $r7;
        boolean $z0;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r3;
        java.lang.Throwable $r4;
        kotlinx.coroutines.channels.ReceiveChannel $r5;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$State $r6, $r9;
        kotlinx.coroutines.internal.Symbol $r8;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] $r10;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r11;
        java.lang.String $r12;
        java.lang.IllegalStateException $r13;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber;

        specialinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: void <init>(kotlinx.coroutines.channels.ConflatedBroadcastChannel)>(r0);

     label1:
        $r2 = r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object _state>;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed;

        if $z0 == 0 goto label2;

        $r3 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed) $r2;

        $r4 = $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable closeCause>;

        virtualinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: boolean close(java.lang.Throwable)>($r4);

        $r5 = (kotlinx.coroutines.channels.ReceiveChannel) $r1;

        return $r5;

     label2:
        $z0 = $r2 instanceof kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        if $z0 == 0 goto label4;

        $r6 = (kotlinx.coroutines.channels.ConflatedBroadcastChannel$State) $r2;

        $r7 = $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        $r8 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.internal.Symbol UNDEFINED>;

        if $r7 == $r8 goto label3;

        $r7 = $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        virtualinvoke $r1.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber: java.lang.Object offerInternal(java.lang.Object)>($r7);

     label3:
        $r9 = new kotlinx.coroutines.channels.ConflatedBroadcastChannel$State;

        $r7 = $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: java.lang.Object value>;

        $r10 = $r6.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] subscribers>;

        $r10 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[] addSubscriber(kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[],kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber)>($r10, $r1);

        specialinvoke $r9.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$State: void <init>(java.lang.Object,kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber[])>($r7, $r10);

        $r11 = <kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, r0, $r2, $r9);

        if $z0 == 0 goto label1;

        $r5 = (kotlinx.coroutines.channels.ReceiveChannel) $r1;

        return $r5;

     label4:
        $r12 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Invalid state ", $r2);

        $r13 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r4 = (java.lang.Throwable) $r13;

        throw $r4;
    }

    public java.lang.Object send(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r3;
        java.lang.Throwable $r4;
        kotlin.Unit r5;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed offerInternal(java.lang.Object)>($r1);

        if $r3 != null goto label2;

        $r1 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r1 != null goto label1;

        return null;

     label1:
        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;

     label2:
        $r4 = virtualinvoke $r3.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable getSendException()>();

        throw $r4;
    }

    public java.lang.Object trySend-JP2dKIU(java.lang.Object)
    {
        kotlinx.coroutines.channels.ConflatedBroadcastChannel r0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed $r2;
        kotlinx.coroutines.channels.ChannelResult$Companion $r3;
        kotlin.Unit $r4;
        java.lang.Throwable $r5;

        r0 := @this: kotlinx.coroutines.channels.ConflatedBroadcastChannel;

        $r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed offerInternal(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        $r3 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1 = virtualinvoke $r3.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>($r4);

        return $r1;

     label1:
        $r3 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r5 = virtualinvoke $r2.<kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed: java.lang.Throwable getSendException()>();

        $r1 = virtualinvoke $r3.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)>($r5);

        return $r1;
    }
}
