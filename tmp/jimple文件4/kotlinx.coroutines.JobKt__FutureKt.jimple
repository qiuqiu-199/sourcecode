final class kotlinx.coroutines.JobKt__FutureKt extends java.lang.Object
{

    public static final void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation, java.util.concurrent.Future)
    {
        kotlinx.coroutines.CancellableContinuation $r0;
        java.util.concurrent.Future $r1;
        kotlinx.coroutines.CancelFutureOnCancel $r2;
        kotlin.jvm.functions.Function1 $r3;

        $r0 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $r1 := @parameter1: java.util.concurrent.Future;

        $r2 = new kotlinx.coroutines.CancelFutureOnCancel;

        specialinvoke $r2.<kotlinx.coroutines.CancelFutureOnCancel: void <init>(java.util.concurrent.Future)>($r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        interfaceinvoke $r0.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r3);

        return;
    }

    public static final kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job, java.util.concurrent.Future)
    {
        java.util.concurrent.Future $r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlinx.coroutines.Job $r2;
        kotlinx.coroutines.CancelFutureOnCompletion $r3;
        kotlin.jvm.functions.Function1 $r4;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: java.util.concurrent.Future;

        $r3 = new kotlinx.coroutines.CancelFutureOnCompletion;

        specialinvoke $r3.<kotlinx.coroutines.CancelFutureOnCompletion: void <init>(java.util.concurrent.Future)>($r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r1 = interfaceinvoke $r2.<kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r4);

        return $r1;
    }
}
