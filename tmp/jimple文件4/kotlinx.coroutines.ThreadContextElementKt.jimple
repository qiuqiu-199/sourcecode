public final class kotlinx.coroutines.ThreadContextElementKt extends java.lang.Object
{

    public static final kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal, java.lang.Object)
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.ThreadLocalElement $r2;
        kotlinx.coroutines.ThreadContextElement $r3;

        $r0 := @parameter0: java.lang.ThreadLocal;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new kotlinx.coroutines.internal.ThreadLocalElement;

        specialinvoke $r2.<kotlinx.coroutines.internal.ThreadLocalElement: void <init>(java.lang.Object,java.lang.ThreadLocal)>($r1, $r0);

        $r3 = (kotlinx.coroutines.ThreadContextElement) $r2;

        return $r3;
    }

    public static kotlinx.coroutines.ThreadContextElement asContextElement$default(java.lang.ThreadLocal, java.lang.Object, int, java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.lang.ThreadLocal $r1;
        int $i0;
        kotlinx.coroutines.ThreadContextElement $r3;

        $r1 := @parameter0: java.lang.ThreadLocal;

        $r2 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

     label1:
        $r3 = staticinvoke <kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)>($r1, $r2);

        return $r3;
    }

    public static final java.lang.Object ensurePresent(java.lang.ThreadLocal, kotlin.coroutines.Continuation)
    {
        java.lang.ThreadLocal $r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.internal.ThreadLocalKey $r3;
        kotlin.coroutines.CoroutineContext$Key $r4;
        kotlin.coroutines.CoroutineContext$Element $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r8;
        java.lang.Throwable $r9;
        kotlin.Unit r10;

        $r0 := @parameter0: java.lang.ThreadLocal;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = new kotlinx.coroutines.internal.ThreadLocalKey;

        specialinvoke $r3.<kotlinx.coroutines.internal.ThreadLocalKey: void <init>(java.lang.ThreadLocal)>($r0);

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        if $r5 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r10;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadLocal ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing from context ");

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r9 = (java.lang.Throwable) $r8;

        throw $r9;
    }

    private static final java.lang.Object ensurePresent$$forInline(java.lang.ThreadLocal, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.ThreadLocal $r1;
        java.lang.NullPointerException r2;

        $r1 := @parameter0: java.lang.ThreadLocal;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: interfaceinvoke $u0#3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r2;
    }

    public static final java.lang.Object isPresent(java.lang.ThreadLocal, kotlin.coroutines.Continuation)
    {
        java.lang.ThreadLocal $r0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.internal.ThreadLocalKey $r3;
        kotlin.coroutines.CoroutineContext$Key $r4;
        kotlin.coroutines.CoroutineContext$Element $r5;
        boolean $z0;
        java.lang.Boolean $r6;

        $r0 := @parameter0: java.lang.ThreadLocal;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r3 = new kotlinx.coroutines.internal.ThreadLocalKey;

        specialinvoke $r3.<kotlinx.coroutines.internal.ThreadLocalKey: void <init>(java.lang.ThreadLocal)>($r0);

        $r4 = (kotlin.coroutines.CoroutineContext$Key) $r3;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        if $r5 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z0);

        return $r6;
    }

    private static final java.lang.Object isPresent$$forInline(java.lang.ThreadLocal, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.ThreadLocal $r1;
        java.lang.NullPointerException r2;

        $r1 := @parameter0: java.lang.ThreadLocal;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: interfaceinvoke $u0#3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>()");

        throw r2;
    }
}
