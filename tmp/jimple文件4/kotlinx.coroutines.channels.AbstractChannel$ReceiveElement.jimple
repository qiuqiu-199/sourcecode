class kotlinx.coroutines.channels.AbstractChannel$ReceiveElement extends kotlinx.coroutines.channels.Receive
{
    public final kotlinx.coroutines.CancellableContinuation cont;
    public final int receiveMode;

    public void <init>(kotlinx.coroutines.CancellableContinuation, int)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        int $i0;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r1 := @parameter0: kotlinx.coroutines.CancellableContinuation;

        $i0 := @parameter1: int;

        specialinvoke r0.<kotlinx.coroutines.channels.Receive: void <init>()>();

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont> = $r1;

        r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: int receiveMode> = $i0;

        return;
    }

    public void completeResumeReceive(java.lang.Object)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        kotlinx.coroutines.internal.Symbol $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.CancellableContinuation $r3;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r2 := @parameter0: java.lang.Object;

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r1 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        interfaceinvoke $r3.<kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)>($r1);

        return;
    }

    public void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        kotlinx.coroutines.channels.Closed $r1;
        int $i0;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.channels.ChannelResult$Companion $r4;
        java.lang.Throwable $r5;
        java.lang.Object $r6;
        kotlinx.coroutines.channels.ChannelResult $r7;
        kotlin.Result$Companion $r8;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r1 := @parameter0: kotlinx.coroutines.channels.Closed;

        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: int receiveMode>;

        if $i0 != 1 goto label1;

        $r2 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r3 = (kotlin.coroutines.Continuation) $r2;

        $r4 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r5 = $r1.<kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause>;

        $r6 = virtualinvoke $r4.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)>($r5);

        $r7 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)>($r6);

        $r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r7);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;

     label1:
        $r2 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r3 = (kotlin.coroutines.Continuation) $r2;

        $r5 = virtualinvoke $r1.<kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()>();

        $r8 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r6 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r5);

        $r6 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        interfaceinvoke $r3.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r6);

        return;
    }

    public final java.lang.Object resumeValue(java.lang.Object)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        java.lang.Object $r1;
        int $i0;
        kotlinx.coroutines.channels.ChannelResult$Companion $r2;
        kotlinx.coroutines.channels.ChannelResult $r3;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: int receiveMode>;

        if $i0 != 1 goto label1;

        $r2 = <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion>;

        $r1 = virtualinvoke $r2.<kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)>($r1);

        $r3 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)>($r1);

        return $r3;

     label1:
        return $r1;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReceiveElement@");

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[receiveMode=");

        $i0 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: int receiveMode>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object, kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
    {
        kotlinx.coroutines.channels.AbstractChannel$ReceiveElement r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp $r1;
        java.lang.Object $r2, $r4;
        kotlinx.coroutines.CancellableContinuation $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc $r5;
        kotlin.jvm.functions.Function1 $r6;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r7;
        java.lang.AssertionError $r8;

        r0 := @this: kotlinx.coroutines.channels.AbstractChannel$ReceiveElement;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp;

        $r3 = r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlinx.coroutines.CancellableContinuation cont>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: java.lang.Object resumeValue(java.lang.Object)>($r2);

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc desc>;

     label2:
        $r6 = virtualinvoke r0.<kotlinx.coroutines.channels.AbstractChannel$ReceiveElement: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)>($r2);

        $r2 = interfaceinvoke $r3.<kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)>($r4, $r5, $r6);

        if $r2 != null goto label3;

        return null;

     label3:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label7;

        $r7 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        if $r2 != $r7 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z0 == 0 goto label6;

        goto label7;

     label6:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label7:
        if $r1 != null goto label8;

        goto label9;

     label8:
        virtualinvoke $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp: void finishPrepare()>();

     label9:
        $r7 = <kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN>;

        return $r7;
    }
}
