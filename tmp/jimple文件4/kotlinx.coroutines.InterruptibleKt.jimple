public final class kotlinx.coroutines.InterruptibleKt extends java.lang.Object
{
    private static final int FINISHED;
    private static final int INTERRUPTED;
    private static final int INTERRUPTING;
    private static final int WORKING;

    public static final java.lang.Object access$runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 $r0;
        java.lang.Object $r1;
        kotlin.coroutines.CoroutineContext $r2;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        $r1 = staticinvoke <kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)>($r2, $r0);

        return $r1;
    }

    public static final java.lang.Object runInterruptible(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation)
    {
        kotlin.jvm.functions.Function0 $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.InterruptibleKt$runInterruptible$2 $r4;
        kotlin.jvm.functions.Function2 $r5;

        $r3 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = new kotlinx.coroutines.InterruptibleKt$runInterruptible$2;

        specialinvoke $r4.<kotlinx.coroutines.InterruptibleKt$runInterruptible$2: void <init>(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r0, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r2 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, $r5, $r1);

        return $r2;
    }

    public static java.lang.Object runInterruptible$default(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        kotlin.coroutines.CoroutineContext $r3;
        int $i0;
        kotlin.coroutines.EmptyCoroutineContext $r4;

        $r3 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $i0 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r4 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r3 = (kotlin.coroutines.CoroutineContext) $r4;

     label1:
        $r2 = staticinvoke <kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptible(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)>($r3, $r0, $r1);

        return $r2;
    }

    private static final java.lang.Object runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext, kotlin.jvm.functions.Function0)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlin.jvm.functions.Function0 $r1;
        kotlinx.coroutines.ThreadState $r2;
        kotlinx.coroutines.Job $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.InterruptedException $r6;
        java.util.concurrent.CancellationException $r7;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = new kotlinx.coroutines.ThreadState;

     label1:
        $r3 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)>($r0);

        specialinvoke $r2.<kotlinx.coroutines.ThreadState: void <init>(kotlinx.coroutines.Job)>($r3);

        virtualinvoke $r2.<kotlinx.coroutines.ThreadState: void setup()>();

     label2:
        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label3:
        virtualinvoke $r2.<kotlinx.coroutines.ThreadState: void clearInterrupt()>();

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

     label6:
        virtualinvoke $r2.<kotlinx.coroutines.ThreadState: void clearInterrupt()>();

        throw $r5;

     label7:
        $r6 := @caughtexception;

        $r7 = new java.util.concurrent.CancellationException;

        specialinvoke $r7.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Blocking call was interrupted due to parent cancellation");

        $r5 = (java.lang.Throwable) $r6;

        $r5 = virtualinvoke $r7.<java.util.concurrent.CancellationException: java.lang.Throwable initCause(java.lang.Throwable)>($r5);

        throw $r5;

        catch java.lang.InterruptedException from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label6 to label7 with label7;
    }

    public static void <clinit>()
    {
        <kotlinx.coroutines.InterruptibleKt: int INTERRUPTING> = 2;

        <kotlinx.coroutines.InterruptibleKt: int INTERRUPTED> = 3;

        <kotlinx.coroutines.InterruptibleKt: int FINISHED> = 1;

        return;
    }
}
