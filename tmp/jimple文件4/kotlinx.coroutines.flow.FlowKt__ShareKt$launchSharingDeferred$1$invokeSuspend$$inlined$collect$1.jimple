public final class kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.CoroutineScope $$this$launch$inlined;
    final kotlinx.coroutines.CompletableDeferred $result$inlined;
    final kotlin.jvm.internal.Ref$ObjectRef $state$inlined;

    public void <init>(kotlin.jvm.internal.Ref$ObjectRef, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CompletableDeferred)
    {
        kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlinx.coroutines.CompletableDeferred $r3;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        $r3 := @parameter2: kotlinx.coroutines.CompletableDeferred;

        r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $state$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.CoroutineScope $$this$launch$inlined> = $r2;

        r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.CompletableDeferred $result$inlined> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        kotlinx.coroutines.CompletableDeferred $r2;
        kotlinx.coroutines.flow.ReadonlyStateFlow $r3;
        java.lang.Object $r4, $r6;
        kotlin.coroutines.Continuation $r5;
        kotlinx.coroutines.flow.MutableStateFlow $r7;
        kotlin.Unit $r8;
        kotlinx.coroutines.CoroutineScope $r9;
        kotlinx.coroutines.flow.StateFlow $r10;
        kotlin.coroutines.CoroutineContext $r11;
        kotlinx.coroutines.Job $r12;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1;

        $r4 := @parameter0: java.lang.Object;

        $r5 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $state$inlined>;

        $r6 = $r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r7 = (kotlinx.coroutines.flow.MutableStateFlow) $r6;

        if $r7 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        interfaceinvoke $r7.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r4);

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        if $r8 != null goto label3;

        $r9 = r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.CoroutineScope $$this$launch$inlined>;

        $r1 = r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$ObjectRef $state$inlined>;

        $r7 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r4);

        $r2 = r0.<kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.CompletableDeferred $result$inlined>;

        $r3 = new kotlinx.coroutines.flow.ReadonlyStateFlow;

        $r10 = (kotlinx.coroutines.flow.StateFlow) $r7;

        $r11 = interfaceinvoke $r9.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r12 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)>($r11);

        specialinvoke $r3.<kotlinx.coroutines.flow.ReadonlyStateFlow: void <init>(kotlinx.coroutines.flow.StateFlow,kotlinx.coroutines.Job)>($r10, $r12);

        interfaceinvoke $r2.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r3);

        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

     label3:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }
}
