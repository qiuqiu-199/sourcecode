final class kotlinx.coroutines.JobSupport$Finishing extends java.lang.Object implements kotlinx.coroutines.Incomplete
{
    private volatile java.lang.Object _exceptionsHolder;
    private volatile int _isCompleting;
    private volatile java.lang.Object _rootCause;
    private final kotlinx.coroutines.NodeList list;

    public void <init>(kotlinx.coroutines.NodeList, boolean, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        boolean $z0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.NodeList $r2;
        int i0;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r2 := @parameter0: kotlinx.coroutines.NodeList;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list> = $r2;

        i0 = (int) $z0;

        r0.<kotlinx.coroutines.JobSupport$Finishing: int _isCompleting> = i0;

        r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause> = $r1;

        r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder> = null;

        return;
    }

    private final java.util.ArrayList allocateList()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.util.ArrayList $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(4);

        return $r1;
    }

    private final java.lang.Object getExceptionsHolder()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Object r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        r1 = r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder>;

        return r1;
    }

    private final void setExceptionsHolder(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 := @parameter0: java.lang.Object;

        r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder> = $r1;

        return;
    }

    public final void addExceptionLocked(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Throwable $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.util.ArrayList $r4;
        kotlin.Unit $r5;
        java.lang.String $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r2 != null goto label1;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)>($r1);

        return;

     label1:
        if $r1 != $r2 goto label2;

        return;

     label2:
        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()>();

        if $r3 != null goto label3;

        specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)>($r1);

        return;

     label3:
        $z0 = $r3 instanceof java.lang.Throwable;

        if $z0 == 0 goto label5;

        if $r1 != $r3 goto label4;

        return;

     label4:
        $r4 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()>();

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)>($r4);

        return;

     label5:
        $z0 = $r3 instanceof java.util.ArrayList;

        if $z0 == 0 goto label6;

        $r4 = (java.util.ArrayList) $r3;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label6:
        $r6 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("State is ", $r3);

        $r7 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r1 = (java.lang.Throwable) $r7;

        throw $r1;
    }

    public kotlinx.coroutines.NodeList getList()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        kotlinx.coroutines.NodeList r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        r1 = r0.<kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list>;

        return r1;
    }

    public final java.lang.Throwable getRootCause()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause>;

        $r2 = (java.lang.Throwable) $r1;

        return $r2;
    }

    public boolean isActive()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isCancelling()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isCompleting()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        int i0;
        boolean z0;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        i0 = r0.<kotlinx.coroutines.JobSupport$Finishing: int _isCompleting>;

        z0 = (boolean) i0;

        return z0;
    }

    public final boolean isSealed()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.Symbol $r2;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()>();

        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()>();

        if $r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.util.List sealLocked(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Throwable $r1, $r4;
        java.lang.Object $r2;
        java.util.ArrayList $r3;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r5;
        java.util.List $r6;
        java.lang.String $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()>();

        if $r2 != null goto label1;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()>();

        goto label3;

     label1:
        $z0 = $r2 instanceof java.lang.Throwable;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label3;

     label2:
        $z0 = $r2 instanceof java.util.ArrayList;

        if $z0 == 0 goto label7;

        $r3 = (java.util.ArrayList) $r2;

     label3:
        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r4 != null goto label4;

        goto label5;

     label4:
        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r4);

     label5:
        if $r1 == null goto label6;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 != 0 goto label6;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label6:
        $r5 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()>();

        specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)>($r5);

        $r6 = (java.util.List) $r3;

        return $r6;

     label7:
        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("State is ", $r2);

        $r8 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r1 = (java.lang.Throwable) $r8;

        throw $r1;
    }

    public final void setCompleting(boolean)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        boolean $z0;
        int i0;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $z0 := @parameter0: boolean;

        i0 = (int) $z0;

        r0.<kotlinx.coroutines.JobSupport$Finishing: int _isCompleting> = i0;

        return;
    }

    public final void setRootCause(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 := @parameter0: java.lang.Throwable;

        r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.JobSupport$Finishing r0;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.NodeList $r4;
        java.lang.String $r5;

        r0 := @this: kotlinx.coroutines.JobSupport$Finishing;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finishing[cancelling=");

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", completing=");

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rootCause=");

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exceptions=");

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", list=");

        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
