public final class kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function1
{
    final java.lang.reflect.Constructor $constructor$inlined;

    public void <init>(java.lang.reflect.Constructor)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2 r0;
        java.lang.reflect.Constructor $r1;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2 r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2;

        $r2 := @parameter0: java.lang.Object;

        $r1 = (java.lang.Throwable) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)>($r1);

        return $r1;
    }

    public final java.lang.Throwable invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2 r0;
        java.lang.Throwable $r1, $r7;
        kotlin.Result$Companion $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.NullPointerException $r6;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2;

        $r1 := @parameter0: java.lang.Throwable;

     label1:
        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = r0.<kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label2:
        if $r5 == null goto label5;

     label3:
        $r1 = (java.lang.Throwable) $r5;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r1);

     label4:
        goto label7;

     label5:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Throwable");

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r5 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r7);

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r5);

     label7:
        $z0 = staticinvoke <kotlin.Result: boolean isFailure-impl(java.lang.Object)>($r5);

        if $z0 == 0 goto label8;

        $r5 = null;

     label8:
        $r1 = (java.lang.Throwable) $r5;

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
}
