final class kotlinx.coroutines.JobSupport$children$1 extends kotlin.coroutines.jvm.internal.RestrictedSuspendLambda implements kotlin.jvm.functions.Function2
{
    private java.lang.Object L$0;
    java.lang.Object L$1;
    java.lang.Object L$2;
    int label;
    final kotlinx.coroutines.JobSupport this$0;

    void <init>(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport$children$1 r0;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.JobSupport $r2;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r1);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport$children$1 r0, $r4;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.JobSupport $r3;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new kotlinx.coroutines.JobSupport$children$1;

        $r3 = r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0>;

        specialinvoke $r4.<kotlinx.coroutines.JobSupport$children$1: void <init>(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)>($r3, $r2);

        $r4.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0> = $r1;

        $r2 = (kotlin.coroutines.Continuation) $r4;

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport$children$1 r0;
        java.lang.Object $r1, $r2;
        kotlin.sequences.SequenceScope $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.sequences.SequenceScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlin.sequences.SequenceScope, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport$children$1 r0;
        kotlin.sequences.SequenceScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: kotlin.sequences.SequenceScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        r0 = (kotlinx.coroutines.JobSupport$children$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport$children$1 r0;
        java.lang.Object $r1, $r2, $r3;
        int $i0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r4;
        kotlinx.coroutines.internal.LockFreeLinkedListHead $r5;
        kotlin.sequences.SequenceScope $r6;
        java.lang.IllegalStateException $r7;
        kotlinx.coroutines.JobSupport $r8;
        boolean $z0;
        kotlinx.coroutines.ChildHandleNode $r9;
        kotlinx.coroutines.ChildJob $r10;
        kotlin.coroutines.Continuation $r11;
        kotlinx.coroutines.Incomplete $r12;
        kotlinx.coroutines.NodeList $r13;
        kotlin.Unit r14;

        r0 := @this: kotlinx.coroutines.JobSupport$children$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<kotlinx.coroutines.JobSupport$children$1: int label>;

        if $i0 == 0 goto label3;

        if $i0 == 1 goto label2;

        if $i0 != 2 goto label1;

        $r3 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2>;

        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r3;

        $r3 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r3;

        $r3 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0>;

        $r6 = (kotlin.sequences.SequenceScope) $r3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label7;

     label1:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label8;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r1 = r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0>;

        $r6 = (kotlin.sequences.SequenceScope) $r1;

        $r8 = r0.<kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0>;

        $r1 = virtualinvoke $r8.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label4;

        $r9 = (kotlinx.coroutines.ChildHandleNode) $r1;

        $r10 = $r9.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<kotlinx.coroutines.JobSupport$children$1: int label> = 1;

        $r1 = virtualinvoke $r6.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r10, $r11);

        if $r1 != $r2 goto label8;

        return $r2;

     label4:
        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label8;

        $r12 = (kotlinx.coroutines.Incomplete) $r1;

        $r13 = interfaceinvoke $r12.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r13 != null goto label5;

        goto label8;

     label5:
        $r5 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r13;

        $r1 = virtualinvoke $r5.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r1;

     label6:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z0 != 0 goto label8;

        $z0 = $r4 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label7;

        $r9 = (kotlinx.coroutines.ChildHandleNode) $r4;

        $r10 = $r9.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0> = $r6;

        r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1> = $r5;

        r0.<kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2> = $r4;

        r0.<kotlinx.coroutines.JobSupport$children$1: int label> = 2;

        $r1 = virtualinvoke $r6.<kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)>($r10, r0);

        if $r1 != $r2 goto label7;

        return $r2;

     label7:
        $r4 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label6;

     label8:
        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r14;
    }
}
