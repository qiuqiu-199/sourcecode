public final class kotlinx.coroutines.ThreadContextElement$DefaultImpls extends java.lang.Object
{

    public static java.lang.Object fold(kotlinx.coroutines.ThreadContextElement, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function2 $r1;
        kotlinx.coroutines.ThreadContextElement $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;

        $r2 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r0 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        $r3 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r0 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)>($r3, $r0, $r1);

        return $r0;
    }

    public static kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement, kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.CoroutineContext$Key $r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlinx.coroutines.ThreadContextElement $r2;

        $r2 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext$Key;

        $r1 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r1 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)>($r1, $r0);

        return $r1;
    }

    public static kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement, kotlin.coroutines.CoroutineContext$Key)
    {
        kotlin.coroutines.CoroutineContext$Key $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.ThreadContextElement $r2;
        kotlin.coroutines.CoroutineContext$Element $r3;

        $r2 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext$Key;

        $r3 = (kotlin.coroutines.CoroutineContext$Element) $r2;

        $r1 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)>($r3, $r0);

        return $r1;
    }

    public static kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement, kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        kotlinx.coroutines.ThreadContextElement $r1;
        kotlin.coroutines.CoroutineContext$Element $r2;

        $r1 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r2 = (kotlin.coroutines.CoroutineContext$Element) $r1;

        $r0 = staticinvoke <kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)>($r2, $r0);

        return $r0;
    }
}
