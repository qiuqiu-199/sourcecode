public final class kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls extends java.lang.Object
{

    public static void cancel(kotlinx.coroutines.channels.ReceiveChannel)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)>(null);

        return;
    }

    public static void cancel$default(kotlinx.coroutines.channels.ReceiveChannel, java.util.concurrent.CancellationException, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        java.util.concurrent.CancellationException $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter1: java.util.concurrent.CancellationException;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        interfaceinvoke $r1.<kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)>($r2);

        return;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: cancel");

        throw $r3;
    }

    public static boolean cancel$default(kotlinx.coroutines.channels.ReceiveChannel, java.lang.Throwable, int, java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        java.lang.Throwable $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter1: java.lang.Throwable;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)>($r2);

        return $z0;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: cancel");

        throw $r3;
    }

    public static kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1 $r1;
        kotlinx.coroutines.selects.SelectClause1 $r2;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 = new kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1;

        specialinvoke $r1.<kotlinx.coroutines.channels.ReceiveChannel$onReceiveOrNull$1: void <init>(kotlinx.coroutines.channels.ReceiveChannel)>($r0);

        $r2 = (kotlinx.coroutines.selects.SelectClause1) $r1;

        return $r2;
    }

    public static void getOnReceiveOrNull$annotations()
    {
        return;
    }

    public static void isClosedForReceive$annotations()
    {
        return;
    }

    public static void isEmpty$annotations()
    {
        return;
    }

    public static java.lang.Object poll(kotlinx.coroutines.channels.ReceiveChannel)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object tryReceive-PtdJZtk()>();

        $z0 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrThrow-impl(java.lang.Object)>($r1);

        return $r1;

     label1:
        $r2 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r1);

        if $r2 != null goto label2;

        return null;

     label2:
        $r2 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)>($r2);

        throw $r2;
    }

    public static java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1 $r2;
        int $i0;
        java.lang.Object $r3, $r4, $r7;
        kotlinx.coroutines.channels.ChannelResult $r5;
        java.lang.IllegalStateException $r6;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label> = $i0;

        goto label2;

     label1:
        $r2 = new kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1;

        specialinvoke $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label2:
        $r3 = $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r5 = (kotlinx.coroutines.channels.ChannelResult) $r3;

        $r3 = virtualinvoke $r5.<kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()>();

        goto label5;

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r2.<kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label> = 1;

        $r7 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)>($r2);

        $r3 = $r7;

        if $r7 != $r4 goto label5;

        return $r4;

     label5:
        $r4 = staticinvoke <kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)>($r3);

        return $r4;
    }
}
