public class kotlinx.coroutines.internal.LockFreeTaskQueue extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU;
    private volatile java.lang.Object _cur;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/internal/LockFreeTaskQueue;", class "Ljava/lang/Object;", "_cur");

        <kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU> = $r0;

        return;
    }

    public void <init>(boolean)
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        boolean $z0;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r1;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new kotlinx.coroutines.internal.LockFreeTaskQueueCore;

        specialinvoke $r1.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: void <init>(int,boolean)>(8, $z0);

        r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur> = $r1;

        return;
    }

    public final boolean addLast(java.lang.Object)
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r3, $r5;
        int $i0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r3 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r2;

        $i0 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)>($r1);

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        return 0;

     label3:
        $r4 = <kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU>;

        $r5 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r3, $r5);

        goto label1;

     label4:
        return 1;
    }

    public final void close()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r2, $r4;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

     label1:
        $r1 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r3 = <kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU>;

        $r4 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r0, $r2, $r4);

        goto label1;
    }

    public final int getSize()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        int $i0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r2;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r1;

        $i0 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()>();

        return $i0;
    }

    public final boolean isClosed()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r2;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isClosed()>();

        return $z0;
    }

    public final boolean isEmpty()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r2;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r1 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()>();

        return $z0;
    }

    public final java.util.List map(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        java.util.List $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r4;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

        $r2 := @parameter0: kotlin.jvm.functions.Function1;

        $r3 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r4 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r3;

        $r1 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.List map(kotlin.jvm.functions.Function1)>($r2);

        return $r1;
    }

    public final java.lang.Object removeFirstOrNull()
    {
        kotlinx.coroutines.internal.LockFreeTaskQueue r0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.LockFreeTaskQueueCore $r2, $r5;
        kotlinx.coroutines.internal.Symbol $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;

        r0 := @this: kotlinx.coroutines.internal.LockFreeTaskQueue;

     label1:
        $r1 = r0.<kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur>;

        $r2 = (kotlinx.coroutines.internal.LockFreeTaskQueueCore) $r1;

        $r1 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()>();

        $r3 = <kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN>;

        if $r1 == $r3 goto label2;

        return $r1;

     label2:
        $r4 = <kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU>;

        $r5 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()>();

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r2, $r5);

        goto label1;
    }
}
