public final class kotlinx.coroutines.intrinsics.CancellableKt extends java.lang.Object
{

    public static final void access$dispatcherFailure(kotlin.coroutines.Continuation, java.lang.Throwable)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 := @parameter1: java.lang.Throwable;

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)>($r0, $r1);

        return;
    }

    private static final void dispatcherFailure(kotlin.coroutines.Continuation, java.lang.Throwable)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Throwable $r1;
        kotlin.Result$Companion $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r1);

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r3);

        interfaceinvoke $r0.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r3);

        throw $r1;
    }

    private static final void runSafely(kotlin.coroutines.Continuation, kotlin.jvm.functions.Function0)
    {
        kotlin.coroutines.Continuation $r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

     label1:
        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)>($r0, $r2);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final void startCoroutineCancellable(kotlin.coroutines.Continuation, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r1;
        kotlin.Result$Companion $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

     label1:
        $r1 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r1);

        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r3);

        staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $r4, null, 2, null);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)>($r0, $r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final void startCoroutineCancellable(kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r2;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.Result$Companion $r3;
        kotlin.Unit $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

     label1:
        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r1, $r0);

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r2);

        $r3 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r4);

        staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, $r5, null, 2, null);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)>($r0, $r6);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final void startCoroutineCancellable(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation, kotlin.jvm.functions.Function1)
    {
        kotlin.coroutines.Continuation $r0, $r4;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        kotlin.Result$Companion $r5;
        kotlin.Unit $r6;
        java.lang.Throwable $r7;

        $r2 := @parameter0: kotlin.jvm.functions.Function2;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.coroutines.Continuation;

        $r1 := @parameter3: kotlin.jvm.functions.Function1;

     label1:
        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r3, $r0);

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r4);

        $r5 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r3 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r6);

        staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)>($r4, $r3, $r1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)>($r0, $r7);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void startCoroutineCancellable$default(kotlin.jvm.functions.Function2, java.lang.Object, kotlin.coroutines.Continuation, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object $r1, $r3;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.functions.Function1 $r4;
        int $i0;

        $r0 := @parameter0: kotlin.jvm.functions.Function2;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r4 := @parameter3: kotlin.jvm.functions.Function1;

        $i0 := @parameter4: int;

        $r3 := @parameter5: java.lang.Object;

        $i0 = $i0 & 4;

        if $i0 == 0 goto label1;

        $r4 = null;

     label1:
        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r4);

        return;
    }
}
