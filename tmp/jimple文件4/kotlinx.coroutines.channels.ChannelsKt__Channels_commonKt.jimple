final class kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt extends java.lang.Object
{

    public static final void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel, java.lang.Throwable)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        boolean $z0;
        java.util.concurrent.CancellationException $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter1: java.lang.Throwable;

        $r1 = null;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $z0 = $r2 instanceof java.util.concurrent.CancellationException;

        if $z0 == 0 goto label2;

        $r1 = (java.util.concurrent.CancellationException) $r2;

     label2:
        if $r1 != null goto label3;

        $r1 = staticinvoke <kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)>("Channel was consumed, consumer had failed", $r2);

     label3:
        interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)>($r1);

        return;
    }

    public static final java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.channels.BroadcastChannel $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.channels.ReceiveChannel $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: kotlinx.coroutines.channels.BroadcastChannel;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = interfaceinvoke $r0.<kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()>();

     label1:
        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return $r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Throwable $r3, $r4;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

     label1:
        $r1 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        return $r1;

     label3:
        $r3 := @caughtexception;

     label4:
        throw $r3;

     label5:
        $r4 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, $r3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    public static final java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.BroadcastChannel $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3 $r3;
        int $i0;
        java.lang.Object $r4, $r5, $r6;
        kotlinx.coroutines.channels.ChannelIterator $r7;
        kotlinx.coroutines.channels.ReceiveChannel $r8, $r11;
        java.lang.Throwable $r9, $r14;
        java.lang.IllegalStateException $r10;
        java.lang.Boolean $r12;
        kotlin.Unit $r13;

        $r0 := @parameter0: kotlinx.coroutines.channels.BroadcastChannel;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3) $r2;

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3;

        specialinvoke $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: void <init>(kotlin.coroutines.Continuation)>($r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label>;

        if $i0 == 0 goto label08;

        if $i0 != 1 goto label07;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$2>;

        $r7 = (kotlinx.coroutines.channels.ChannelIterator) $r6;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$1>;

        $r8 = (kotlinx.coroutines.channels.ReceiveChannel) $r6;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$0>;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label04:
        $r1 = (kotlin.jvm.functions.Function1) $r6;

     label05:
        goto label14;

     label06:
        $r9 := @caughtexception;

        goto label23;

     label07:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r8 = interfaceinvoke $r0.<kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()>();

     label09:
        $r7 = interfaceinvoke $r8.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label10:
        $r11 = $r8;

     label11:
        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$0> = $r1;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$1> = $r11;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$2> = $r7;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label> = 1;

        $r4 = interfaceinvoke $r7.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r3);

     label12:
        if $r4 != $r5 goto label13;

        return $r5;

     label13:
        $r8 = $r11;

        goto label05;

     label14:
        $r12 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label15:
        if $z0 == 0 goto label18;

     label16:
        $r4 = interfaceinvoke $r7.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label17:
        $r11 = $r8;

        goto label11;

     label18:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label19:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r8, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;

     label20:
        $r9 := @caughtexception;

        goto label23;

     label21:
        $r9 := @caughtexception;

        $r8 = $r11;

        goto label23;

     label22:
        $r14 := @caughtexception;

        $r9 = $r14;

     label23:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r8, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r9;

        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public static final java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1 $r3;
        int $i0;
        java.lang.Object $r4, $r5, $r6;
        kotlinx.coroutines.channels.ChannelIterator $r7;
        java.lang.Throwable $r8, $r12, $r13;
        java.lang.IllegalStateException $r9;
        java.lang.Boolean $r10;
        kotlin.Unit $r11;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1;

        specialinvoke $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: void <init>(kotlin.coroutines.Continuation)>($r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label>;

        if $i0 == 0 goto label07;

        if $i0 != 1 goto label06;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$2>;

        $r7 = (kotlinx.coroutines.channels.ChannelIterator) $r6;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$1>;

        $r0 = (kotlinx.coroutines.channels.ReceiveChannel) $r6;

        $r6 = $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$0>;

        $r1 = (kotlin.jvm.functions.Function1) $r6;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label04:
        goto label11;

     label05:
        $r8 := @caughtexception;

        goto label18;

     label06:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;

     label07:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label08:
        $r7 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label09:
        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$0> = $r1;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$1> = $r0;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$2> = $r7;

        $r3.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label> = 1;

        $r4 = interfaceinvoke $r7.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r3);

     label10:
        if $r4 != $r5 goto label11;

        return $r5;

     label11:
        $r10 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label12:
        if $z0 == 0 goto label15;

     label13:
        $r4 = interfaceinvoke $r7.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label14:
        goto label09;

     label15:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label16:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label17:
        $r12 := @caughtexception;

        $r8 = $r12;

     label18:
        throw $r8;

     label19:
        $r13 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, $r8);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r13;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    private static final java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.BroadcastChannel, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.BroadcastChannel $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.ReceiveChannel $r3;
        kotlinx.coroutines.channels.ChannelIterator $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Unit $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: kotlinx.coroutines.channels.BroadcastChannel;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()>();

     label1:
        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r5 = interfaceinvoke $r4.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>(null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r5 = interfaceinvoke $r4.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

     label5:
        goto label2;

     label6:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label7:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r3, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;

     label8:
        $r8 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)>($r3, null, 1, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private static final java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.ReceiveChannel, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.coroutines.Continuation $r2;
        kotlinx.coroutines.channels.ChannelIterator $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        kotlin.Unit $r6;
        java.lang.Throwable $r7, $r8;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

     label01:
        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label02:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(0);

        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>(null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(1);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

     label05:
        goto label02;

     label06:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, null);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label08:
        $r7 := @caughtexception;

     label09:
        throw $r7;

     label10:
        $r8 := @caughtexception;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, $r7);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw $r8;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public static final kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
    {
        kotlinx.coroutines.selects.SelectClause1 $r0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r0 = interfaceinvoke $r1.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()>();

        return $r0;
    }

    public static final java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1;
        kotlinx.coroutines.channels.ReceiveChannel $r2;

        $r2 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = interfaceinvoke $r2.<kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)>($r0);

        return $r1;
    }

    public static final java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.channels.ReceiveChannel $r0, $r10;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1 $r2;
        int $i0;
        java.lang.Object $r3, $r4, $r5;
        kotlinx.coroutines.channels.ChannelIterator $r6;
        java.util.List $r7, $r8;
        java.lang.Throwable $r9, $r14, $r15;
        java.lang.IllegalStateException $r11;
        java.lang.Boolean $r12;
        kotlin.Unit $r13;

        $r0 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r1 instanceof kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1;

        if $z0 == 0 goto label01;

        $r2 = (kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1) $r1;

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label>;

        $i0 = $i0 - -2147483648;

        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label> = $i0;

        goto label02;

     label01:
        $r2 = new kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1;

        specialinvoke $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: void <init>(kotlin.coroutines.Continuation)>($r1);

     label02:
        $r3 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object result>;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label>;

        if $i0 == 0 goto label07;

        if $i0 != 1 goto label06;

        $r5 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$3>;

        $r6 = (kotlinx.coroutines.channels.ChannelIterator) $r5;

        $r5 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$2>;

        $r0 = (kotlinx.coroutines.channels.ReceiveChannel) $r5;

        $r5 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$1>;

        $r7 = (java.util.List) $r5;

        $r5 = $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$0>;

        $r8 = (java.util.List) $r5;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label04:
        goto label13;

     label05:
        $r9 := @caughtexception;

        $r10 = $r0;

        goto label21;

     label06:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;

     label07:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List createListBuilder()>();

     label08:
        $r6 = interfaceinvoke $r0.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label09:
        $r7 = $r8;

        $r10 = $r0;

     label10:
        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$0> = $r8;

        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$1> = $r7;

        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$2> = $r10;

        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$3> = $r6;

        $r2.<kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label> = 1;

        $r3 = interfaceinvoke $r6.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r2);

     label11:
        if $r3 != $r4 goto label12;

        return $r4;

     label12:
        $r0 = $r10;

     label13:
        $r12 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r3 = interfaceinvoke $r6.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

     label16:
        $r10 = $r0;

        goto label10;

     label17:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label18:
        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r0, null);

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List build(java.util.List)>($r8);

        return $r7;

     label19:
        $r9 := @caughtexception;

        goto label21;

     label20:
        $r14 := @caughtexception;

        $r10 = $r0;

        $r9 = $r14;

     label21:
        throw $r9;

     label22:
        $r15 := @caughtexception;

        staticinvoke <kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)>($r10, $r9);

        throw $r15;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label17 to label18 with label05;
        catch java.lang.Throwable from label21 to label22 with label22;
    }
}
