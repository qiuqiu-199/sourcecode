public class kotlinx.coroutines.JobSupport extends java.lang.Object implements kotlinx.coroutines.Job, kotlinx.coroutines.ChildJob, kotlinx.coroutines.ParentJob, kotlinx.coroutines.selects.SelectClause0
{
    private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU;
    private volatile java.lang.Object _parentHandle;
    private volatile java.lang.Object _state;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r0;

        $r0 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class "Lkotlinx/coroutines/JobSupport;", class "Ljava/lang/Object;", "_state");

        <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU> = $r0;

        return;
    }

    public void <init>(boolean)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        kotlinx.coroutines.Empty $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()>();

        goto label2;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()>();

     label2:
        r0.<kotlinx.coroutines.JobSupport: java.lang.Object _state> = $r1;

        r0.<kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle> = null;

        return;
    }

    public static final java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1;
        kotlinx.coroutines.JobSupport $r2;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = specialinvoke $r2.<kotlinx.coroutines.JobSupport: java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)>($r0);

        return $r1;
    }

    public static final java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
    {
        java.lang.String $r0;
        kotlinx.coroutines.JobSupport $r1;

        $r1 := @parameter0: kotlinx.coroutines.JobSupport;

        $r0 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()>();

        return $r0;
    }

    public static final void access$continueCompleting(kotlinx.coroutines.JobSupport, kotlinx.coroutines.JobSupport$Finishing, kotlinx.coroutines.ChildHandleNode, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport $r0;
        kotlinx.coroutines.JobSupport$Finishing $r1;
        kotlinx.coroutines.ChildHandleNode $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: kotlinx.coroutines.JobSupport;

        $r1 := @parameter1: kotlinx.coroutines.JobSupport$Finishing;

        $r2 := @parameter2: kotlinx.coroutines.ChildHandleNode;

        $r3 := @parameter3: java.lang.Object;

        specialinvoke $r0.<kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)>($r1, $r2, $r3);

        return;
    }

    public static final java.lang.Object access$joinSuspend(kotlinx.coroutines.JobSupport, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1;
        kotlinx.coroutines.JobSupport $r2;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = specialinvoke $r2.<kotlinx.coroutines.JobSupport: java.lang.Object joinSuspend(kotlin.coroutines.Continuation)>($r0);

        return $r1;
    }

    private final boolean addLastAtomic(java.lang.Object, kotlinx.coroutines.NodeList, kotlinx.coroutines.JobNode)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        kotlinx.coroutines.NodeList $r2;
        kotlinx.coroutines.JobNode $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r4, $r6, $r8;
        kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 $r5;
        kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp $r7;
        int $i0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlinx.coroutines.NodeList;

        $r3 := @parameter2: kotlinx.coroutines.JobNode;

        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r2;

        $r5 = new kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1;

        $r6 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r3;

        specialinvoke $r5.<kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)>($r6, r0, $r1);

        $r7 = (kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp) $r5;

     label1:
        $r8 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()>();

        $i0 = virtualinvoke $r8.<kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)>($r6, $r4, $r7);

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        goto label1;

     label2:
        return 0;

     label3:
        return 1;
    }

    private final void addSuppressedExceptions(java.lang.Throwable, java.util.List)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1, $r6, $r9;
        java.util.List $r2;
        int $i0;
        java.util.IdentityHashMap $r3;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.util.List;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 > 1 goto label1;

        return;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = new java.util.IdentityHashMap;

        specialinvoke $r3.<java.util.IdentityHashMap: void <init>(int)>($i0);

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r4);

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 != 0 goto label2;

        $r6 = $r1;

        goto label3;

     label2:
        $r6 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)>($r1);

     label3:
        $r7 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.Throwable) $r8;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        $r9 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)>($r9);

     label6:
        if $r9 == $r1 goto label4;

        if $r9 == $r6 goto label4;

        $z0 = $r9 instanceof java.util.concurrent.CancellationException;

        if $z0 != 0 goto label4;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r9);

        if $z0 == 0 goto label4;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r1, $r9);

        goto label4;

     label7:
        return;
    }

    private final java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.Continuation $r1, $r3;
        kotlinx.coroutines.JobSupport$AwaitContinuation $r2;
        kotlinx.coroutines.CancellableContinuation $r4;
        kotlinx.coroutines.ResumeAwaitOnCompletion $r5;
        kotlinx.coroutines.CancellableContinuationImpl $r6;
        kotlinx.coroutines.CompletionHandlerBase $r7;
        kotlin.jvm.functions.Function1 $r8;
        kotlinx.coroutines.DisposableHandle $r9;
        java.lang.Object $r10, $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.JobSupport$AwaitContinuation;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r1);

        specialinvoke $r2.<kotlinx.coroutines.JobSupport$AwaitContinuation: void <init>(kotlin.coroutines.Continuation,kotlinx.coroutines.JobSupport)>($r3, r0);

        virtualinvoke $r2.<kotlinx.coroutines.JobSupport$AwaitContinuation: void initCancellability()>();

        $r4 = (kotlinx.coroutines.CancellableContinuation) $r2;

        $r5 = new kotlinx.coroutines.ResumeAwaitOnCompletion;

        $r6 = (kotlinx.coroutines.CancellableContinuationImpl) $r2;

        specialinvoke $r5.<kotlinx.coroutines.ResumeAwaitOnCompletion: void <init>(kotlinx.coroutines.CancellableContinuationImpl)>($r6);

        $r7 = (kotlinx.coroutines.CompletionHandlerBase) $r5;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r8);

        staticinvoke <kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)>($r4, $r9);

        $r10 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.Object getResult()>();

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r10 != $r11 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label1:
        return $r10;
    }

    private final java.lang.Object cancelMakeCompleting(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r3;
        kotlinx.coroutines.CompletedExceptionally $r4;
        java.lang.Throwable $r5;
        kotlinx.coroutines.internal.Symbol $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r2 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label3;

        $z0 = $r2 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label2;

        $r3 = (kotlinx.coroutines.JobSupport$Finishing) $r2;

        $z0 = virtualinvoke $r3.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r4 = new kotlinx.coroutines.CompletedExceptionally;

        $r5 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)>($r1);

        specialinvoke $r4.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, 0, 2, null);

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)>($r2, $r4);

        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        if $r2 == $r6 goto label1;

        return $r2;

     label3:
        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        return $r6;
    }

    private final boolean cancelParent(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.NonDisposableHandle $r1;
        java.lang.Throwable $r2;
        boolean $z0, $z1;
        kotlinx.coroutines.ChildHandle $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: java.lang.Throwable;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof java.util.concurrent.CancellationException;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()>();

        if $r3 == null goto label4;

        $r1 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        if $r3 != $r1 goto label2;

        return $z0;

     label2:
        $z1 = interfaceinvoke $r3.<kotlinx.coroutines.ChildHandle: boolean childCancelled(java.lang.Throwable)>($r2);

        if $z1 != 0 goto label5;

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return $z0;

     label5:
        return 1;
    }

    private final void completeStateFinalization(kotlinx.coroutines.Incomplete, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Incomplete $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.ChildHandle $r3;
        kotlinx.coroutines.NonDisposableHandle $r4;
        boolean $z0;
        java.lang.Throwable $r5;
        kotlinx.coroutines.CompletedExceptionally $r6;
        kotlinx.coroutines.JobNode $r7;
        kotlinx.coroutines.CompletionHandlerException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;
        kotlinx.coroutines.NodeList $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Incomplete;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()>();

        if $r3 != null goto label01;

        goto label02;

     label01:
        interfaceinvoke $r3.<kotlinx.coroutines.ChildHandle: void dispose()>();

        $r4 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        $r3 = (kotlinx.coroutines.ChildHandle) $r4;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)>($r3);

     label02:
        $z0 = $r2 instanceof kotlinx.coroutines.CompletedExceptionally;

        $r5 = null;

        if $z0 == 0 goto label03;

        $r6 = (kotlinx.coroutines.CompletedExceptionally) $r2;

        goto label04;

     label03:
        $r6 = null;

     label04:
        if $r6 != null goto label05;

        goto label06;

     label05:
        $r5 = $r6.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

     label06:
        $z0 = $r1 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label10;

     label07:
        $r7 = (kotlinx.coroutines.JobNode) $r1;

        virtualinvoke $r7.<kotlinx.coroutines.JobNode: void invoke(java.lang.Throwable)>($r5);

     label08:
        return;

     label09:
        $r5 := @caughtexception;

        $r8 = new kotlinx.coroutines.CompletionHandlerException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in completion handler ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<kotlinx.coroutines.CompletionHandlerException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        $r5 = (java.lang.Throwable) $r8;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)>($r5);

        return;

     label10:
        $r11 = interfaceinvoke $r1.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r11 != null goto label11;

        return;

     label11:
        specialinvoke r0.<kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)>($r11, $r5);

        return;

        catch java.lang.Throwable from label07 to label08 with label09;
    }

    private final void continueCompleting(kotlinx.coroutines.JobSupport$Finishing, kotlinx.coroutines.ChildHandleNode, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r4;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        kotlinx.coroutines.ChildHandleNode $r3;
        boolean $z0;
        java.lang.AssertionError $r5;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport$Finishing;

        $r3 := @parameter1: kotlinx.coroutines.ChildHandleNode;

        $r1 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        if $r4 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $r6 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r3;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)>($r6);

        if $r3 == null goto label5;

        $z0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)>($r2, $r3, $r1);

        if $z0 == 0 goto label5;

        return;

     label5:
        $r1 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)>($r2, $r1);

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)>($r1);

        return;
    }

    private final java.lang.Throwable createCauseException(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        kotlinx.coroutines.JobCancellationException $r3;
        java.lang.String $r4;
        kotlinx.coroutines.Job $r5;
        kotlinx.coroutines.ParentJob $r6;
        java.util.concurrent.CancellationException $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = $r1 instanceof java.lang.Throwable;

     label2:
        if $z0 == 0 goto label3;

        $r2 = (java.lang.Throwable) $r1;

        if $r2 != null goto label5;

        $r3 = new kotlinx.coroutines.JobCancellationException;

        $r4 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

        $r5 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r3.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r4, null, $r5);

        $r2 = (java.lang.Throwable) $r3;

        return $r2;

     label3:
        if $r1 == null goto label4;

        $r6 = (kotlinx.coroutines.ParentJob) $r1;

        $r7 = interfaceinvoke $r6.<kotlinx.coroutines.ParentJob: java.util.concurrent.CancellationException getChildJobCancellationCause()>();

        $r2 = (java.lang.Throwable) $r7;

        return $r2;

     label4:
        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.ParentJob");

        throw $r8;

     label5:
        return $r2;
    }

    public static kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport, java.lang.String, java.lang.Throwable, int, java.lang.Object)
    {
        java.lang.String $r0;
        kotlinx.coroutines.JobSupport $r1;
        java.lang.Throwable $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        kotlinx.coroutines.JobCancellationException $r4;
        kotlinx.coroutines.Job $r5;
        java.lang.UnsupportedOperationException $r6;

        $r1 := @parameter0: kotlinx.coroutines.JobSupport;

        $r0 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        if $r3 != null goto label4;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r0 = null;

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r2 = null;

     label2:
        $r4 = new kotlinx.coroutines.JobCancellationException;

        if $r0 != null goto label3;

        $r0 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>($r1);

     label3:
        $r5 = (kotlinx.coroutines.Job) $r1;

        specialinvoke $r4.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r0, $r2, $r5);

        return $r4;

     label4:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: defaultCancellationException");

        throw $r6;
    }

    private final java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.JobSupport$Finishing $r1;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1, $z2;
        kotlinx.coroutines.CompletedExceptionally $r4;
        java.lang.Throwable $r5, $r7;
        java.util.List $r6;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r8;
        kotlinx.coroutines.Incomplete $r9;
        java.lang.AssertionError $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.JobSupport$Finishing;

        $r2 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        $z1 = 1;

        if $z0 == 0 goto label04;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        if $r3 != $r1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label03;

        goto label04;

     label03:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label04:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label06;

        $z0 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()>();

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label06:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label08;

        $z0 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        if $z0 == 0 goto label07;

        goto label08;

     label07:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label08:
        $z0 = $r2 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label09;

        $r4 = (kotlinx.coroutines.CompletedExceptionally) $r2;

        goto label10;

     label09:
        $r4 = null;

     label10:
        if $r4 != null goto label11;

        $r5 = null;

        goto label12;

     label11:
        $r5 = $r4.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

     label12:
        entermonitor $r1;

     label13:
        $z0 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        $r6 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)>($r5);

        $r7 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)>($r1, $r6);

        if $r7 == null goto label14;

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)>($r7, $r6);

     label14:
        exitmonitor $r1;

        if $r7 != null goto label15;

        goto label17;

     label15:
        if $r7 != $r5 goto label16;

        goto label17;

     label16:
        $r4 = new kotlinx.coroutines.CompletedExceptionally;

        $r2 = $r4;

        specialinvoke $r4.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r7, 0, 2, null);

     label17:
        if $r7 == null goto label21;

        $z2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)>($r7);

        if $z2 != 0 goto label19;

        $z2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)>($r7);

        if $z2 == 0 goto label18;

        goto label19;

     label18:
        $z1 = 0;

     label19:
        if $z1 == 0 goto label21;

        if $r2 == null goto label20;

        $r4 = (kotlinx.coroutines.CompletedExceptionally) $r2;

        virtualinvoke $r4.<kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()>();

        goto label21;

     label20:
        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.CompletedExceptionally");

        throw $r11;

     label21:
        if $z0 != 0 goto label22;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)>($r7);

     label22:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)>($r2);

        $r8 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)>($r2);

        $z1 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, r0, $r1, $r3);

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label24;

        if $z1 == 0 goto label23;

        goto label24;

     label23:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label24:
        $r9 = (kotlinx.coroutines.Incomplete) $r1;

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)>($r9, $r2);

        return $r2;

     label25:
        $r5 := @caughtexception;

        exitmonitor $r1;

        throw $r5;

        catch java.lang.Throwable from label13 to label14 with label25;
    }

    private final kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Incomplete $r1;
        boolean $z0;
        kotlinx.coroutines.ChildHandleNode $r2;
        kotlinx.coroutines.NodeList $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Incomplete;

        $z0 = $r1 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.ChildHandleNode) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 != null goto label4;

        $r3 = interfaceinvoke $r1.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r3 != null goto label3;

        return null;

     label3:
        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r3;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)>($r4);

     label4:
        return $r2;
    }

    private final java.lang.Throwable getExceptionOrNull(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.CompletedExceptionally $r2;
        java.lang.Throwable r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 != null goto label3;

        return null;

     label3:
        r3 = $r2.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        return r3;
    }

    private final java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing, java.util.List)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.JobSupport$Finishing $r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3, $r10, $r11;
        kotlinx.coroutines.JobCancellationException $r4;
        java.lang.String $r5;
        kotlinx.coroutines.Job $r6;
        java.lang.Throwable $r7, $r12;
        java.lang.Iterable $r8;
        java.util.Iterator $r9;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.JobSupport$Finishing;

        $r2 := @parameter1: java.util.List;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        $r3 = null;

        if $z0 == 0 goto label02;

        $z0 = virtualinvoke $r1.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        if $z0 == 0 goto label01;

        $r4 = new kotlinx.coroutines.JobCancellationException;

        $r5 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

        $r6 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r4.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r5, null, $r6);

        $r7 = (java.lang.Throwable) $r4;

        return $r7;

     label01:
        return null;

     label02:
        $r8 = (java.lang.Iterable) $r2;

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = $r10;

        $r7 = (java.lang.Throwable) $r10;

        $z0 = $r7 instanceof java.util.concurrent.CancellationException;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label03;

        goto label05;

     label04:
        $r11 = null;

     label05:
        $r7 = (java.lang.Throwable) $r11;

        if $r7 == null goto label06;

        return $r7;

     label06:
        $r10 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.Throwable) $r10;

        $z0 = $r7 instanceof kotlinx.coroutines.TimeoutCancellationException;

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.Throwable) $r10;

        if $r12 == $r7 goto label08;

        $z0 = $r12 instanceof kotlinx.coroutines.TimeoutCancellationException;

        if $z0 == 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        if $z0 == 0 goto label07;

        $r3 = $r10;

     label10:
        $r12 = (java.lang.Throwable) $r3;

        if $r12 == null goto label11;

        return $r12;

     label11:
        return $r7;
    }

    private final kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Incomplete $r1;
        kotlinx.coroutines.NodeList $r2;
        boolean $z0;
        kotlinx.coroutines.JobNode $r3;
        java.lang.String $r4;
        java.lang.IllegalStateException $r5;
        java.lang.Throwable $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Incomplete;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r2 != null goto label3;

        $z0 = $r1 instanceof kotlinx.coroutines.Empty;

        if $z0 == 0 goto label1;

        $r2 = new kotlinx.coroutines.NodeList;

        specialinvoke $r2.<kotlinx.coroutines.NodeList: void <init>()>();

        return $r2;

     label1:
        $z0 = $r1 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label2;

        $r3 = (kotlinx.coroutines.JobNode) $r1;

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)>($r3);

        return null;

     label2:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("State should have list: ", $r1);

        $r5 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r6 = (java.lang.Throwable) $r5;

        throw $r6;

     label3:
        return $r2;
    }

    private final boolean isCancelling(kotlinx.coroutines.Incomplete)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        kotlinx.coroutines.Incomplete $r1;
        kotlinx.coroutines.JobSupport$Finishing $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Incomplete;

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean joinInternal()
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: kotlinx.coroutines.JobSupport;

     label1:
        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;
    }

    private final java.lang.Object joinSuspend(kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.Continuation $r1, $r3;
        kotlinx.coroutines.CancellableContinuationImpl $r2;
        kotlinx.coroutines.CancellableContinuation $r4;
        kotlinx.coroutines.ResumeOnCompletion $r5;
        kotlinx.coroutines.CompletionHandlerBase $r6;
        kotlin.jvm.functions.Function1 $r7;
        kotlinx.coroutines.DisposableHandle $r8;
        java.lang.Object $r9, $r10;
        kotlin.Unit r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r1);

        specialinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r3, 1);

        virtualinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        $r4 = (kotlinx.coroutines.CancellableContinuation) $r2;

        $r5 = new kotlinx.coroutines.ResumeOnCompletion;

        $r3 = (kotlin.coroutines.Continuation) $r4;

        specialinvoke $r5.<kotlinx.coroutines.ResumeOnCompletion: void <init>(kotlin.coroutines.Continuation)>($r3);

        $r6 = (kotlinx.coroutines.CompletionHandlerBase) $r5;

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r7);

        staticinvoke <kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)>($r4, $r8);

        $r9 = virtualinvoke $r2.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label1:
        $r10 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r9 != $r10 goto label2;

        return $r9;

     label2:
        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r11;
    }

    private final java.lang.Void loopOnState(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        goto label1;
    }

    private final java.lang.Object makeCancelling(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r4, $r10;
        java.lang.Throwable $r2, $r3;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r5;
        kotlinx.coroutines.internal.Symbol $r6;
        kotlinx.coroutines.NodeList $r7;
        kotlinx.coroutines.Incomplete $r8;
        kotlinx.coroutines.CompletedExceptionally $r9;
        java.lang.String $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $r2 = null;

        $r3 = null;

     label01:
        $r4 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r4 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label13;

        entermonitor $r4;

     label02:
        $r5 = (kotlinx.coroutines.JobSupport$Finishing) $r4;

        $z0 = virtualinvoke $r5.<kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()>();

        if $z0 == 0 goto label04;

        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()>();

     label03:
        exitmonitor $r4;

        return $r6;

     label04:
        $r5 = (kotlinx.coroutines.JobSupport$Finishing) $r4;

        $z0 = virtualinvoke $r5.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        if $r1 != null goto label05;

        if $z0 != 0 goto label07;

     label05:
        if $r3 != null goto label06;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)>($r1);

     label06:
        $r5 = (kotlinx.coroutines.JobSupport$Finishing) $r4;

        virtualinvoke $r5.<kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)>($r3);

     label07:
        $r5 = (kotlinx.coroutines.JobSupport$Finishing) $r4;

        $r3 = virtualinvoke $r5.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

     label08:
        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label09;

        $r2 = $r3;

     label09:
        exitmonitor $r4;

        if $r2 != null goto label10;

        goto label11;

     label10:
        $r5 = (kotlinx.coroutines.JobSupport$Finishing) $r4;

        $r7 = virtualinvoke $r5.<kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()>();

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)>($r7, $r2);

     label11:
        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        return $r6;

     label12:
        $r2 := @caughtexception;

        exitmonitor $r4;

        throw $r2;

     label13:
        $z0 = $r4 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label18;

        if $r3 != null goto label14;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)>($r1);

     label14:
        $r8 = (kotlinx.coroutines.Incomplete) $r4;

        $z0 = interfaceinvoke $r8.<kotlinx.coroutines.Incomplete: boolean isActive()>();

        if $z0 == 0 goto label15;

        $z0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)>($r8, $r3);

        if $z0 == 0 goto label01;

        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        return $r6;

     label15:
        $r9 = new kotlinx.coroutines.CompletedExceptionally;

        specialinvoke $r9.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, 0, 2, null);

        $r10 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)>($r4, $r9);

        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        if $r10 == $r6 goto label17;

        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        if $r10 != $r6 goto label16;

        goto label01;

     label16:
        return $r10;

     label17:
        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Cannot happen in ", $r4);

        $r12 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        $r2 = (java.lang.Throwable) $r12;

        throw $r2;

     label18:
        $r6 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()>();

        return $r6;

        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label08 with label12;
    }

    private final kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1, boolean)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.JobNode $r2, $r4;
        kotlinx.coroutines.InvokeOnCancelling $r3;
        java.lang.AssertionError $r5;
        kotlinx.coroutines.InvokeOnCompletion $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $z0 := @parameter1: boolean;

        $r2 = null;

        if $z0 == 0 goto label03;

        $z0 = $r1 instanceof kotlinx.coroutines.JobCancellingNode;

        if $z0 == 0 goto label01;

        $r2 = (kotlinx.coroutines.JobCancellingNode) $r1;

     label01:
        if $r2 != null goto label02;

        $r3 = new kotlinx.coroutines.InvokeOnCancelling;

        specialinvoke $r3.<kotlinx.coroutines.InvokeOnCancelling: void <init>(kotlin.jvm.functions.Function1)>($r1);

        $r2 = (kotlinx.coroutines.JobCancellingNode) $r3;

     label02:
        goto label10;

     label03:
        $z0 = $r1 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label04;

        $r4 = (kotlinx.coroutines.JobNode) $r1;

        goto label05;

     label04:
        $r4 = null;

     label05:
        if $r4 != null goto label06;

        goto label09;

     label06:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label08;

        $z0 = $r4 instanceof kotlinx.coroutines.JobCancellingNode;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label07;

        goto label08;

     label07:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label08:
        $r2 = $r4;

     label09:
        if $r2 != null goto label10;

        $r6 = new kotlinx.coroutines.InvokeOnCompletion;

        specialinvoke $r6.<kotlinx.coroutines.InvokeOnCompletion: void <init>(kotlin.jvm.functions.Function1)>($r1);

        $r2 = (kotlinx.coroutines.JobNode) $r6;

     label10:
        virtualinvoke $r2.<kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)>(r0);

        return $r2;
    }

    private final kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r1, $r2;
        boolean $z0;
        kotlinx.coroutines.ChildHandleNode $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.internal.LockFreeLinkedListNode;

     label1:
        $z0 = virtualinvoke $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()>();

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        $r1 = $r2;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()>();

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        $z0 = $r2 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 == 0 goto label4;

        $r3 = (kotlinx.coroutines.ChildHandleNode) $r2;

        return $r3;

     label4:
        $z0 = $r2 instanceof kotlinx.coroutines.NodeList;

        if $z0 == 0 goto label2;

        return null;
    }

    private final void notifyCancelling(kotlinx.coroutines.NodeList, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1, $r2, $r9;
        kotlinx.coroutines.NodeList $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListHead $r4;
        java.lang.Object $r5;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r6;
        kotlinx.coroutines.CompletionHandlerException $r7;
        boolean $z0;
        kotlinx.coroutines.JobNode $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r3 := @parameter0: kotlinx.coroutines.NodeList;

        $r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)>($r1);

        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r3;

        $r5 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        $r6 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r5;

        $r7 = null;

     label01:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r4);

        if $z0 != 0 goto label08;

        $z0 = $r6 instanceof kotlinx.coroutines.JobCancellingNode;

        if $z0 == 0 goto label07;

        $r8 = (kotlinx.coroutines.JobNode) $r6;

     label02:
        virtualinvoke $r8.<kotlinx.coroutines.JobNode: void invoke(java.lang.Throwable)>($r1);

     label03:
        goto label07;

     label04:
        $r2 := @caughtexception;

        $r9 = (java.lang.Throwable) $r7;

        if $r9 != null goto label05;

        $r9 = null;

        goto label06;

     label05:
        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r9, $r2);

     label06:
        if $r9 != null goto label07;

        $r7 = new kotlinx.coroutines.CompletionHandlerException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in completion handler ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<kotlinx.coroutines.CompletionHandlerException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r2);

     label07:
        $r6 = virtualinvoke $r6.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label01;

     label08:
        $r2 = (java.lang.Throwable) $r7;

        if $r2 != null goto label09;

        goto label10;

     label09:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)>($r2);

     label10:
        specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)>($r1);

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    private final void notifyCompletion(kotlinx.coroutines.NodeList, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1, $r2, $r9;
        kotlinx.coroutines.NodeList $r3;
        kotlinx.coroutines.internal.LockFreeLinkedListHead $r4;
        java.lang.Object $r5;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r6;
        kotlinx.coroutines.CompletionHandlerException $r7;
        boolean $z0;
        kotlinx.coroutines.JobNode $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r3 := @parameter0: kotlinx.coroutines.NodeList;

        $r1 := @parameter1: java.lang.Throwable;

        $r4 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r3;

        $r5 = virtualinvoke $r4.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        $r6 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r5;

        $r7 = null;

     label1:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r4);

        if $z0 != 0 goto label8;

        $z0 = $r6 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label7;

        $r8 = (kotlinx.coroutines.JobNode) $r6;

     label2:
        virtualinvoke $r8.<kotlinx.coroutines.JobNode: void invoke(java.lang.Throwable)>($r1);

     label3:
        goto label7;

     label4:
        $r2 := @caughtexception;

        $r9 = (java.lang.Throwable) $r7;

        if $r9 != null goto label5;

        $r9 = null;

        goto label6;

     label5:
        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r9, $r2);

     label6:
        if $r9 != null goto label7;

        $r7 = new kotlinx.coroutines.CompletionHandlerException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in completion handler ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<kotlinx.coroutines.CompletionHandlerException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r2);

     label7:
        $r6 = virtualinvoke $r6.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label1;

     label8:
        $r1 = (java.lang.Throwable) $r7;

        if $r1 != null goto label9;

        return;

     label9:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)>($r1);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private final void notifyHandlers(kotlinx.coroutines.NodeList, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1, $r8, $r9;
        kotlinx.coroutines.NodeList $r2;
        kotlinx.coroutines.internal.LockFreeLinkedListHead $r3;
        java.lang.Object $r4;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r5;
        kotlinx.coroutines.CompletionHandlerException $r6;
        boolean $z0;
        kotlinx.coroutines.JobNode $r7;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.NodeList;

        $r1 := @parameter1: java.lang.Throwable;

        $r3 = (kotlinx.coroutines.internal.LockFreeLinkedListHead) $r2;

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Object getNext()>();

        $r5 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r4;

        $r6 = null;

     label1:
        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r3);

        if $z0 != 0 goto label8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "T");

        $z0 = $r5 instanceof kotlinx.coroutines.internal.LockFreeLinkedListNode;

        if $z0 == 0 goto label7;

        $r7 = (kotlinx.coroutines.JobNode) $r5;

     label2:
        virtualinvoke $r7.<kotlinx.coroutines.JobNode: void invoke(java.lang.Throwable)>($r1);

     label3:
        goto label7;

     label4:
        $r8 := @caughtexception;

        $r9 = (java.lang.Throwable) $r6;

        if $r9 != null goto label5;

        $r9 = null;

        goto label6;

     label5:
        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r9, $r8);

     label6:
        if $r9 != null goto label7;

        $r6 = new kotlinx.coroutines.CompletionHandlerException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in completion handler ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<kotlinx.coroutines.CompletionHandlerException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r8);

     label7:
        $r5 = virtualinvoke $r5.<kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        goto label1;

     label8:
        $r1 = (java.lang.Throwable) $r6;

        if $r1 != null goto label9;

        return;

     label9:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)>($r1);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private final void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Empty $r1;
        boolean $z0;
        kotlinx.coroutines.NodeList $r2;
        kotlinx.coroutines.Incomplete $r3;
        kotlinx.coroutines.InactiveNodeList $r4;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Empty;

        $r2 = new kotlinx.coroutines.NodeList;

        specialinvoke $r2.<kotlinx.coroutines.NodeList: void <init>()>();

        $z0 = virtualinvoke $r1.<kotlinx.coroutines.Empty: boolean isActive()>();

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.Incomplete) $r2;

        goto label2;

     label1:
        $r4 = new kotlinx.coroutines.InactiveNodeList;

        specialinvoke $r4.<kotlinx.coroutines.InactiveNodeList: void <init>(kotlinx.coroutines.NodeList)>($r2);

        $r3 = (kotlinx.coroutines.Incomplete) $r4;

     label2:
        $r5 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, r0, $r1, $r3);

        return;
    }

    private final void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.JobNode $r1;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r2;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r3;
        kotlinx.coroutines.NodeList $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.JobNode;

        $r4 = new kotlinx.coroutines.NodeList;

        specialinvoke $r4.<kotlinx.coroutines.NodeList: void <init>()>();

        $r3 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r4;

        virtualinvoke $r1.<kotlinx.coroutines.JobNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)>($r3);

        $r3 = virtualinvoke $r1.<kotlinx.coroutines.JobNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()>();

        $r2 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r0, $r1, $r3);

        return;
    }

    private final int startInternal(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.Empty $r2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        kotlinx.coroutines.InactiveNodeList $r4;
        kotlinx.coroutines.NodeList $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.Empty;

        if $z0 == 0 goto label3;

        $r2 = (kotlinx.coroutines.Empty) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.Empty: boolean isActive()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()>();

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r0, $r1, $r2);

        if $z0 != 0 goto label2;

        return -1;

     label2:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onStart()>();

        return 1;

     label3:
        $z0 = $r1 instanceof kotlinx.coroutines.InactiveNodeList;

        if $z0 == 0 goto label5;

        $r3 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r4 = (kotlinx.coroutines.InactiveNodeList) $r1;

        $r5 = virtualinvoke $r4.<kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()>();

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r0, $r1, $r5);

        if $z0 != 0 goto label4;

        return -1;

     label4:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onStart()>();

        return 1;

     label5:
        return 0;
    }

    private final java.lang.String stateString(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        kotlinx.coroutines.Incomplete $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label2;

        $r2 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        if $z0 == 0 goto label1;

        return "Cancelling";

     label1:
        $z0 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        if $z0 == 0 goto label6;

        return "Completing";

     label2:
        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label4;

        $r3 = (kotlinx.coroutines.Incomplete) $r1;

        $z0 = interfaceinvoke $r3.<kotlinx.coroutines.Incomplete: boolean isActive()>();

        if $z0 == 0 goto label3;

        return "Active";

     label3:
        return "New";

     label4:
        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label5;

        return "Cancelled";

     label5:
        return "Completed";

     label6:
        return "Active";
    }

    public static java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport, java.lang.Throwable, java.lang.String, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.concurrent.CancellationException $r1;
        kotlinx.coroutines.JobSupport $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        int $i0;
        java.lang.UnsupportedOperationException $r5;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport;

        $r3 := @parameter1: java.lang.Throwable;

        $r4 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r0 := @parameter4: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r4 = null;

     label1:
        $r1 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)>($r3, $r4);

        return $r1;

     label2:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: toCancellationException");

        throw $r5;
    }

    private final boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r5;
        kotlinx.coroutines.Incomplete $r2;
        boolean $z0;
        java.lang.AssertionError $r3;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.Incomplete;

        $r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label5;

        $z0 = $r2 instanceof kotlinx.coroutines.Empty;

        if $z0 != 0 goto label2;

        $z0 = $r2 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 1;

     label3:
        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label5:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label7;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label6;

        goto label7;

     label6:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label7:
        $r4 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r5 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)>($r1);

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, r0, $r2, $r5);

        if $z0 != 0 goto label8;

        return 0;

     label8:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)>(null);

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)>($r1);

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)>($r2, $r1);

        return 1;
    }

    private final boolean tryMakeCancelling(kotlinx.coroutines.Incomplete, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        kotlinx.coroutines.Incomplete $r4;
        boolean $z0;
        java.lang.AssertionError $r5;
        kotlinx.coroutines.NodeList $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r4 := @parameter0: kotlinx.coroutines.Incomplete;

        $r1 := @parameter1: java.lang.Throwable;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label2;

        $z0 = $r4 instanceof kotlinx.coroutines.JobSupport$Finishing;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        $z0 = interfaceinvoke $r4.<kotlinx.coroutines.Incomplete: boolean isActive()>();

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $r6 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)>($r4);

        if $r6 != null goto label5;

        return 0;

     label5:
        $r2 = new kotlinx.coroutines.JobSupport$Finishing;

        specialinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)>($r6, 0, $r1);

        $r3 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r0, $r4, $r2);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        specialinvoke r0.<kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)>($r6, $r1);

        return 1;
    }

    private final java.lang.Object tryMakeCompleting(java.lang.Object, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r2;
        boolean $z0;
        kotlinx.coroutines.internal.Symbol $r3;
        kotlinx.coroutines.Incomplete $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r2 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        return $r3;

     label1:
        $z0 = $r2 instanceof kotlinx.coroutines.Empty;

        if $z0 != 0 goto label2;

        $z0 = $r2 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label4;

     label2:
        $z0 = $r2 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z0 != 0 goto label4;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 != 0 goto label4;

        $r4 = (kotlinx.coroutines.Incomplete) $r2;

        $z0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)>($r4, $r1);

        if $z0 == 0 goto label3;

        return $r1;

     label3:
        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        return $r3;

     label4:
        $r4 = (kotlinx.coroutines.Incomplete) $r2;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)>($r4, $r1);

        return $r2;
    }

    private final java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        kotlinx.coroutines.Incomplete $r2;
        kotlinx.coroutines.NodeList $r3;
        kotlinx.coroutines.internal.Symbol $r4;
        boolean $z0, $z1;
        java.lang.Throwable $r5, $r10;
        kotlinx.coroutines.JobSupport$Finishing $r6;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r7;
        java.lang.AssertionError $r8;
        kotlinx.coroutines.CompletedExceptionally $r9;
        kotlin.Unit $r11;
        kotlinx.coroutines.ChildHandleNode $r12;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.Incomplete;

        $r1 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)>($r2);

        if $r3 != null goto label01;

        $r4 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        return $r4;

     label01:
        $z0 = $r2 instanceof kotlinx.coroutines.JobSupport$Finishing;

        $r5 = null;

        if $z0 == 0 goto label02;

        $r6 = (kotlinx.coroutines.JobSupport$Finishing) $r2;

        goto label03;

     label02:
        $r6 = null;

     label03:
        if $r6 != null goto label04;

        $r6 = new kotlinx.coroutines.JobSupport$Finishing;

        specialinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)>($r3, 0, null);

     label04:
        entermonitor $r6;

     label05:
        $z0 = virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        if $z0 == 0 goto label07;

        $r4 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

     label06:
        exitmonitor $r6;

        return $r4;

     label07:
        virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)>(1);

        if $r6 == $r2 goto label09;

        $r7 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, r0, $r2, $r6);

        if $z0 != 0 goto label09;

        $r4 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

     label08:
        exitmonitor $r6;

        return $r4;

     label09:
        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()>();

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label10;

        goto label11;

     label10:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label11:
        $z0 = virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        $z1 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z1 == 0 goto label12;

        $r9 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        goto label13;

     label12:
        $r9 = null;

     label13:
        if $r9 != null goto label14;

        goto label15;

     label14:
        $r10 = $r9.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)>($r10);

     label15:
        $z0 = 1 ^ $z0;

        if $z0 == 0 goto label16;

        $r5 = virtualinvoke $r6.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

     label16:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label17:
        exitmonitor $r6;

        if $r5 != null goto label18;

        goto label19;

     label18:
        specialinvoke r0.<kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)>($r3, $r5);

     label19:
        $r12 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)>($r2);

        if $r12 == null goto label20;

        $z0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)>($r6, $r12, $r1);

        if $z0 == 0 goto label20;

        $r4 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>;

        return $r4;

     label20:
        $r1 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)>($r6, $r1);

        return $r1;

     label21:
        $r5 := @caughtexception;

        exitmonitor $r6;

        throw $r5;

        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label17 with label21;
    }

    private final boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing, kotlinx.coroutines.ChildHandleNode, java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        kotlinx.coroutines.ChildHandleNode $r3, $r12;
        kotlinx.coroutines.ChildJob $r4;
        kotlinx.coroutines.Job $r5;
        kotlinx.coroutines.JobSupport$ChildCompletion $r6;
        kotlinx.coroutines.CompletionHandlerBase $r7;
        kotlin.jvm.functions.Function1 $r8;
        kotlinx.coroutines.DisposableHandle $r9;
        kotlinx.coroutines.NonDisposableHandle $r10;
        kotlinx.coroutines.internal.LockFreeLinkedListNode $r11;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.JobSupport$Finishing;

        $r3 := @parameter1: kotlinx.coroutines.ChildHandleNode;

        $r1 := @parameter2: java.lang.Object;

     label1:
        $r4 = $r3.<kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob>;

        $r5 = (kotlinx.coroutines.Job) $r4;

        $r6 = new kotlinx.coroutines.JobSupport$ChildCompletion;

        specialinvoke $r6.<kotlinx.coroutines.JobSupport$ChildCompletion: void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)>(r0, $r2, $r3, $r1);

        $r7 = (kotlinx.coroutines.CompletionHandlerBase) $r6;

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r5, 0, 0, $r8, 1, null);

        $r10 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        if $r9 == $r10 goto label2;

        return 1;

     label2:
        $r11 = (kotlinx.coroutines.internal.LockFreeLinkedListNode) $r3;

        $r12 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)>($r11);

        $r3 = $r12;

        if $r12 != null goto label1;

        return 0;
    }

    protected void afterCompletion(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    public final kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlinx.coroutines.ChildJob $r2;
        kotlinx.coroutines.Job $r3;
        kotlinx.coroutines.ChildHandleNode $r4;
        kotlinx.coroutines.CompletionHandlerBase $r5;
        kotlin.jvm.functions.Function1 $r6;
        kotlinx.coroutines.ChildHandle $r7;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlinx.coroutines.ChildJob;

        $r3 = (kotlinx.coroutines.Job) r0;

        $r4 = new kotlinx.coroutines.ChildHandleNode;

        specialinvoke $r4.<kotlinx.coroutines.ChildHandleNode: void <init>(kotlinx.coroutines.ChildJob)>($r2);

        $r5 = (kotlinx.coroutines.CompletionHandlerBase) $r4;

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r1 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r3, 1, 0, $r6, 2, null);

        $r7 = (kotlinx.coroutines.ChildHandle) $r1;

        return $r7;
    }

    public final java.lang.Object awaitInternal$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;
        boolean $z0;
        kotlinx.coroutines.CompletedExceptionally $r3;
        java.lang.Throwable $r4;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r5;
        int $i0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r2 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label5;

        $z0 = $r2 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label4;

        $r3 = (kotlinx.coroutines.CompletedExceptionally) $r2;

        $r4 = $r3.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label3;

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 != 0 goto label2;

        throw $r4;

     label2:
        $r5 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r1;

        $r4 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r4, $r5);

        throw $r4;

     label3:
        throw $r4;

     label4:
        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)>($r2);

        return $r2;

     label5:
        $i0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)>($r2);

        if $i0 < 0 goto label1;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)>($r1);

        return $r2;
    }

    public void cancel()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel(kotlinx.coroutines.Job)>(r0);

        return;
    }

    public void cancel(java.util.concurrent.CancellationException)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.JobCancellationException $r1;
        java.lang.String $r2;
        java.util.concurrent.CancellationException $r3;
        kotlinx.coroutines.Job $r4;
        java.lang.Throwable $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r3 := @parameter0: java.util.concurrent.CancellationException;

        if $r3 != null goto label1;

        $r1 = new kotlinx.coroutines.JobCancellationException;

        $r2 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

        $r4 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r1.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r2, null, $r4);

        $r3 = (java.util.concurrent.CancellationException) $r1;

     label1:
        $r5 = (java.lang.Throwable) $r3;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)>($r5);

        return;
    }

    public boolean cancel(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.JobCancellationException $r2;
        java.lang.String $r3;
        kotlinx.coroutines.Job $r4;
        java.util.concurrent.CancellationException $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        if $r1 != null goto label1;

        $r2 = new kotlinx.coroutines.JobCancellationException;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

        $r4 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r2.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r3, null, $r4);

        $r5 = (java.util.concurrent.CancellationException) $r2;

        goto label2;

     label1:
        $r5 = staticinvoke <kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)>(r0, $r1, null, 1, null);

     label2:
        $r1 = (java.lang.Throwable) $r5;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)>($r1);

        return 1;
    }

    public final boolean cancelCoroutine(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)>($r1);

        return $z0;
    }

    public final boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r3, $r4;
        kotlinx.coroutines.internal.Symbol $r2;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)>($r1);

        $r3 = $r4;

        $r2 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>;

        if $r4 != $r2 goto label1;

        return 1;

     label1:
        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        if $r3 != $r2 goto label2;

        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)>($r1);

     label2:
        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        if $r3 != $r2 goto label3;

        return 1;

     label3:
        $r2 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>;

        if $r3 != $r2 goto label4;

        return 1;

     label4:
        $r2 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()>();

        if $r3 != $r2 goto label5;

        return 0;

     label5:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)>($r3);

        return 1;
    }

    public void cancelInternal(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)>($r1);

        return;
    }

    protected java.lang.String cancellationExceptionMessage()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        return "Job was cancelled";
    }

    public boolean childCancelled(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        $z0 = $r1 instanceof java.util.concurrent.CancellationException;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public final kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core(java.lang.String, java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;
        kotlinx.coroutines.JobCancellationException $r2;
        java.lang.String $r3;
        kotlinx.coroutines.Job $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = new kotlinx.coroutines.JobCancellationException;

        if $r3 != null goto label1;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

     label1:
        $r4 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r2.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r3, $r1, $r4);

        return $r2;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        kotlinx.coroutines.Job $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = (kotlinx.coroutines.Job) r0;

        $r2 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)>($r3, $r2, $r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        kotlinx.coroutines.Job $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r3 = (kotlinx.coroutines.Job) r0;

        $r1 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)>($r3, $r2);

        return $r1;
    }

    public final java.util.concurrent.CancellationException getCancellationException()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        java.util.concurrent.CancellationException $r5;
        java.lang.IllegalStateException $r6;
        kotlinx.coroutines.CompletedExceptionally $r7;
        kotlinx.coroutines.JobCancellationException $r8;
        kotlinx.coroutines.Job $r9;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label2;

        $r2 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r3 == null goto label1;

        $r4 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r4, " is cancelling");

        $r5 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)>($r3, $r4);

        return $r5;

     label1:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Job is still new or active: ", r0);

        $r6 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r3 = (java.lang.Throwable) $r6;

        throw $r3;

     label2:
        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label4;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label3;

        $r7 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $r3 = $r7.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $r5 = staticinvoke <kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)>(r0, $r3, null, 1, null);

        return $r5;

     label3:
        $r8 = new kotlinx.coroutines.JobCancellationException;

        $r4 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r4, " has completed normally");

        $r9 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r8.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r4, null, $r9);

        $r5 = (java.util.concurrent.CancellationException) $r8;

        return $r5;

     label4:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Job is still new or active: ", r0);

        $r6 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r3 = (java.lang.Throwable) $r6;

        throw $r3;
    }

    public java.util.concurrent.CancellationException getChildJobCancellationCause()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.concurrent.CancellationException $r2;
        kotlinx.coroutines.JobSupport$Finishing $r3;
        java.lang.Throwable $r4;
        kotlinx.coroutines.CompletedExceptionally $r5;
        kotlinx.coroutines.JobCancellationException $r6;
        java.lang.String $r7;
        kotlinx.coroutines.Job $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        $r2 = null;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        goto label3;

     label1:
        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label2;

        $r5 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $r4 = $r5.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        goto label3;

     label2:
        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label5;

        $r4 = null;

     label3:
        $z0 = $r4 instanceof java.util.concurrent.CancellationException;

        if $z0 == 0 goto label4;

        $r2 = (java.util.concurrent.CancellationException) $r4;

     label4:
        if $r2 != null goto label6;

        $r6 = new kotlinx.coroutines.JobCancellationException;

        $r7 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)>($r1);

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Parent job is ", $r7);

        $r8 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r6.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r7, $r4, $r8);

        $r2 = (java.util.concurrent.CancellationException) $r6;

        return $r2;

     label5:
        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Cannot be cancelling child in this state: ", $r1);

        $r9 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r4 = (java.lang.Throwable) $r9;

        throw $r4;

     label6:
        return $r2;
    }

    public final kotlin.sequences.Sequence getChildren()
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.sequences.Sequence $r1;
        kotlinx.coroutines.JobSupport$children$1 $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 = new kotlinx.coroutines.JobSupport$children$1;

        specialinvoke $r2.<kotlinx.coroutines.JobSupport$children$1: void <init>(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)>($r3);

        return $r1;
    }

    public final java.lang.Object getCompletedInternal$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.CompletedExceptionally $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)>($r1);

        return $r1;

     label1:
        $r2 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $r3 = $r2.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        throw $r3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = "This job has not completed yet";

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        $r3 = (java.lang.Throwable) $r4;

        throw $r3;
    }

    protected final java.lang.Throwable getCompletionCause()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;
        java.lang.IllegalStateException $r5;
        kotlinx.coroutines.CompletedExceptionally $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label2;

        $r2 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $r3 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Job is still new or active: ", r0);

        $r5 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r3 = (java.lang.Throwable) $r5;

        throw $r3;

     label2:
        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label4;

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label3;

        $r6 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $r3 = $r6.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        return $r3;

     label3:
        return null;

     label4:
        $r4 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Job is still new or active: ", r0);

        $r5 = new java.lang.IllegalStateException;

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r3 = (java.lang.Throwable) $r5;

        throw $r3;
    }

    protected final boolean getCompletionCauseHandled()
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.CompletedExceptionally $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.CompletedExceptionally) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.CompletedExceptionally: boolean getHandled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final java.lang.Throwable getCompletionExceptionOrNull()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)>($r1);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = "This job has not completed yet";

        $r4 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        $r2 = (java.lang.Throwable) $r3;

        throw $r2;
    }

    public boolean getHandlesException$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        return 1;
    }

    public final kotlin.coroutines.CoroutineContext$Key getKey()
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Job$Key $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = <kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key>;

        $r2 = (kotlin.coroutines.CoroutineContext$Key) $r1;

        return $r2;
    }

    public boolean getOnCancelComplete$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        return 0;
    }

    public final kotlinx.coroutines.selects.SelectClause0 getOnJoin()
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.selects.SelectClause0 $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = (kotlinx.coroutines.selects.SelectClause0) r0;

        return $r1;
    }

    public final kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        kotlinx.coroutines.ChildHandle $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = r0.<kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle>;

        $r2 = (kotlinx.coroutines.ChildHandle) $r1;

        return $r2;
    }

    public final java.lang.Object getState$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.internal.OpDescriptor $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

     label1:
        $r1 = r0.<kotlinx.coroutines.JobSupport: java.lang.Object _state>;

        $z0 = $r1 instanceof kotlinx.coroutines.internal.OpDescriptor;

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r2 = (kotlinx.coroutines.internal.OpDescriptor) $r1;

        virtualinvoke $r2.<kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)>(r0);

        goto label1;
    }

    protected boolean handleJobException(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        return 0;
    }

    public void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        throw $r1;
    }

    protected final void initParentJob(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Job $r1;
        boolean $z0;
        kotlinx.coroutines.ChildHandle $r2;
        java.lang.AssertionError $r3;
        kotlinx.coroutines.NonDisposableHandle $r4;
        kotlinx.coroutines.ChildJob $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()>();

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        if $r1 != null goto label5;

        $r4 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        $r2 = (kotlinx.coroutines.ChildHandle) $r4;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)>($r2);

        return;

     label5:
        interfaceinvoke $r1.<kotlinx.coroutines.Job: boolean start()>();

        $r5 = (kotlinx.coroutines.ChildJob) r0;

        $r2 = interfaceinvoke $r1.<kotlinx.coroutines.Job: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)>($r5);

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)>($r2);

        $z0 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean isCompleted()>();

        if $z0 == 0 goto label6;

        interfaceinvoke $r2.<kotlinx.coroutines.ChildHandle: void dispose()>();

        $r4 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        $r2 = (kotlinx.coroutines.ChildHandle) $r4;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)>($r2);

     label6:
        return;
    }

    public final kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)>(0, 1, $r2);

        return $r1;
    }

    public final kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean, boolean, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0, $z1, $z2;
        kotlinx.coroutines.JobNode $r2, $r10;
        java.lang.Object $r3;
        kotlinx.coroutines.Empty $r4;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r5;
        kotlinx.coroutines.DisposableHandle $r6;
        java.lang.Throwable $r7, $r13;
        kotlinx.coroutines.Incomplete $r8;
        kotlinx.coroutines.NodeList $r9;
        java.lang.NullPointerException $r11;
        kotlinx.coroutines.JobSupport$Finishing $r12;
        kotlin.Unit $r14;
        kotlinx.coroutines.CompletedExceptionally $r15;
        kotlinx.coroutines.NonDisposableHandle $r16;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)>($r1, $z0);

     label01:
        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z2 = $r3 instanceof kotlinx.coroutines.Empty;

        if $z2 == 0 goto label03;

        $r4 = (kotlinx.coroutines.Empty) $r3;

        $z2 = virtualinvoke $r4.<kotlinx.coroutines.Empty: boolean isActive()>();

        if $z2 == 0 goto label02;

        $r5 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $z2 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, r0, $r3, $r2);

        if $z2 == 0 goto label01;

        $r6 = (kotlinx.coroutines.DisposableHandle) $r2;

        return $r6;

     label02:
        specialinvoke r0.<kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)>($r4);

        goto label01;

     label03:
        $z2 = $r3 instanceof kotlinx.coroutines.Incomplete;

        $r7 = null;

        if $z2 == 0 goto label19;

        $r8 = (kotlinx.coroutines.Incomplete) $r3;

        $r9 = interfaceinvoke $r8.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r9 != null goto label05;

        if $r3 == null goto label04;

        $r10 = (kotlinx.coroutines.JobNode) $r3;

        specialinvoke r0.<kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)>($r10);

        goto label01;

     label04:
        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlinx.coroutines.JobNode");

        throw $r11;

     label05:
        $r6 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        if $z0 == 0 goto label16;

        $z2 = $r3 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z2 == 0 goto label16;

        entermonitor $r3;

     label06:
        $r12 = (kotlinx.coroutines.JobSupport$Finishing) $r3;

        $r13 = virtualinvoke $r12.<kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()>();

        $r7 = $r13;

        if $r13 == null goto label07;

        $z2 = $r1 instanceof kotlinx.coroutines.ChildHandleNode;

        if $z2 == 0 goto label13;

        $r12 = (kotlinx.coroutines.JobSupport$Finishing) $r3;

        $z2 = virtualinvoke $r12.<kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()>();

        if $z2 != 0 goto label13;

     label07:
        $z2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)>($r3, $r9, $r2);

     label08:
        if $z2 != 0 goto label09;

        exitmonitor $r3;

        goto label01;

     label09:
        if $r13 != null goto label12;

     label10:
        $r6 = (kotlinx.coroutines.DisposableHandle) $r2;

     label11:
        exitmonitor $r3;

        return $r6;

     label12:
        $r6 = $r2;

     label13:
        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label14:
        exitmonitor $r3;

        goto label16;

     label15:
        $r7 := @caughtexception;

        exitmonitor $r3;

        throw $r7;

     label16:
        if $r7 == null goto label18;

        if $z1 == 0 goto label17;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

     label17:
        return $r6;

     label18:
        $z2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)>($r3, $r9, $r2);

        if $z2 == 0 goto label01;

        $r6 = (kotlinx.coroutines.DisposableHandle) $r2;

        return $r6;

     label19:
        if $z1 == 0 goto label24;

        $z0 = $r3 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label20;

        $r15 = (kotlinx.coroutines.CompletedExceptionally) $r3;

        goto label21;

     label20:
        $r15 = null;

     label21:
        if $r15 != null goto label22;

        goto label23;

     label22:
        $r7 = $r15.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

     label23:
        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

     label24:
        $r16 = <kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE>;

        $r6 = (kotlinx.coroutines.DisposableHandle) $r16;

        return $r6;

        catch java.lang.Throwable from label06 to label08 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean isActive()
    {
        kotlinx.coroutines.JobSupport r0;
        boolean $z0;
        java.lang.Object $r1;
        kotlinx.coroutines.Incomplete $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.Incomplete) $r1;

        $z0 = interfaceinvoke $r2.<kotlinx.coroutines.Incomplete: boolean isActive()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isCancelled()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;
        kotlinx.coroutines.JobSupport$Finishing $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 != 0 goto label2;

        $z0 = $r1 instanceof kotlinx.coroutines.JobSupport$Finishing;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.JobSupport$Finishing) $r1;

        $z0 = virtualinvoke $r2.<kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public final boolean isCompleted()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.Incomplete;

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public final boolean isCompletedExceptionally()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r1 instanceof kotlinx.coroutines.CompletedExceptionally;

        return $z0;
    }

    protected boolean isScopedCoroutine()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        return 0;
    }

    public final java.lang.Object join(kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        kotlin.coroutines.CoroutineContext $r2;
        java.lang.Object $r3, $r4;
        kotlin.Unit r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: boolean joinInternal()>();

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)>($r2);

        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;

     label1:
        $r3 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object joinSuspend(kotlin.coroutines.Continuation)>($r1);

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r3 != $r4 goto label2;

        return $r3;

     label2:
        r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r5;
    }

    public final boolean makeCompleting$kotlinx_coroutines_core(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.internal.Symbol $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        if $r2 != $r3 goto label2;

        return 0;

     label2:
        $r3 = <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN>;

        if $r2 != $r3 goto label3;

        return 1;

     label3:
        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        if $r2 != $r3 goto label4;

        goto label1;

     label4:
        virtualinvoke r0.<kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)>($r2);

        return 1;
    }

    public final java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.internal.Symbol $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()>();

        if $r2 == $r3 goto label3;

        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()>();

        if $r2 != $r3 goto label2;

        goto label1;

     label2:
        return $r2;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already complete or completing, but is being completed with ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r7);

        throw $r4;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        kotlinx.coroutines.Job $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r3 = (kotlinx.coroutines.Job) r0;

        $r1 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)>($r3, $r2);

        return $r1;
    }

    public java.lang.String nameString$kotlinx_coroutines_core()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.String $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)>(r0);

        return $r1;
    }

    protected void onCancelling(java.lang.Throwable)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        return;
    }

    protected void onCompletionInternal(java.lang.Object)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    protected void onStart()
    {
        kotlinx.coroutines.JobSupport r0;

        r0 := @this: kotlinx.coroutines.JobSupport;

        return;
    }

    public final void parentCancelled(kotlinx.coroutines.ParentJob)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.ParentJob $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.ParentJob;

        virtualinvoke r0.<kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)>($r1);

        return;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.Job $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = (kotlinx.coroutines.Job) r0;

        $r1 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)>($r2, $r1);

        return $r1;
    }

    public kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.Job $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r1 = staticinvoke <kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)>(r0, $r1);

        return $r1;
    }

    public final void registerSelectClause0(kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.selects.SelectInstance $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        boolean $z0;
        kotlin.coroutines.Continuation $r4;
        int $i0;
        kotlinx.coroutines.SelectJoinOnCompletion $r5;
        kotlinx.coroutines.CompletionHandlerBase $r6;
        kotlinx.coroutines.DisposableHandle $r7;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectInstance;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

     label1:
        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: boolean isSelected()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = $r3 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label3;

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: boolean trySelect()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r2, $r4);

        return;

     label3:
        $i0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)>($r3);

        if $i0 != 0 goto label1;

        $r5 = new kotlinx.coroutines.SelectJoinOnCompletion;

        specialinvoke $r5.<kotlinx.coroutines.SelectJoinOnCompletion: void <init>(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function1)>($r1, $r2);

        $r6 = (kotlinx.coroutines.CompletionHandlerBase) $r5;

        $r2 = (kotlin.jvm.functions.Function1) $r6;

        $r7 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r2);

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)>($r7);

     label4:
        return;
    }

    public final void registerSelectClause1Internal$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.selects.SelectInstance $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        boolean $z0;
        kotlinx.coroutines.CompletedExceptionally $r4;
        java.lang.Throwable $r5;
        kotlin.coroutines.Continuation $r6;
        int $i0;
        kotlinx.coroutines.SelectAwaitOnCompletion $r7;
        kotlinx.coroutines.CompletionHandlerBase $r8;
        kotlin.jvm.functions.Function1 $r9;
        kotlinx.coroutines.DisposableHandle $r10;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectInstance;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

     label1:
        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: boolean isSelected()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $z0 = $r3 instanceof kotlinx.coroutines.Incomplete;

        if $z0 != 0 goto label4;

        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: boolean trySelect()>();

        if $z0 == 0 goto label5;

        $z0 = $r3 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label3;

        $r4 = (kotlinx.coroutines.CompletedExceptionally) $r3;

        $r5 = $r4.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)>($r5);

        return;

     label3:
        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)>($r2, $r3, $r6);

        return;

     label4:
        $i0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)>($r3);

        if $i0 != 0 goto label1;

        $r7 = new kotlinx.coroutines.SelectAwaitOnCompletion;

        specialinvoke $r7.<kotlinx.coroutines.SelectAwaitOnCompletion: void <init>(kotlinx.coroutines.selects.SelectInstance,kotlin.jvm.functions.Function2)>($r1, $r2);

        $r8 = (kotlinx.coroutines.CompletionHandlerBase) $r7;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r10 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r9);

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void disposeOnSelect(kotlinx.coroutines.DisposableHandle)>($r10);

     label5:
        return;
    }

    public final void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.JobNode $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.concurrent.atomic.AtomicReferenceFieldUpdater $r3;
        kotlinx.coroutines.Empty $r4;
        kotlinx.coroutines.Incomplete $r5;
        kotlinx.coroutines.NodeList $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.JobNode;

     label1:
        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r2 instanceof kotlinx.coroutines.JobNode;

        if $z0 == 0 goto label3;

        if $r2 == $r1 goto label2;

        return;

     label2:
        $r3 = <kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU>;

        $r4 = staticinvoke <kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()>();

        $z0 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0: boolean m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object)>($r3, r0, $r2, $r4);

        if $z0 == 0 goto label1;

        return;

     label3:
        $z0 = $r2 instanceof kotlinx.coroutines.Incomplete;

        if $z0 == 0 goto label4;

        $r5 = (kotlinx.coroutines.Incomplete) $r2;

        $r6 = interfaceinvoke $r5.<kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()>();

        if $r6 == null goto label4;

        virtualinvoke $r1.<kotlinx.coroutines.JobNode: boolean remove()>();

     label4:
        return;
    }

    public final void selectAwaitCompletion$kotlinx_coroutines_core(kotlinx.coroutines.selects.SelectInstance, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.selects.SelectInstance $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        boolean $z0;
        kotlinx.coroutines.CompletedExceptionally $r4;
        java.lang.Throwable $r5;
        kotlin.coroutines.Continuation $r6;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.selects.SelectInstance;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $z0 = $r3 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label1;

        $r4 = (kotlinx.coroutines.CompletedExceptionally) $r3;

        $r5 = $r4.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: void resumeSelectWithException(java.lang.Throwable)>($r5);

        return;

     label1:
        $r3 = staticinvoke <kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)>($r3);

        $r6 = interfaceinvoke $r1.<kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.Continuation getCompletion()>();

        staticinvoke <kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, $r3, $r6, null, 4, null);

        return;
    }

    public final void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
    {
        kotlinx.coroutines.JobSupport r0;
        kotlinx.coroutines.ChildHandle $r1;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: kotlinx.coroutines.ChildHandle;

        r0.<kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle> = $r1;

        return;
    }

    public final boolean start()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: kotlinx.coroutines.JobSupport;

     label1:
        $r1 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $i0 = specialinvoke r0.<kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)>($r1);

        if $i0 == 0 goto label3;

        if $i0 == 1 goto label2;

        goto label1;

     label2:
        return 1;

     label3:
        return 0;
    }

    protected final java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable, java.lang.String)
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;
        boolean $z0;
        java.util.concurrent.CancellationException $r3;
        kotlinx.coroutines.JobCancellationException $r4;
        kotlinx.coroutines.Job $r5;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $z0 = $r1 instanceof java.util.concurrent.CancellationException;

        if $z0 == 0 goto label1;

        $r3 = (java.util.concurrent.CancellationException) $r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 != null goto label4;

        $r4 = new kotlinx.coroutines.JobCancellationException;

        if $r2 != null goto label3;

        $r2 = staticinvoke <kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)>(r0);

     label3:
        $r5 = (kotlinx.coroutines.Job) r0;

        specialinvoke $r4.<kotlinx.coroutines.JobCancellationException: void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)>($r2, $r1, $r5);

        $r3 = (java.util.concurrent.CancellationException) $r4;

     label4:
        return $r3;
    }

    public final java.lang.String toDebugString()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Object $r3;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r3 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()>();

        $r2 = specialinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.JobSupport r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: kotlinx.coroutines.JobSupport;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<kotlinx.coroutines.JobSupport: java.lang.String toDebugString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r2 = staticinvoke <kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
