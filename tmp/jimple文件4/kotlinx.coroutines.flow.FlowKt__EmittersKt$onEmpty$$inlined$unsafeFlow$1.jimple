public final class kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 extends java.lang.Object implements kotlinx.coroutines.flow.Flow
{
    final kotlin.jvm.functions.Function2 $action$inlined;
    final kotlinx.coroutines.flow.Flow $this_onEmpty$inlined;

    public void <init>(kotlinx.coroutines.flow.Flow, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.Flow $r1;
        kotlin.jvm.functions.Function2 $r2;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        $r2 := @parameter1: kotlin.jvm.functions.Function2;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 r0;
        kotlinx.coroutines.flow.FlowCollector $r1, $r13;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1 $r3;
        int $i0;
        java.lang.Object $r4, $r5, $r9;
        kotlinx.coroutines.flow.internal.SafeCollector $r6;
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r8;
        kotlin.jvm.internal.Ref$BooleanRef $r10;
        kotlinx.coroutines.flow.Flow $r11;
        kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$lambda-5$$inlined$collect$1 $r12;
        kotlin.coroutines.CoroutineContext $r14;
        kotlin.jvm.functions.Function2 $r15;
        kotlin.Unit r16;

        r0 := @this: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1;

        if $z0 == 0 goto label01;

        $r3 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label01;

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = $i0;

        goto label02;

     label01:
        $r3 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: void <init>(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label02:
        $r4 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label>;

        if $i0 == 0 goto label08;

        if $i0 == 1 goto label07;

        if $i0 != 2 goto label06;

        $r5 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        $r6 = (kotlinx.coroutines.flow.internal.SafeCollector) $r5;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label04:
        goto label12;

     label05:
        $r7 := @caughtexception;

        goto label13;

     label06:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;

     label07:
        $r9 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2>;

        $r10 = (kotlin.jvm.internal.Ref$BooleanRef) $r9;

        $r9 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1>;

        $r1 = (kotlinx.coroutines.flow.FlowCollector) $r9;

        $r9 = $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0>;

        r0 = (kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1) $r9;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label09;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r10 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r10.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        $r10.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        $r11 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined>;

        $r12 = new kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$lambda-5$$inlined$collect$1;

        specialinvoke $r12.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$lambda-5$$inlined$collect$1: void <init>(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)>($r10, $r1);

        $r13 = (kotlinx.coroutines.flow.FlowCollector) $r12;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = r0;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = $r1;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = $r10;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = 1;

        $r4 = interfaceinvoke $r11.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r13, $r3);

        if $r4 != $r5 goto label09;

        return $r5;

     label09:
        $z0 = $r10.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 == 0 goto label14;

        $r6 = new kotlinx.coroutines.flow.internal.SafeCollector;

        $r14 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke $r6.<kotlinx.coroutines.flow.internal.SafeCollector: void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)>($r1, $r14);

     label10:
        $r15 = r0.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined>;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0> = $r6;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1> = null;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2> = null;

        $r3.<kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label> = 2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(6);

        $r4 = interfaceinvoke $r15.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r3);

        staticinvoke <kotlin.jvm.internal.InlineMarker: void mark(int)>(7);

     label11:
        if $r4 != $r5 goto label12;

        return $r5;

     label12:
        virtualinvoke $r6.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        goto label14;

     label13:
        virtualinvoke $r6.<kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()>();

        throw $r7;

     label14:
        r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r16;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
    }
}
