public final class kotlinx.coroutines.YieldKt extends java.lang.Object
{

    public static final java.lang.Object yield(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, $r2;
        kotlin.coroutines.CoroutineContext $r1, $r8;
        boolean $z0;
        kotlinx.coroutines.internal.DispatchedContinuation $r3;
        java.lang.Object $r4, $r9;
        kotlinx.coroutines.CoroutineDispatcher $r5;
        kotlin.Unit $r6;
        kotlinx.coroutines.YieldContext $r7;

        $r0 := @parameter0: kotlin.coroutines.Continuation;

        $r1 = interfaceinvoke $r0.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        staticinvoke <kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)>($r1);

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>($r0);

        $z0 = $r2 instanceof kotlinx.coroutines.internal.DispatchedContinuation;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.internal.DispatchedContinuation) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 != null goto label3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label7;

     label3:
        $r5 = $r3.<kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher>;

        $z0 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)>($r1);

        if $z0 == 0 goto label4;

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r1, $r6);

        goto label6;

     label4:
        $r7 = new kotlinx.coroutines.YieldContext;

        specialinvoke $r7.<kotlinx.coroutines.YieldContext: void <init>()>();

        $r8 = (kotlin.coroutines.CoroutineContext) $r7;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r8);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        virtualinvoke $r3.<kotlinx.coroutines.internal.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r1, $r6);

        $z0 = $r7.<kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined>;

        if $z0 == 0 goto label6;

        $z0 = staticinvoke <kotlinx.coroutines.internal.DispatchedContinuationKt: boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation)>($r3);

        if $z0 == 0 goto label5;

        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        goto label7;

     label5:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label7;

     label6:
        $r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

     label7:
        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r9 goto label8;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r0);

     label8:
        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r9 goto label9;

        return $r4;

     label9:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }
}
