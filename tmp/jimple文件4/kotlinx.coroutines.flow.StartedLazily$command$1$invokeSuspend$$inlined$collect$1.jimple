public final class kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1 extends java.lang.Object implements kotlinx.coroutines.flow.FlowCollector
{
    final kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined;
    final kotlin.jvm.internal.Ref$BooleanRef $started$inlined;

    public void <init>(kotlin.jvm.internal.Ref$BooleanRef, kotlinx.coroutines.flow.FlowCollector)
    {
        kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1 r0;
        kotlin.jvm.internal.Ref$BooleanRef $r1;
        kotlinx.coroutines.flow.FlowCollector $r2;

        r0 := @this: kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$BooleanRef;

        $r2 := @parameter1: kotlinx.coroutines.flow.FlowCollector;

        r0.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$BooleanRef $started$inlined> = $r1;

        r0.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1 r0;
        java.lang.Object $r1, $r4, $r5;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1 $r3;
        int $i0;
        java.lang.IllegalStateException $r6;
        java.lang.Number $r7;
        kotlin.jvm.internal.Ref$BooleanRef $r8;
        kotlinx.coroutines.flow.FlowCollector $r9;
        kotlinx.coroutines.flow.SharingCommand $r10;
        kotlin.Unit r11;

        r0 := @this: kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = $r2 instanceof kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1;

        if $z0 == 0 goto label1;

        $r3 = (kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1) $r2;

        $i0 = $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i0 = $i0 & -2147483648;

        if $i0 == 0 goto label1;

        $i0 = $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: int label>;

        $i0 = $i0 - -2147483648;

        $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: int label> = $i0;

        goto label2;

     label1:
        $r3 = new kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1;

        specialinvoke $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: void <init>(kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1,kotlin.coroutines.Continuation)>(r0, $r2);

     label2:
        $r4 = $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: java.lang.Object result>;

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: int label>;

        if $i0 == 0 goto label4;

        if $i0 != 1 goto label3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        goto label5;

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        $r2 = (kotlin.coroutines.Continuation) $r3;

        $r7 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        if $i0 <= 0 goto label5;

        $r8 = r0.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$BooleanRef $started$inlined>;

        $z0 = $r8.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 != 0 goto label5;

        $r8 = r0.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1: kotlin.jvm.internal.Ref$BooleanRef $started$inlined>;

        $r8.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        $r9 = r0.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined>;

        $r10 = <kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand START>;

        $r3.<kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1: int label> = 1;

        $r1 = interfaceinvoke $r9.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>($r10, $r3);

        if $r1 != $r5 goto label5;

        return $r5;

     label5:
        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r11;
    }
}
