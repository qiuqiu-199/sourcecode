public final class kotlinx.coroutines.channels.BroadcastKt extends java.lang.Object
{

    public static final kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2)
    {
        kotlinx.coroutines.CoroutineStart $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.CoroutineContext $r4;
        int $i0;
        kotlinx.coroutines.channels.BroadcastChannel $r5;
        boolean $z0;
        kotlinx.coroutines.channels.LazyBroadcastCoroutine $r6;
        kotlinx.coroutines.channels.BroadcastCoroutine $r7;

        $r3 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r4 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter2: int;

        $r0 := @parameter3: kotlinx.coroutines.CoroutineStart;

        $r1 := @parameter4: kotlin.jvm.functions.Function1;

        $r2 := @parameter5: kotlin.jvm.functions.Function2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r3, $r4);

        $r5 = staticinvoke <kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.channels.BroadcastChannel BroadcastChannel(int)>($i0);

        $z0 = virtualinvoke $r0.<kotlinx.coroutines.CoroutineStart: boolean isLazy()>();

        if $z0 == 0 goto label1;

        $r6 = new kotlinx.coroutines.channels.LazyBroadcastCoroutine;

        specialinvoke $r6.<kotlinx.coroutines.channels.LazyBroadcastCoroutine: void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function2)>($r4, $r5, $r2);

        $r7 = (kotlinx.coroutines.channels.BroadcastCoroutine) $r6;

        goto label2;

     label1:
        $r7 = new kotlinx.coroutines.channels.BroadcastCoroutine;

        specialinvoke $r7.<kotlinx.coroutines.channels.BroadcastCoroutine: void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,boolean)>($r4, $r5, 1);

     label2:
        if $r1 == null goto label3;

        virtualinvoke $r7.<kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r1);

     label3:
        virtualinvoke $r7.<kotlinx.coroutines.channels.BroadcastCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)>($r0, $r7, $r2);

        $r5 = (kotlinx.coroutines.channels.BroadcastChannel) $r7;

        return $r5;
    }

    public static final kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.channels.ReceiveChannel, int, kotlinx.coroutines.CoroutineStart)
    {
        int $i0;
        kotlinx.coroutines.CoroutineStart $r0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        kotlinx.coroutines.GlobalScope $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlinx.coroutines.CoroutineDispatcher $r4;
        kotlin.coroutines.CoroutineContext $r5;
        kotlinx.coroutines.CoroutineExceptionHandler$Key $r6;
        kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1 $r7;
        kotlinx.coroutines.CoroutineExceptionHandler $r8;
        kotlinx.coroutines.channels.BroadcastKt$broadcast$1 $r9;
        kotlin.jvm.functions.Function1 $r10;
        kotlinx.coroutines.channels.BroadcastKt$broadcast$2 $r11;
        kotlin.jvm.functions.Function2 $r12;
        kotlinx.coroutines.channels.BroadcastChannel $r13;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlinx.coroutines.CoroutineStart;

        $r2 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getUnconfined()>();

        $r5 = (kotlin.coroutines.CoroutineContext) $r4;

        $r3 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r3, $r5);

        $r6 = <kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key>;

        $r7 = new kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1;

        specialinvoke $r7.<kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1: void <init>(kotlinx.coroutines.CoroutineExceptionHandler$Key)>($r6);

        $r8 = (kotlinx.coroutines.CoroutineExceptionHandler) $r7;

        $r5 = (kotlin.coroutines.CoroutineContext) $r8;

        $r3 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)>($r3, $r5);

        $r9 = new kotlinx.coroutines.channels.BroadcastKt$broadcast$1;

        specialinvoke $r9.<kotlinx.coroutines.channels.BroadcastKt$broadcast$1: void <init>(kotlinx.coroutines.channels.ReceiveChannel)>($r1);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r11 = new kotlinx.coroutines.channels.BroadcastKt$broadcast$2;

        specialinvoke $r11.<kotlinx.coroutines.channels.BroadcastKt$broadcast$2: void <init>(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>($r1, null);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        $r13 = staticinvoke <kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, null, $i0, $r0, $r10, $r12, 1, null);

        return $r13;
    }

    public static kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext, int, kotlinx.coroutines.CoroutineStart, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1, $i2;
        kotlin.coroutines.CoroutineContext $r1;
        kotlinx.coroutines.CoroutineStart $r2;
        kotlinx.coroutines.channels.BroadcastChannel $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r6;
        kotlin.coroutines.EmptyCoroutineContext $r7;

        $r4 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        $i1 := @parameter2: int;

        $r2 := @parameter3: kotlinx.coroutines.CoroutineStart;

        $r5 := @parameter4: kotlin.jvm.functions.Function1;

        $r0 := @parameter5: kotlin.jvm.functions.Function2;

        $i0 := @parameter6: int;

        $r6 := @parameter7: java.lang.Object;

        $i2 = $i0 & 1;

        if $i2 == 0 goto label1;

        $r7 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r1 = (kotlin.coroutines.CoroutineContext) $r7;

     label1:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label2;

        $i1 = 1;

     label2:
        $i2 = $i0 & 4;

        if $i2 == 0 goto label3;

        $r2 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY>;

     label3:
        $i0 = $i0 & 8;

        if $i0 == 0 goto label4;

        $r5 = null;

     label4:
        $r3 = staticinvoke <kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)>($r4, $r1, $i1, $r2, $r5, $r0);

        return $r3;
    }

    public static kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.channels.ReceiveChannel, int, kotlinx.coroutines.CoroutineStart, int, java.lang.Object)
    {
        kotlinx.coroutines.channels.BroadcastChannel $r0;
        kotlinx.coroutines.channels.ReceiveChannel $r1;
        int $i0, $i1, $i2;
        kotlinx.coroutines.CoroutineStart $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: kotlinx.coroutines.channels.ReceiveChannel;

        $i0 := @parameter1: int;

        $r2 := @parameter2: kotlinx.coroutines.CoroutineStart;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $i0 = 1;

     label1:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label2;

        $r2 = <kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY>;

     label2:
        $r0 = staticinvoke <kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart)>($r1, $i0, $r2);

        return $r0;
    }
}
