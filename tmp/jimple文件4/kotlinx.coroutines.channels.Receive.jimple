public abstract class kotlinx.coroutines.channels.Receive extends kotlinx.coroutines.internal.LockFreeLinkedListNode implements kotlinx.coroutines.channels.ReceiveOrClosed
{

    public void <init>()
    {
        kotlinx.coroutines.channels.Receive r0;

        r0 := @this: kotlinx.coroutines.channels.Receive;

        specialinvoke r0.<kotlinx.coroutines.internal.LockFreeLinkedListNode: void <init>()>();

        return;
    }

    public volatile java.lang.Object getOfferResult()
    {
        kotlinx.coroutines.channels.Receive r0;
        kotlinx.coroutines.internal.Symbol $r1;

        r0 := @this: kotlinx.coroutines.channels.Receive;

        $r1 = virtualinvoke r0.<kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()>();

        return $r1;
    }

    public kotlinx.coroutines.internal.Symbol getOfferResult()
    {
        kotlinx.coroutines.channels.Receive r0;
        kotlinx.coroutines.internal.Symbol r1;

        r0 := @this: kotlinx.coroutines.channels.Receive;

        r1 = <kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS>;

        return r1;
    }

    public kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
    {
        kotlinx.coroutines.channels.Receive r0;
        java.lang.Object $r1;

        r0 := @this: kotlinx.coroutines.channels.Receive;

        $r1 := @parameter0: java.lang.Object;

        return null;
    }

    public abstract void resumeReceiveClosed(kotlinx.coroutines.channels.Closed);
}
