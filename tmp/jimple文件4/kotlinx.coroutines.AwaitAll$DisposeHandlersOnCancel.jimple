final class kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel extends kotlinx.coroutines.CancelHandler
{
    private final kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes;
    final kotlinx.coroutines.AwaitAll this$0;

    public void <init>(kotlinx.coroutines.AwaitAll, kotlinx.coroutines.AwaitAll$AwaitAllNode[])
    {
        kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel r0;
        kotlinx.coroutines.AwaitAll $r1;
        kotlinx.coroutines.AwaitAll$AwaitAllNode[] $r2;

        r0 := @this: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel;

        $r1 := @parameter0: kotlinx.coroutines.AwaitAll;

        $r2 := @parameter1: kotlinx.coroutines.AwaitAll$AwaitAllNode[];

        r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll this$0> = $r1;

        specialinvoke r0.<kotlinx.coroutines.CancelHandler: void <init>()>();

        r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes> = $r2;

        return;
    }

    public final void disposeAll()
    {
        kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel r0;
        kotlinx.coroutines.AwaitAll$AwaitAllNode[] $r1;
        int $i0, $i1;
        kotlinx.coroutines.DisposableHandle $r2;
        kotlinx.coroutines.AwaitAll$AwaitAllNode $r3;

        r0 := @this: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel;

        $r1 = r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes>;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r1[$i1];

        $r2 = virtualinvoke $r3.<kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.DisposableHandle getHandle()>();

        interfaceinvoke $r2.<kotlinx.coroutines.DisposableHandle: void dispose()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        kotlin.Unit r3;

        r0 := @this: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) $r1;

        virtualinvoke r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void invoke(java.lang.Throwable)>($r2);

        r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r3;
    }

    public void invoke(java.lang.Throwable)
    {
        kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel r0;
        java.lang.Throwable $r1;

        r0 := @this: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel;

        $r1 := @parameter0: java.lang.Throwable;

        virtualinvoke r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void disposeAll()>();

        return;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        kotlinx.coroutines.AwaitAll$AwaitAllNode[] $r3;

        r0 := @this: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisposeHandlersOnCancel[");

        $r3 = r0.<kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
