public final class kotlinx.coroutines.flow.SharingStartedKt extends java.lang.Object
{

    public static final kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I(kotlinx.coroutines.flow.SharingStarted$Companion, long, long)
    {
        kotlinx.coroutines.flow.SharingStarted$Companion $r0;
        long $l0, $l1;
        kotlinx.coroutines.flow.StartedWhileSubscribed $r1;
        kotlinx.coroutines.flow.SharingStarted $r2;

        $r0 := @parameter0: kotlinx.coroutines.flow.SharingStarted$Companion;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $r1 = new kotlinx.coroutines.flow.StartedWhileSubscribed;

        $l0 = staticinvoke <kotlin.time.Duration: long getInWholeMilliseconds-impl(long)>($l0);

        $l1 = staticinvoke <kotlin.time.Duration: long getInWholeMilliseconds-impl(long)>($l1);

        specialinvoke $r1.<kotlinx.coroutines.flow.StartedWhileSubscribed: void <init>(long,long)>($l0, $l1);

        $r2 = (kotlinx.coroutines.flow.SharingStarted) $r1;

        return $r2;
    }

    public static kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I$default(kotlinx.coroutines.flow.SharingStarted$Companion, long, long, int, java.lang.Object)
    {
        kotlinx.coroutines.flow.SharingStarted$Companion $r0;
        long $l0, $l1;
        int $i2, $i3;
        java.lang.Object $r1;
        kotlin.time.Duration$Companion $r2;
        kotlinx.coroutines.flow.SharingStarted $r3;

        $r0 := @parameter0: kotlinx.coroutines.flow.SharingStarted$Companion;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.Object;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $r2 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $l0 = virtualinvoke $r2.<kotlin.time.Duration$Companion: long getZERO-UwyO8pc()>();

     label1:
        $i2 = $i2 & 2;

        if $i2 == 0 goto label2;

        $r2 = <kotlin.time.Duration: kotlin.time.Duration$Companion Companion>;

        $l1 = virtualinvoke $r2.<kotlin.time.Duration$Companion: long getINFINITE-UwyO8pc()>();

     label2:
        $r3 = staticinvoke <kotlinx.coroutines.flow.SharingStartedKt: kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I(kotlinx.coroutines.flow.SharingStarted$Companion,long,long)>($r0, $l0, $l1);

        return $r3;
    }
}
